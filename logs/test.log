09:54 LOG: DEBUG[SpringJUnit4ClassRunner constructor called with [class repository.HotelRepositoryTest]]
09:54 LOG: DEBUG[Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]]
09:54 LOG: DEBUG[Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]]
09:54 LOG: DEBUG[Instantiating TestContextBootstrapper for test class [repository.HotelRepositoryTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]]
09:54 LOG: TRACE[Retrieved @ContextConfiguration [@org.springframework.test.context.ContextConfiguration(name=, value=[], loader=interface org.springframework.test.context.ContextLoader, classes=[class config.TestConfig], locations=[], initializers=[], inheritLocations=true, inheritInitializers=true)] for declaring class [repository.HotelRepositoryTest].]
09:54 LOG: TRACE[Resolved context configuration attributes: [ContextConfigurationAttributes@335b5620 declaringClass = 'repository.HotelRepositoryTest', classes = '{class config.TestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']]
09:54 LOG: TRACE[Resolving ContextLoader for context configuration attributes [ContextConfigurationAttributes@335b5620 declaringClass = 'repository.HotelRepositoryTest', classes = '{class config.TestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']]
09:54 LOG: TRACE[Using ContextLoader class [org.springframework.test.context.support.DelegatingSmartContextLoader] for test class [repository.HotelRepositoryTest]]
09:54 LOG: TRACE[Processing locations and classes for context configuration attributes [ContextConfigurationAttributes@335b5620 declaringClass = 'repository.HotelRepositoryTest', classes = '{class config.TestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']]
09:54 LOG: DEBUG[Delegating to AnnotationConfigContextLoader to process context configuration [ContextConfigurationAttributes@335b5620 declaringClass = 'repository.HotelRepositoryTest', classes = '{class config.TestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].]
09:54 LOG: TRACE[Loaded [org.springframework.test.context.ContextCustomizerFactory] names: [org.springframework.test.context.web.socket.MockServerContainerContextCustomizerFactory]]
09:54 LOG: TRACE[Processing context initializers for configuration attributes [ContextConfigurationAttributes@335b5620 declaringClass = 'repository.HotelRepositoryTest', classes = '{class config.TestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']]
09:54 LOG: DEBUG[Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [repository.HotelRepositoryTest]]
09:54 LOG: DEBUG[@TestExecutionListeners is not present for class [repository.HotelRepositoryTest]: using defaults.]
09:54 LOG: INFO [Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]]
09:54 LOG: DEBUG[Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]]
09:54 LOG: INFO [Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@76012793, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@635572a7, org.springframework.test.context.support.DirtiesContextTestExecutionListener@79d94571, org.springframework.test.context.transaction.TransactionalTestExecutionListener@4dd02341, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3212a8d7]]
09:54 LOG: TRACE[Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@76012793]
09:54 LOG: TRACE[Registering TestExecutionListener: org.springframework.test.context.support.DependencyInjectionTestExecutionListener@635572a7]
09:54 LOG: TRACE[Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextTestExecutionListener@79d94571]
09:54 LOG: TRACE[Registering TestExecutionListener: org.springframework.test.context.transaction.TransactionalTestExecutionListener@4dd02341]
09:54 LOG: TRACE[Registering TestExecutionListener: org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3212a8d7]
09:54 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [repository.HotelRepositoryTest]]
09:54 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [repository.HotelRepositoryTest]]
09:54 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [repository.HotelRepositoryTest]]
09:54 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [repository.HotelRepositoryTest]]
09:54 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [repository.HotelRepositoryTest]]
09:54 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [repository.HotelRepositoryTest]]
09:54 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [repository.HotelRepositoryTest]]
09:54 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [repository.HotelRepositoryTest]]
09:54 LOG: TRACE[beforeTestClass(): class [repository.HotelRepositoryTest]]
09:54 LOG: DEBUG[Before test class: context [DefaultTestContext@1d3ac898 testClass = HotelRepositoryTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1b73be9f testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].]
09:54 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [repository.HotelRepositoryTest]]
09:54 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [repository.HotelRepositoryTest]]
09:54 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
09:54 LOG: TRACE[prepareTestInstance(): instance [repository.HotelRepositoryTest@2320fa6f]]
09:54 LOG: DEBUG[Performing dependency injection for test context [[DefaultTestContext@1d3ac898 testClass = HotelRepositoryTest, testInstance = repository.HotelRepositoryTest@2320fa6f, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1b73be9f testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].]
09:54 LOG: DEBUG[Delegating to AnnotationConfigContextLoader to load context from [MergedContextConfiguration@1b73be9f testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].]
09:54 LOG: DEBUG[Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@1b73be9f testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].]
09:54 LOG: DEBUG[Activating profiles []]
09:54 LOG: DEBUG[Registering annotated classes: {class config.TestConfig}]
09:54 LOG: TRACE[Refreshing org.springframework.context.support.GenericApplicationContext@1a9c38eb, started on Wed Feb 20 09:54:46 MSK 2019]
09:54 LOG: DEBUG[Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor']
09:54 LOG: TRACE[Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor']
09:54 LOG: TRACE[Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references]
09:54 LOG: TRACE[Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor']
09:54 LOG: TRACE[Registering bean definition for @Bean method config.TestConfig.getDataSource()]
09:54 LOG: TRACE[Registering bean definition for @Bean method config.TestConfig.getJdbcTemplate()]
09:54 LOG: TRACE[Registering bean definition for @Bean method config.TestConfig.userRepository()]
09:54 LOG: TRACE[Registering bean definition for @Bean method config.TestConfig.hotelRepository()]
09:54 LOG: TRACE[Registering bean definition for @Bean method config.TestConfig.userDataContext()]
09:54 LOG: TRACE[Registering bean definition for @Bean method config.TestConfig.hotelDataContext()]
09:54 LOG: TRACE[Successfully enhanced config.TestConfig; enhanced class name is: config.TestConfig$$EnhancerBySpringCGLIB$$48472a0c]
09:54 LOG: TRACE[Replacing bean definition 'testConfig' existing class 'config.TestConfig' with enhanced class 'config.TestConfig$$EnhancerBySpringCGLIB$$48472a0c']
09:54 LOG: DEBUG[Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor']
09:54 LOG: TRACE[Creating instance of bean 'org.springframework.context.event.internalEventListenerProcessor']
09:54 LOG: TRACE[Eagerly caching bean 'org.springframework.context.event.internalEventListenerProcessor' to allow for resolving potential circular references]
09:54 LOG: TRACE[Finished creating instance of bean 'org.springframework.context.event.internalEventListenerProcessor']
09:54 LOG: DEBUG[Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory']
09:54 LOG: TRACE[Creating instance of bean 'org.springframework.context.event.internalEventListenerFactory']
09:54 LOG: TRACE[Eagerly caching bean 'org.springframework.context.event.internalEventListenerFactory' to allow for resolving potential circular references]
09:54 LOG: TRACE[Finished creating instance of bean 'org.springframework.context.event.internalEventListenerFactory']
09:54 LOG: DEBUG[Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor']
09:54 LOG: TRACE[Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor']
09:54 LOG: TRACE[Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references]
09:54 LOG: TRACE[Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor']
09:54 LOG: DEBUG[Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor']
09:54 LOG: TRACE[Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor']
09:54 LOG: TRACE[Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references]
09:54 LOG: TRACE[Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor']
09:54 LOG: TRACE[No 'messageSource' bean, using [Empty MessageSource]]
09:54 LOG: TRACE[No 'applicationEventMulticaster' bean, using [SimpleApplicationEventMulticaster]]
09:54 LOG: TRACE[Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2756c0a7: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,testConfig,getDataSource,getJdbcTemplate,userRepository,hotelRepository,userDataContext,hotelDataContext]; root of factory hierarchy]
09:54 LOG: TRACE[Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor']
09:54 LOG: TRACE[Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor']
09:54 LOG: TRACE[Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor']
09:54 LOG: TRACE[Returning cached instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor']
09:54 LOG: TRACE[Returning cached instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory']
09:54 LOG: DEBUG[Creating shared instance of singleton bean 'testConfig']
09:54 LOG: TRACE[Creating instance of bean 'testConfig']
09:54 LOG: TRACE[Eagerly caching bean 'testConfig' to allow for resolving potential circular references]
09:54 LOG: TRACE[Finished creating instance of bean 'testConfig']
09:54 LOG: DEBUG[Creating shared instance of singleton bean 'getDataSource']
09:54 LOG: TRACE[Creating instance of bean 'getDataSource']
09:54 LOG: TRACE[Returning cached instance of singleton bean 'testConfig']
09:54 LOG: INFO [Starting embedded database: url='jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa']
09:54 LOG: DEBUG[Fetching JDBC Connection from DataSource]
09:54 LOG: DEBUG[Creating new JDBC Driver Connection to [jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false]]
09:54 LOG: DEBUG[Executing SQL script from class path resource [db/migration/V1__init_schema.sql]]
09:54 LOG: DEBUG[0 returned as update count for SQL: CREATE TYPE TOUR_TYPE AS ENUM ( 'bus', 'sightseeing', 'shore_excursion', 'adventure', 'sporting', 'cruise', 'escorted', 'guided', 'rail', 'extreme' )]
09:54 LOG: DEBUG[0 returned as update count for SQL: CREATE TYPE HOTEL_FEATURE AS ENUM ( 'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning', 'food_delivery', 'pool', 'conference_hall', 'safe' )]
09:54 LOG: DEBUG[0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS "user" ( id SERIAL, login VARCHAR(255) UNIQUE NOT NULL, password VARCHAR(255) NOT NULL, PRIMARY KEY (id) )]
09:54 LOG: DEBUG[0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS "hotel" ( id SERIAL, name VARCHAR(255) NOT NULL, stars SMALLINT NOT NULL, website VARCHAR(255) NOT NULL, latitude DECIMAL(8, 6) NOT NULL, longitude DECIMAL(8, 6) NOT NULL, feature HOTEL_FEATURE NOT NULL, PRIMARY KEY (id) )]
09:54 LOG: DEBUG[0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS "country" ( id SERIAL, name VARCHAR(255), PRIMARY KEY (id) )]
09:54 LOG: DEBUG[0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS "tour" ( id SERIAL, photo VARCHAR(255), date DATE NOT NULL, duration INT NOT NULL, description TEXT NOT NULL, cost DECIMAL(19, 3) NOT NULL, tour_type TOUR_TYPE NOT NULL, hotel_id INT NOT NULL, country_id INT NOT NULL, PRIMARY KEY (id), FOREIGN KEY (hotel_id) REFERENCES "hotel" (id), FOREIGN KEY (country_id) REFERENCES "country" (id) )]
09:54 LOG: DEBUG[0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS "usertour" ( user_id INT UNIQUE NOT NULL, tour_id INT UNIQUE NOT NULL, PRIMARY KEY (user_id, tour_id), FOREIGN KEY (user_id) REFERENCES "user" (id), FOREIGN KEY (tour_id) REFERENCES "tour" (id) )]
09:54 LOG: DEBUG[0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS "review" ( id SERIAL, date DATE NOT NULL, text TEXT NOT NULL, user_id INT NOT NULL, tour_id INT NOT NULL, PRIMARY KEY (id), FOREIGN KEY (user_id) REFERENCES "user" (id), FOREIGN KEY (tour_id) REFERENCES "tour" (id) ) ]
09:54 LOG: DEBUG[Executed SQL script from class path resource [db/migration/V1__init_schema.sql] in 65 ms.]
09:54 LOG: DEBUG[Executing SQL script from class path resource [db/migration/V1_1__init_data.sql]]
09:54 LOG: DEBUG[1 returned as update count for SQL: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
09:54 LOG: DEBUG[1 returned as update count for SQL: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
09:54 LOG: DEBUG[1 returned as update count for SQL: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
09:54 LOG: DEBUG[1 returned as update count for SQL: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
09:54 LOG: DEBUG[Executed SQL script from class path resource [db/migration/V1_1__init_data.sql] in 8 ms.]
09:54 LOG: TRACE[Eagerly caching bean 'getDataSource' to allow for resolving potential circular references]
09:54 LOG: TRACE[Finished creating instance of bean 'getDataSource']
09:54 LOG: DEBUG[Creating shared instance of singleton bean 'getJdbcTemplate']
09:54 LOG: TRACE[Creating instance of bean 'getJdbcTemplate']
09:54 LOG: TRACE[Returning cached instance of singleton bean 'testConfig']
09:54 LOG: TRACE[Returning cached instance of singleton bean 'getDataSource']
09:54 LOG: TRACE[Eagerly caching bean 'getJdbcTemplate' to allow for resolving potential circular references]
09:54 LOG: TRACE[Invoking afterPropertiesSet() on bean with name 'getJdbcTemplate']
09:54 LOG: TRACE[Finished creating instance of bean 'getJdbcTemplate']
09:54 LOG: DEBUG[Creating shared instance of singleton bean 'userRepository']
09:54 LOG: TRACE[Creating instance of bean 'userRepository']
09:54 LOG: TRACE[Returning cached instance of singleton bean 'testConfig']
09:54 LOG: TRACE[Loaded [org.springframework.beans.BeanInfoFactory] names: [org.springframework.beans.ExtendedBeanInfoFactory]]
09:54 LOG: TRACE[Getting BeanInfo for class [com.epam.travelagency.repository.UserRepository]]
09:54 LOG: TRACE[Caching PropertyDescriptors for class [com.epam.travelagency.repository.UserRepository]]
09:54 LOG: TRACE[Found bean property 'class' of type [java.lang.Class]]
09:54 LOG: TRACE[Found bean property 'dataContext' of type [com.epam.travelagency.storage.DataContext]]
09:54 LOG: TRACE[Registered injected element on class [com.epam.travelagency.repository.UserRepository]: AutowiredMethodElement for public void com.epam.travelagency.repository.Repository.setDataContext(com.epam.travelagency.storage.DataContext)]
09:54 LOG: TRACE[Eagerly caching bean 'userRepository' to allow for resolving potential circular references]
09:54 LOG: TRACE[Processing injected element of bean 'userRepository': AutowiredMethodElement for public void com.epam.travelagency.repository.Repository.setDataContext(com.epam.travelagency.storage.DataContext)]
09:54 LOG: DEBUG[Creating shared instance of singleton bean 'userDataContext']
09:54 LOG: TRACE[Creating instance of bean 'userDataContext']
09:54 LOG: TRACE[Returning cached instance of singleton bean 'testConfig']
09:54 LOG: TRACE[Returning cached instance of singleton bean 'getJdbcTemplate']
09:54 LOG: TRACE[Eagerly caching bean 'userDataContext' to allow for resolving potential circular references]
09:54 LOG: TRACE[Finished creating instance of bean 'userDataContext']
09:54 LOG: TRACE[Autowiring by type from bean name 'userRepository' to bean named 'userDataContext']
09:54 LOG: TRACE[Finished creating instance of bean 'userRepository']
09:54 LOG: DEBUG[Creating shared instance of singleton bean 'hotelRepository']
09:54 LOG: TRACE[Creating instance of bean 'hotelRepository']
09:54 LOG: TRACE[Returning cached instance of singleton bean 'testConfig']
09:54 LOG: TRACE[Getting BeanInfo for class [com.epam.travelagency.repository.HotelRepository]]
09:54 LOG: TRACE[Caching PropertyDescriptors for class [com.epam.travelagency.repository.HotelRepository]]
09:54 LOG: TRACE[Found bean property 'class' of type [java.lang.Class]]
09:54 LOG: TRACE[Found bean property 'dataContext' of type [com.epam.travelagency.storage.DataContext]]
09:54 LOG: TRACE[Registered injected element on class [com.epam.travelagency.repository.HotelRepository]: AutowiredMethodElement for public void com.epam.travelagency.repository.Repository.setDataContext(com.epam.travelagency.storage.DataContext)]
09:54 LOG: TRACE[Eagerly caching bean 'hotelRepository' to allow for resolving potential circular references]
09:54 LOG: TRACE[Processing injected element of bean 'hotelRepository': AutowiredMethodElement for public void com.epam.travelagency.repository.Repository.setDataContext(com.epam.travelagency.storage.DataContext)]
09:54 LOG: DEBUG[Creating shared instance of singleton bean 'hotelDataContext']
09:54 LOG: TRACE[Creating instance of bean 'hotelDataContext']
09:54 LOG: TRACE[Returning cached instance of singleton bean 'testConfig']
09:54 LOG: TRACE[Returning cached instance of singleton bean 'getJdbcTemplate']
09:54 LOG: TRACE[Eagerly caching bean 'hotelDataContext' to allow for resolving potential circular references]
09:54 LOG: TRACE[Finished creating instance of bean 'hotelDataContext']
09:54 LOG: TRACE[Autowiring by type from bean name 'hotelRepository' to bean named 'hotelDataContext']
09:54 LOG: TRACE[Finished creating instance of bean 'hotelRepository']
09:54 LOG: TRACE[Returning cached instance of singleton bean 'userDataContext']
09:54 LOG: TRACE[Returning cached instance of singleton bean 'hotelDataContext']
09:54 LOG: TRACE[No @EventListener annotations found on bean class: config.TestConfig$$EnhancerBySpringCGLIB$$48472a0c]
09:54 LOG: TRACE[No @EventListener annotations found on bean class: com.epam.travelagency.repository.UserRepository]
09:54 LOG: TRACE[No @EventListener annotations found on bean class: com.epam.travelagency.repository.HotelRepository]
09:54 LOG: TRACE[No @EventListener annotations found on bean class: com.epam.travelagency.storage.posgresql.UserDataContext]
09:54 LOG: TRACE[No @EventListener annotations found on bean class: com.epam.travelagency.storage.posgresql.HotelDataContext]
09:54 LOG: TRACE[No @EventListener annotations found on bean class: java.util.Properties]
09:54 LOG: TRACE[No @EventListener annotations found on bean class: java.util.Collections$UnmodifiableMap]
09:54 LOG: TRACE[No 'lifecycleProcessor' bean, using [DefaultLifecycleProcessor]]
09:54 LOG: TRACE[Returning cached instance of singleton bean 'lifecycleProcessor']
09:54 LOG: TRACE[Searching for key 'spring.liveBeansView.mbeanDomain' in PropertySource 'systemProperties']
09:54 LOG: TRACE[Searching for key 'spring.liveBeansView.mbeanDomain' in PropertySource 'systemEnvironment']
09:54 LOG: TRACE[Could not find key 'spring.liveBeansView.mbeanDomain' in any property source]
09:54 LOG: DEBUG[Storing ApplicationContext in cache under key [[MergedContextConfiguration@1b73be9f testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]]
09:54 LOG: DEBUG[Spring test ApplicationContext cache statistics: [DefaultContextCache@1a5b8489 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 0, missCount = 1]]
09:54 LOG: TRACE[Processing injected element of bean 'repository.HotelRepositoryTest': AutowiredFieldElement for private com.epam.travelagency.repository.HotelRepository repository.HotelRepositoryTest.hotelRepository]
09:54 LOG: TRACE[Returning cached instance of singleton bean 'hotelRepository']
09:54 LOG: TRACE[Autowiring by type from bean name 'repository.HotelRepositoryTest' to bean named 'hotelRepository']
09:54 LOG: INFO [Detected a Windows x86_64 system]
09:54 LOG: INFO [Postgres binaries at C:\Users\valik\AppData\Local\Temp\embedded-pg\PG-91c1fa33789b0c913345bf0253da6836]
09:54 LOG: TRACE[f06e3be4-7291-4cc0-8756-1dce27562cba postgres data directory is C:\Users\valik\AppData\Local\Temp\epg10303131873445132532]
09:54 LOG: INFO [The files belonging to this database system will be owned by user "valik".]
09:54 LOG: INFO [This user must also own the server process.]
09:54 LOG: INFO []
09:54 LOG: INFO [The database cluster will be initialized with locale "Russian_Belarus.1251".]
09:54 LOG: INFO [The default text search configuration will be set to "russian".]
09:54 LOG: INFO []
09:54 LOG: INFO [Data page checksums are disabled.]
09:54 LOG: INFO []
09:54 LOG: INFO [fixing permissions on existing directory C:/Users/valik/AppData/Local/Temp/epg10303131873445132532 ... ok]
09:54 LOG: INFO [creating subdirectories ... ok]
09:54 LOG: INFO [selecting default max_connections ... 100]
09:54 LOG: INFO [selecting default shared_buffers ... 128MB]
09:54 LOG: INFO [selecting dynamic shared memory implementation ... windows]
09:54 LOG: INFO [creating configuration files ... ok]
09:54 LOG: INFO [running bootstrap script ... ok]
09:54 LOG: INFO [performing post-bootstrap initialization ... ok]
09:54 LOG: INFO [syncing data to disk ... ok]
09:54 LOG: INFO []
09:54 LOG: INFO [Success. You can now start the database server using:]
09:54 LOG: INFO []
09:54 LOG: INFO [    C:/Users/valik/AppData/Local/Temp/embedded-pg/PG-91c1fa33789b0c913345bf0253da6836/bin/pg_ctl -D ^"C^:^\Users^\valik^\AppData^\Local^\Temp^\epg10303131873445132532^" -l logfile start]
09:54 LOG: INFO []
09:54 LOG: INFO [f06e3be4-7291-4cc0-8756-1dce27562cba initdb completed in 00:00:07.377]
09:54 LOG: INFO [f06e3be4-7291-4cc0-8756-1dce27562cba postmaster started as Process[pid=3248, exitValue="not exited"] on port 49758.  Waiting up to PT10S for server startup to finish.]
09:54 LOG: INFO [waiting for server to start....2019-02-20 09:54:55.271 +03 [3872] ���������:  ��� ����� ����������� �� ������ IPv6 "::1" ������ ���� 49758]
09:54 LOG: INFO [2019-02-20 09:54:55.271 +03 [3872] ���������:  ��� ����� ����������� �� ������ IPv4 "127.0.0.1" ������ ���� 49758]
09:54 LOG: INFO [2019-02-20 09:54:55.364 +03 [6536] ���������:  ������� �� ���� ���������: 2019-02-20 09:54:54 +03]
09:54 LOG: INFO [2019-02-20 09:54:55.429 +03 [3872] ���������:  ������� �� ������ ��������� �����������]
09:54 LOG: INFO [ done]
09:54 LOG: TRACE[While waiting for server startup]
java.sql.SQLException: connect failed
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:341) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.waitForServerStartup(EmbeddedPostgres.java:315) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.startPostmaster(EmbeddedPostgres.java:275) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.<init>(EmbeddedPostgres.java:162) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres$Builder.start(EmbeddedPostgres.java:580) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.createOrFindPreparer(PreparedDbProvider.java:82) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.<init>(PreparedDbProvider.java:62) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.forPreparer(PreparedDbProvider.java:57) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.junit.PreparedDbRule.before(PreparedDbRule.java:55) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:46) [junit-4.12.jar:4.12]
	at org.junit.rules.RunRules.evaluate(RunRules.java:20) [junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84) [spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) [junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251) [spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97) [spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) [junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61) [spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70) [spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) [junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190) [spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) [junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) [junit-rt.jar:?]
Caused by: java.net.SocketTimeoutException: connect timed out
	at java.net.PlainSocketImpl.waitForConnect(Native Method) ~[?:?]
	at java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:107) ~[?:?]
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224) ~[?:?]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403) ~[?:?]
	at java.net.Socket.connect(Socket.java:591) ~[?:?]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:339) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	... 28 more
09:54 LOG: INFO [f06e3be4-7291-4cc0-8756-1dce27562cba postmaster startup finished in 00:00:00.800]
09:54 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
09:54 LOG: INFO [Flyway Community Edition 5.2.4 by Boxfuse]
09:54 LOG: INFO [Database: jdbc:postgresql://localhost:49758/template1 (PostgreSQL 10.6)]
09:54 LOG: DEBUG[Driver  : PostgreSQL JDBC Driver 42.2.5]
09:54 LOG: DEBUG[DDL Transactions Supported: true]
09:54 LOG: DEBUG[Schema: public]
09:54 LOG: DEBUG[Scanning for classpath resources at 'classpath:db/migration' ...]
09:54 LOG: DEBUG[Determining location urls for classpath:db/migration using ClassLoader jdk.internal.loader.ClassLoaders$AppClassLoader@6ed3ef1 ...]
09:54 LOG: DEBUG[Scanning URL: file:/C:/Users/valik/IdeaProjects/java-lab-task-1/target/classes/db/migration]
09:54 LOG: DEBUG[JBoss VFS v2 available: false]
09:54 LOG: DEBUG[Scanning starting at classpath root in filesystem: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\]
09:54 LOG: DEBUG[Scanning for resources in path: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\db\migration (db/migration)]
09:54 LOG: DEBUG[Found resource: db/migration/V1_1__init_data.sql]
09:54 LOG: DEBUG[Found resource: db/migration/V1__init_schema.sql]
09:54 LOG: DEBUG[Scanning for classes at classpath:db/migration]
09:54 LOG: DEBUG[Scanning for SQL callbacks ...]
09:54 LOG: DEBUG[Spring Jdbc available: true]
09:54 LOG: DEBUG[Validating migrations ...]
09:54 LOG: DEBUG[Parsing V1_1__init_data.sql ...]
09:54 LOG: DEBUG[Found statement at line 1: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
09:54 LOG: DEBUG[Found statement at line 2: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
09:54 LOG: DEBUG[Found statement at line 3: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
09:54 LOG: DEBUG[Found statement at line 4: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
09:54 LOG: DEBUG[Parsing V1__init_schema.sql ...]
09:54 LOG: DEBUG[Found statement at line 1: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
09:54 LOG: DEBUG[Found statement at line 8: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
09:54 LOG: DEBUG[Found statement at line 16: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
09:54 LOG: DEBUG[Found statement at line 24: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
09:54 LOG: DEBUG[Found statement at line 36: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
09:54 LOG: DEBUG[Found statement at line 43: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
09:54 LOG: DEBUG[Found statement at line 59: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
09:54 LOG: DEBUG[Found statement at line 68: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
09:54 LOG: DEBUG[Filtering out resource: db/migration/V1_1__init_data.sql (filename: V1_1__init_data.sql)]
09:54 LOG: DEBUG[Filtering out resource: db/migration/V1__init_schema.sql (filename: V1__init_schema.sql)]
09:54 LOG: INFO [Successfully validated 2 migrations (execution time 00:00.039s)]
09:54 LOG: DEBUG[Schema "public" already exists. Skipping schema creation.]
09:54 LOG: INFO [Creating Schema History table: "public"."flyway_schema_history"]
09:54 LOG: DEBUG[Parsing createMetaDataTable.sql ...]
09:54 LOG: DEBUG[Found statement at line 17: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
09:54 LOG: DEBUG[Found statement at line 29: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
09:54 LOG: DEBUG[Found statement at line 31: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
09:54 LOG: DEBUG[Executing SQL: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
09:54 LOG: DEBUG[Update Count: 0]
09:54 LOG: DEBUG[Executing SQL: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
09:54 LOG: DEBUG[Update Count: 0]
09:54 LOG: DEBUG[Executing SQL: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
09:54 LOG: DEBUG[Update Count: 0]
09:54 LOG: DEBUG[Created Schema History table: "public"."flyway_schema_history"]
09:54 LOG: INFO [Current version of schema "public": << Empty Schema >>]
09:54 LOG: INFO [Migrating schema "public" to version 1 - init schema]
09:54 LOG: DEBUG[Executing SQL: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
09:54 LOG: DEBUG[Update Count: 0]
09:54 LOG: DEBUG[Executing SQL: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
09:54 LOG: DEBUG[Update Count: 0]
09:54 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
09:54 LOG: DEBUG[Update Count: 0]
09:54 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
09:54 LOG: DEBUG[Update Count: 0]
09:54 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
09:54 LOG: DEBUG[Update Count: 0]
09:54 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
09:54 LOG: DEBUG[Update Count: 0]
09:54 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
09:54 LOG: DEBUG[Update Count: 0]
09:54 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
09:54 LOG: DEBUG[Update Count: 0]
09:54 LOG: DEBUG[Successfully completed migration of schema "public" to version 1 - init schema]
09:54 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
09:54 LOG: INFO [Migrating schema "public" to version 1.1 - init data]
09:54 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
09:54 LOG: DEBUG[Update Count: 1]
09:54 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
09:54 LOG: DEBUG[Update Count: 1]
09:54 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
09:54 LOG: DEBUG[Update Count: 1]
09:54 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
09:54 LOG: DEBUG[Update Count: 1]
09:54 LOG: DEBUG[Successfully completed migration of schema "public" to version 1.1 - init data]
09:54 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
09:54 LOG: INFO [Successfully applied 2 migrations to schema "public" (execution time 00:00.165s)]
09:54 LOG: DEBUG[Memory usage: 10 of 126M]
09:54 LOG: TRACE[beforeTestMethod(): instance [repository.HotelRepositoryTest@2320fa6f], method [public void repository.HotelRepositoryTest.shouldBeCreated()]]
09:54 LOG: DEBUG[Before test method: context [DefaultTestContext@1d3ac898 testClass = HotelRepositoryTest, testInstance = repository.HotelRepositoryTest@2320fa6f, testMethod = shouldBeCreated@HotelRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1b73be9f testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].]
09:54 LOG: TRACE[beforeTestExecution(): instance [repository.HotelRepositoryTest@2320fa6f], method [public void repository.HotelRepositoryTest.shouldBeCreated()]]
09:54 LOG: DEBUG[Executing prepared SQL update]
09:54 LOG: DEBUG[Executing prepared SQL statement [INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES (?,?,?,?,?,?::hotel_feature)]]
09:54 LOG: DEBUG[Fetching JDBC Connection from DataSource]
09:54 LOG: TRACE[SQL update affected 1 rows]
09:54 LOG: DEBUG[Executing prepared SQL query]
09:54 LOG: DEBUG[Executing prepared SQL statement [SELECT id, name, stars, website, latitude, longitude, feature FROM hotel WHERE id=?]]
09:54 LOG: DEBUG[Fetching JDBC Connection from DataSource]
09:54 LOG: TRACE[Setting SQL statement parameter value: column index 1, parameter value [1], value class [java.lang.Integer], SQL type unknown]
09:54 LOG: TRACE[afterTestExecution(): instance [repository.HotelRepositoryTest@2320fa6f], method [public void repository.HotelRepositoryTest.shouldBeCreated()], exception [java.lang.AssertionError: expected:<Hotel{name='TestHotel', stars=4, website='testWebsite.com', latitude=10, longitude=10, features=FOOD_DELIVERY, id=1}> but was:<Hotel{name='TestHotel', stars=4, website='testWebsite.com', latitude=10.000000, longitude=10.000000, features=FOOD_DELIVERY, id=1}>]]
09:54 LOG: TRACE[afterTestMethod(): instance [repository.HotelRepositoryTest@2320fa6f], method [public void repository.HotelRepositoryTest.shouldBeCreated()], exception [java.lang.AssertionError: expected:<Hotel{name='TestHotel', stars=4, website='testWebsite.com', latitude=10, longitude=10, features=FOOD_DELIVERY, id=1}> but was:<Hotel{name='TestHotel', stars=4, website='testWebsite.com', latitude=10.000000, longitude=10.000000, features=FOOD_DELIVERY, id=1}>]]
09:54 LOG: DEBUG[After test method: context [DefaultTestContext@1d3ac898 testClass = HotelRepositoryTest, testInstance = repository.HotelRepositoryTest@2320fa6f, testMethod = shouldBeCreated@HotelRepositoryTest, testException = java.lang.AssertionError: expected:<Hotel{name='TestHotel', stars=4, website='testWebsite.com', latitude=10, longitude=10, features=FOOD_DELIVERY, id=1}> but was:<Hotel{name='TestHotel', stars=4, website='testWebsite.com', latitude=10.000000, longitude=10.000000, features=FOOD_DELIVERY, id=1}>, mergedContextConfiguration = [MergedContextConfiguration@1b73be9f testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].]
09:54 LOG: TRACE[afterTestClass(): class [repository.HotelRepositoryTest]]
09:54 LOG: DEBUG[After test class: context [DefaultTestContext@1d3ac898 testClass = HotelRepositoryTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1b73be9f testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].]
09:54 LOG: DEBUG[Closing org.springframework.context.support.GenericApplicationContext@1a9c38eb, started on Wed Feb 20 09:54:46 MSK 2019]
09:54 LOG: TRACE[Returning cached instance of singleton bean 'lifecycleProcessor']
09:54 LOG: TRACE[Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2756c0a7: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,testConfig,getDataSource,getJdbcTemplate,userRepository,hotelRepository,userDataContext,hotelDataContext]; root of factory hierarchy]
09:54 LOG: TRACE[Retrieved dependent beans for bean 'getDataSource': [getJdbcTemplate]]
09:54 LOG: TRACE[Retrieved dependent beans for bean 'getJdbcTemplate': [userDataContext, hotelDataContext]]
09:54 LOG: TRACE[Retrieved dependent beans for bean 'userDataContext': [userRepository]]
10:00 LOG: DEBUG[SpringJUnit4ClassRunner constructor called with [class repository.HotelRepositoryTest]]
10:00 LOG: DEBUG[Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]]
10:00 LOG: DEBUG[Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]]
10:00 LOG: DEBUG[Instantiating TestContextBootstrapper for test class [repository.HotelRepositoryTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]]
10:00 LOG: TRACE[Retrieved @ContextConfiguration [@org.springframework.test.context.ContextConfiguration(name=, value=[], loader=interface org.springframework.test.context.ContextLoader, classes=[class config.TestConfig], locations=[], inheritInitializers=true, inheritLocations=true, initializers=[])] for declaring class [repository.HotelRepositoryTest].]
10:00 LOG: TRACE[Resolved context configuration attributes: [ContextConfigurationAttributes@5a1de7fb declaringClass = 'repository.HotelRepositoryTest', classes = '{class config.TestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']]
10:00 LOG: TRACE[Resolving ContextLoader for context configuration attributes [ContextConfigurationAttributes@5a1de7fb declaringClass = 'repository.HotelRepositoryTest', classes = '{class config.TestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']]
10:00 LOG: TRACE[Using ContextLoader class [org.springframework.test.context.support.DelegatingSmartContextLoader] for test class [repository.HotelRepositoryTest]]
10:00 LOG: TRACE[Processing locations and classes for context configuration attributes [ContextConfigurationAttributes@5a1de7fb declaringClass = 'repository.HotelRepositoryTest', classes = '{class config.TestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']]
10:00 LOG: DEBUG[Delegating to AnnotationConfigContextLoader to process context configuration [ContextConfigurationAttributes@5a1de7fb declaringClass = 'repository.HotelRepositoryTest', classes = '{class config.TestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].]
10:00 LOG: TRACE[Loaded [org.springframework.test.context.ContextCustomizerFactory] names: [org.springframework.test.context.web.socket.MockServerContainerContextCustomizerFactory]]
10:00 LOG: TRACE[Processing context initializers for configuration attributes [ContextConfigurationAttributes@5a1de7fb declaringClass = 'repository.HotelRepositoryTest', classes = '{class config.TestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']]
10:00 LOG: DEBUG[Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [repository.HotelRepositoryTest]]
10:00 LOG: DEBUG[@TestExecutionListeners is not present for class [repository.HotelRepositoryTest]: using defaults.]
10:00 LOG: INFO [Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]]
10:00 LOG: DEBUG[Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]]
10:00 LOG: INFO [Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@495fac5f, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@76012793, org.springframework.test.context.support.DirtiesContextTestExecutionListener@635572a7, org.springframework.test.context.transaction.TransactionalTestExecutionListener@79d94571, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@4dd02341]]
10:00 LOG: TRACE[Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@495fac5f]
10:00 LOG: TRACE[Registering TestExecutionListener: org.springframework.test.context.support.DependencyInjectionTestExecutionListener@76012793]
10:00 LOG: TRACE[Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextTestExecutionListener@635572a7]
10:00 LOG: TRACE[Registering TestExecutionListener: org.springframework.test.context.transaction.TransactionalTestExecutionListener@79d94571]
10:00 LOG: TRACE[Registering TestExecutionListener: org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@4dd02341]
10:00 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [repository.HotelRepositoryTest]]
10:00 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [repository.HotelRepositoryTest]]
10:00 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [repository.HotelRepositoryTest]]
10:00 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [repository.HotelRepositoryTest]]
10:00 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [repository.HotelRepositoryTest]]
10:00 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [repository.HotelRepositoryTest]]
10:00 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [repository.HotelRepositoryTest]]
10:00 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [repository.HotelRepositoryTest]]
10:00 LOG: TRACE[beforeTestClass(): class [repository.HotelRepositoryTest]]
10:00 LOG: DEBUG[Before test class: context [DefaultTestContext@604f2bd2 testClass = HotelRepositoryTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d3ac898 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].]
10:00 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [repository.HotelRepositoryTest]]
10:00 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [repository.HotelRepositoryTest]]
10:00 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
10:00 LOG: TRACE[prepareTestInstance(): instance [repository.HotelRepositoryTest@37052337]]
10:00 LOG: DEBUG[Performing dependency injection for test context [[DefaultTestContext@604f2bd2 testClass = HotelRepositoryTest, testInstance = repository.HotelRepositoryTest@37052337, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d3ac898 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].]
10:00 LOG: DEBUG[Delegating to AnnotationConfigContextLoader to load context from [MergedContextConfiguration@1d3ac898 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].]
10:00 LOG: DEBUG[Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@1d3ac898 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].]
10:00 LOG: DEBUG[Activating profiles []]
10:00 LOG: DEBUG[Registering annotated classes: {class config.TestConfig}]
10:00 LOG: TRACE[Refreshing org.springframework.context.support.GenericApplicationContext@3c9bfddc, started on Wed Feb 20 10:00:54 MSK 2019]
10:00 LOG: DEBUG[Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor']
10:00 LOG: TRACE[Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor']
10:00 LOG: TRACE[Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references]
10:00 LOG: TRACE[Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor']
10:00 LOG: TRACE[Registering bean definition for @Bean method config.TestConfig.getDataSource()]
10:00 LOG: TRACE[Registering bean definition for @Bean method config.TestConfig.getJdbcTemplate()]
10:00 LOG: TRACE[Registering bean definition for @Bean method config.TestConfig.userRepository()]
10:00 LOG: TRACE[Registering bean definition for @Bean method config.TestConfig.hotelRepository()]
10:00 LOG: TRACE[Registering bean definition for @Bean method config.TestConfig.userDataContext()]
10:00 LOG: TRACE[Registering bean definition for @Bean method config.TestConfig.hotelDataContext()]
10:00 LOG: TRACE[Successfully enhanced config.TestConfig; enhanced class name is: config.TestConfig$$EnhancerBySpringCGLIB$$a6cb9e5a]
10:00 LOG: TRACE[Replacing bean definition 'testConfig' existing class 'config.TestConfig' with enhanced class 'config.TestConfig$$EnhancerBySpringCGLIB$$a6cb9e5a']
10:00 LOG: DEBUG[Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor']
10:00 LOG: TRACE[Creating instance of bean 'org.springframework.context.event.internalEventListenerProcessor']
10:00 LOG: TRACE[Eagerly caching bean 'org.springframework.context.event.internalEventListenerProcessor' to allow for resolving potential circular references]
10:00 LOG: TRACE[Finished creating instance of bean 'org.springframework.context.event.internalEventListenerProcessor']
10:00 LOG: DEBUG[Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory']
10:00 LOG: TRACE[Creating instance of bean 'org.springframework.context.event.internalEventListenerFactory']
10:00 LOG: TRACE[Eagerly caching bean 'org.springframework.context.event.internalEventListenerFactory' to allow for resolving potential circular references]
10:00 LOG: TRACE[Finished creating instance of bean 'org.springframework.context.event.internalEventListenerFactory']
10:00 LOG: DEBUG[Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor']
10:00 LOG: TRACE[Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor']
10:00 LOG: TRACE[Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references]
10:00 LOG: TRACE[Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor']
10:00 LOG: DEBUG[Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor']
10:00 LOG: TRACE[Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor']
10:00 LOG: TRACE[Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references]
10:00 LOG: TRACE[Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor']
10:00 LOG: TRACE[No 'messageSource' bean, using [Empty MessageSource]]
10:00 LOG: TRACE[No 'applicationEventMulticaster' bean, using [SimpleApplicationEventMulticaster]]
10:00 LOG: TRACE[Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6f603e89: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,testConfig,getDataSource,getJdbcTemplate,userRepository,hotelRepository,userDataContext,hotelDataContext]; root of factory hierarchy]
10:00 LOG: TRACE[Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor']
10:00 LOG: TRACE[Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor']
10:00 LOG: TRACE[Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor']
10:00 LOG: TRACE[Returning cached instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor']
10:00 LOG: TRACE[Returning cached instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory']
10:00 LOG: DEBUG[Creating shared instance of singleton bean 'testConfig']
10:00 LOG: TRACE[Creating instance of bean 'testConfig']
10:00 LOG: TRACE[Eagerly caching bean 'testConfig' to allow for resolving potential circular references]
10:00 LOG: TRACE[Finished creating instance of bean 'testConfig']
10:00 LOG: DEBUG[Creating shared instance of singleton bean 'getDataSource']
10:00 LOG: TRACE[Creating instance of bean 'getDataSource']
10:00 LOG: TRACE[Returning cached instance of singleton bean 'testConfig']
10:00 LOG: INFO [Starting embedded database: url='jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa']
10:00 LOG: DEBUG[Fetching JDBC Connection from DataSource]
10:00 LOG: DEBUG[Creating new JDBC Driver Connection to [jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false]]
10:00 LOG: DEBUG[Executing SQL script from class path resource [db/migration/V1__init_schema.sql]]
10:00 LOG: DEBUG[0 returned as update count for SQL: CREATE TYPE TOUR_TYPE AS ENUM ( 'bus', 'sightseeing', 'shore_excursion', 'adventure', 'sporting', 'cruise', 'escorted', 'guided', 'rail', 'extreme' )]
10:00 LOG: DEBUG[0 returned as update count for SQL: CREATE TYPE HOTEL_FEATURE AS ENUM ( 'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning', 'food_delivery', 'pool', 'conference_hall', 'safe' )]
10:00 LOG: DEBUG[0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS "user" ( id SERIAL, login VARCHAR(255) UNIQUE NOT NULL, password VARCHAR(255) NOT NULL, PRIMARY KEY (id) )]
10:00 LOG: DEBUG[0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS "hotel" ( id SERIAL, name VARCHAR(255) NOT NULL, stars SMALLINT NOT NULL, website VARCHAR(255) NOT NULL, latitude DECIMAL(8, 6) NOT NULL, longitude DECIMAL(8, 6) NOT NULL, feature HOTEL_FEATURE NOT NULL, PRIMARY KEY (id) )]
10:00 LOG: DEBUG[0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS "country" ( id SERIAL, name VARCHAR(255), PRIMARY KEY (id) )]
10:00 LOG: DEBUG[0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS "tour" ( id SERIAL, photo VARCHAR(255), date DATE NOT NULL, duration INT NOT NULL, description TEXT NOT NULL, cost DECIMAL(19, 3) NOT NULL, tour_type TOUR_TYPE NOT NULL, hotel_id INT NOT NULL, country_id INT NOT NULL, PRIMARY KEY (id), FOREIGN KEY (hotel_id) REFERENCES "hotel" (id), FOREIGN KEY (country_id) REFERENCES "country" (id) )]
10:00 LOG: DEBUG[0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS "usertour" ( user_id INT UNIQUE NOT NULL, tour_id INT UNIQUE NOT NULL, PRIMARY KEY (user_id, tour_id), FOREIGN KEY (user_id) REFERENCES "user" (id), FOREIGN KEY (tour_id) REFERENCES "tour" (id) )]
10:00 LOG: DEBUG[0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS "review" ( id SERIAL, date DATE NOT NULL, text TEXT NOT NULL, user_id INT NOT NULL, tour_id INT NOT NULL, PRIMARY KEY (id), FOREIGN KEY (user_id) REFERENCES "user" (id), FOREIGN KEY (tour_id) REFERENCES "tour" (id) ) ]
10:00 LOG: DEBUG[Executed SQL script from class path resource [db/migration/V1__init_schema.sql] in 50 ms.]
10:00 LOG: DEBUG[Executing SQL script from class path resource [db/migration/V1_1__init_data.sql]]
10:00 LOG: DEBUG[1 returned as update count for SQL: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
10:00 LOG: DEBUG[1 returned as update count for SQL: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
10:00 LOG: DEBUG[1 returned as update count for SQL: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
10:00 LOG: DEBUG[1 returned as update count for SQL: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
10:00 LOG: DEBUG[Executed SQL script from class path resource [db/migration/V1_1__init_data.sql] in 10 ms.]
10:00 LOG: TRACE[Eagerly caching bean 'getDataSource' to allow for resolving potential circular references]
10:00 LOG: TRACE[Finished creating instance of bean 'getDataSource']
10:00 LOG: DEBUG[Creating shared instance of singleton bean 'getJdbcTemplate']
10:00 LOG: TRACE[Creating instance of bean 'getJdbcTemplate']
10:00 LOG: TRACE[Returning cached instance of singleton bean 'testConfig']
10:00 LOG: TRACE[Returning cached instance of singleton bean 'getDataSource']
10:00 LOG: TRACE[Eagerly caching bean 'getJdbcTemplate' to allow for resolving potential circular references]
10:00 LOG: TRACE[Invoking afterPropertiesSet() on bean with name 'getJdbcTemplate']
10:00 LOG: TRACE[Finished creating instance of bean 'getJdbcTemplate']
10:00 LOG: DEBUG[Creating shared instance of singleton bean 'userRepository']
10:00 LOG: TRACE[Creating instance of bean 'userRepository']
10:00 LOG: TRACE[Returning cached instance of singleton bean 'testConfig']
10:00 LOG: TRACE[Loaded [org.springframework.beans.BeanInfoFactory] names: [org.springframework.beans.ExtendedBeanInfoFactory]]
10:00 LOG: TRACE[Getting BeanInfo for class [com.epam.travelagency.repository.UserRepository]]
10:00 LOG: TRACE[Caching PropertyDescriptors for class [com.epam.travelagency.repository.UserRepository]]
10:00 LOG: TRACE[Found bean property 'class' of type [java.lang.Class]]
10:00 LOG: TRACE[Found bean property 'dataContext' of type [com.epam.travelagency.storage.DataContext]]
10:00 LOG: TRACE[Registered injected element on class [com.epam.travelagency.repository.UserRepository]: AutowiredMethodElement for public void com.epam.travelagency.repository.Repository.setDataContext(com.epam.travelagency.storage.DataContext)]
10:00 LOG: TRACE[Eagerly caching bean 'userRepository' to allow for resolving potential circular references]
10:00 LOG: TRACE[Processing injected element of bean 'userRepository': AutowiredMethodElement for public void com.epam.travelagency.repository.Repository.setDataContext(com.epam.travelagency.storage.DataContext)]
10:00 LOG: DEBUG[Creating shared instance of singleton bean 'userDataContext']
10:00 LOG: TRACE[Creating instance of bean 'userDataContext']
10:00 LOG: TRACE[Returning cached instance of singleton bean 'testConfig']
10:00 LOG: TRACE[Returning cached instance of singleton bean 'getJdbcTemplate']
10:00 LOG: TRACE[Eagerly caching bean 'userDataContext' to allow for resolving potential circular references]
10:00 LOG: TRACE[Finished creating instance of bean 'userDataContext']
10:00 LOG: TRACE[Autowiring by type from bean name 'userRepository' to bean named 'userDataContext']
10:00 LOG: TRACE[Finished creating instance of bean 'userRepository']
10:00 LOG: DEBUG[Creating shared instance of singleton bean 'hotelRepository']
10:00 LOG: TRACE[Creating instance of bean 'hotelRepository']
10:00 LOG: TRACE[Returning cached instance of singleton bean 'testConfig']
10:00 LOG: TRACE[Getting BeanInfo for class [com.epam.travelagency.repository.HotelRepository]]
10:00 LOG: TRACE[Caching PropertyDescriptors for class [com.epam.travelagency.repository.HotelRepository]]
10:00 LOG: TRACE[Found bean property 'class' of type [java.lang.Class]]
10:00 LOG: TRACE[Found bean property 'dataContext' of type [com.epam.travelagency.storage.DataContext]]
10:00 LOG: TRACE[Registered injected element on class [com.epam.travelagency.repository.HotelRepository]: AutowiredMethodElement for public void com.epam.travelagency.repository.Repository.setDataContext(com.epam.travelagency.storage.DataContext)]
10:00 LOG: TRACE[Eagerly caching bean 'hotelRepository' to allow for resolving potential circular references]
10:00 LOG: TRACE[Processing injected element of bean 'hotelRepository': AutowiredMethodElement for public void com.epam.travelagency.repository.Repository.setDataContext(com.epam.travelagency.storage.DataContext)]
10:00 LOG: DEBUG[Creating shared instance of singleton bean 'hotelDataContext']
10:00 LOG: TRACE[Creating instance of bean 'hotelDataContext']
10:00 LOG: TRACE[Returning cached instance of singleton bean 'testConfig']
10:00 LOG: TRACE[Returning cached instance of singleton bean 'getJdbcTemplate']
10:00 LOG: TRACE[Eagerly caching bean 'hotelDataContext' to allow for resolving potential circular references]
10:00 LOG: TRACE[Finished creating instance of bean 'hotelDataContext']
10:00 LOG: TRACE[Autowiring by type from bean name 'hotelRepository' to bean named 'hotelDataContext']
10:00 LOG: TRACE[Finished creating instance of bean 'hotelRepository']
10:00 LOG: TRACE[Returning cached instance of singleton bean 'userDataContext']
10:00 LOG: TRACE[Returning cached instance of singleton bean 'hotelDataContext']
10:00 LOG: TRACE[No @EventListener annotations found on bean class: config.TestConfig$$EnhancerBySpringCGLIB$$a6cb9e5a]
10:00 LOG: TRACE[No @EventListener annotations found on bean class: com.epam.travelagency.repository.UserRepository]
10:00 LOG: TRACE[No @EventListener annotations found on bean class: com.epam.travelagency.repository.HotelRepository]
10:00 LOG: TRACE[No @EventListener annotations found on bean class: com.epam.travelagency.storage.posgresql.UserDataContext]
10:00 LOG: TRACE[No @EventListener annotations found on bean class: com.epam.travelagency.storage.posgresql.HotelDataContext]
10:00 LOG: TRACE[No @EventListener annotations found on bean class: java.util.Properties]
10:00 LOG: TRACE[No @EventListener annotations found on bean class: java.util.Collections$UnmodifiableMap]
10:00 LOG: TRACE[No 'lifecycleProcessor' bean, using [DefaultLifecycleProcessor]]
10:00 LOG: TRACE[Returning cached instance of singleton bean 'lifecycleProcessor']
10:00 LOG: TRACE[Searching for key 'spring.liveBeansView.mbeanDomain' in PropertySource 'systemProperties']
10:00 LOG: TRACE[Searching for key 'spring.liveBeansView.mbeanDomain' in PropertySource 'systemEnvironment']
10:00 LOG: TRACE[Could not find key 'spring.liveBeansView.mbeanDomain' in any property source]
10:00 LOG: DEBUG[Storing ApplicationContext in cache under key [[MergedContextConfiguration@1d3ac898 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]]
10:00 LOG: DEBUG[Spring test ApplicationContext cache statistics: [DefaultContextCache@a567e72 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 0, missCount = 1]]
10:00 LOG: TRACE[Processing injected element of bean 'repository.HotelRepositoryTest': AutowiredFieldElement for private com.epam.travelagency.repository.HotelRepository repository.HotelRepositoryTest.hotelRepository]
10:00 LOG: TRACE[Returning cached instance of singleton bean 'hotelRepository']
10:00 LOG: TRACE[Autowiring by type from bean name 'repository.HotelRepositoryTest' to bean named 'hotelRepository']
10:00 LOG: INFO [Detected a Windows x86_64 system]
10:00 LOG: INFO [Postgres binaries at C:\Users\valik\AppData\Local\Temp\embedded-pg\PG-91c1fa33789b0c913345bf0253da6836]
10:00 LOG: TRACE[a3ae62c7-1ca2-4d72-855f-3723d9b25633 postgres data directory is C:\Users\valik\AppData\Local\Temp\epg13880357989676168836]
10:00 LOG: INFO [The files belonging to this database system will be owned by user "valik".]
10:00 LOG: INFO [This user must also own the server process.]
10:00 LOG: INFO []
10:00 LOG: INFO [The database cluster will be initialized with locale "Russian_Belarus.1251".]
10:00 LOG: INFO [The default text search configuration will be set to "russian".]
10:00 LOG: INFO []
10:00 LOG: INFO [Data page checksums are disabled.]
10:00 LOG: INFO []
10:00 LOG: INFO [fixing permissions on existing directory C:/Users/valik/AppData/Local/Temp/epg13880357989676168836 ... ok]
10:00 LOG: INFO [creating subdirectories ... ok]
10:00 LOG: INFO [selecting default max_connections ... 100]
10:00 LOG: INFO [selecting default shared_buffers ... 128MB]
10:00 LOG: INFO [selecting dynamic shared memory implementation ... windows]
10:00 LOG: INFO [creating configuration files ... ok]
10:00 LOG: INFO [running bootstrap script ... ok]
10:01 LOG: INFO [performing post-bootstrap initialization ... ok]
10:01 LOG: INFO [syncing data to disk ... ok]
10:01 LOG: INFO []
10:01 LOG: INFO [Success. You can now start the database server using:]
10:01 LOG: INFO []
10:01 LOG: INFO [    C:/Users/valik/AppData/Local/Temp/embedded-pg/PG-91c1fa33789b0c913345bf0253da6836/bin/pg_ctl -D ^"C^:^\Users^\valik^\AppData^\Local^\Temp^\epg13880357989676168836^" -l logfile start]
10:01 LOG: INFO []
10:01 LOG: INFO [a3ae62c7-1ca2-4d72-855f-3723d9b25633 initdb completed in 00:00:07.252]
10:01 LOG: INFO [a3ae62c7-1ca2-4d72-855f-3723d9b25633 postmaster started as Process[pid=14396, exitValue="not exited"] on port 49847.  Waiting up to PT10S for server startup to finish.]
10:01 LOG: INFO [waiting for server to start....2019-02-20 10:01:03.326 +03 [892] ���������:  ��� ����� ����������� �� ������ IPv6 "::1" ������ ���� 49847]
10:01 LOG: INFO [2019-02-20 10:01:03.326 +03 [892] ���������:  ��� ����� ����������� �� ������ IPv4 "127.0.0.1" ������ ���� 49847]
10:01 LOG: INFO [2019-02-20 10:01:03.403 +03 [14680] ���������:  ������� �� ���� ���������: 2019-02-20 10:01:02 +03]
10:01 LOG: INFO [2019-02-20 10:01:03.447 +03 [892] ���������:  ������� �� ������ ��������� �����������]
10:01 LOG: INFO [ done]
10:01 LOG: TRACE[While waiting for server startup]
java.sql.SQLException: connect failed
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:341) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.waitForServerStartup(EmbeddedPostgres.java:315) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.startPostmaster(EmbeddedPostgres.java:275) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.<init>(EmbeddedPostgres.java:162) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres$Builder.start(EmbeddedPostgres.java:580) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.createOrFindPreparer(PreparedDbProvider.java:82) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.<init>(PreparedDbProvider.java:62) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.forPreparer(PreparedDbProvider.java:57) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.junit.PreparedDbRule.before(PreparedDbRule.java:55) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:46) [junit-4.12.jar:4.12]
	at org.junit.rules.RunRules.evaluate(RunRules.java:20) [junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84) [spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) [junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251) [spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97) [spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) [junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61) [spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70) [spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) [junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190) [spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) [junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) [junit-rt.jar:?]
Caused by: java.net.SocketTimeoutException: connect timed out
	at java.net.PlainSocketImpl.waitForConnect(Native Method) ~[?:?]
	at java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:107) ~[?:?]
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224) ~[?:?]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403) ~[?:?]
	at java.net.Socket.connect(Socket.java:591) ~[?:?]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:339) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	... 28 more
10:01 LOG: INFO [a3ae62c7-1ca2-4d72-855f-3723d9b25633 postmaster startup finished in 00:00:00.796]
10:01 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
10:01 LOG: INFO [Flyway Community Edition 5.2.4 by Boxfuse]
10:01 LOG: INFO [Database: jdbc:postgresql://localhost:49847/template1 (PostgreSQL 10.6)]
10:01 LOG: DEBUG[Driver  : PostgreSQL JDBC Driver 42.2.5]
10:01 LOG: DEBUG[DDL Transactions Supported: true]
10:01 LOG: DEBUG[Schema: public]
10:01 LOG: DEBUG[Scanning for classpath resources at 'classpath:db/migration' ...]
10:01 LOG: DEBUG[Determining location urls for classpath:db/migration using ClassLoader jdk.internal.loader.ClassLoaders$AppClassLoader@6ed3ef1 ...]
10:01 LOG: DEBUG[Scanning URL: file:/C:/Users/valik/IdeaProjects/java-lab-task-1/target/classes/db/migration]
10:01 LOG: DEBUG[JBoss VFS v2 available: false]
10:01 LOG: DEBUG[Scanning starting at classpath root in filesystem: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\]
10:01 LOG: DEBUG[Scanning for resources in path: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\db\migration (db/migration)]
10:01 LOG: DEBUG[Found resource: db/migration/V1_1__init_data.sql]
10:01 LOG: DEBUG[Found resource: db/migration/V1__init_schema.sql]
10:01 LOG: DEBUG[Scanning for classes at classpath:db/migration]
10:01 LOG: DEBUG[Scanning for SQL callbacks ...]
10:01 LOG: DEBUG[Spring Jdbc available: true]
10:01 LOG: DEBUG[Validating migrations ...]
10:01 LOG: DEBUG[Parsing V1_1__init_data.sql ...]
10:01 LOG: DEBUG[Found statement at line 1: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
10:01 LOG: DEBUG[Found statement at line 2: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
10:01 LOG: DEBUG[Found statement at line 3: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
10:01 LOG: DEBUG[Found statement at line 4: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
10:01 LOG: DEBUG[Parsing V1__init_schema.sql ...]
10:01 LOG: DEBUG[Found statement at line 1: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
10:01 LOG: DEBUG[Found statement at line 8: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
10:01 LOG: DEBUG[Found statement at line 16: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
10:01 LOG: DEBUG[Found statement at line 24: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
10:01 LOG: DEBUG[Found statement at line 36: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
10:01 LOG: DEBUG[Found statement at line 43: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
10:01 LOG: DEBUG[Found statement at line 59: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
10:01 LOG: DEBUG[Found statement at line 68: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
10:01 LOG: DEBUG[Filtering out resource: db/migration/V1_1__init_data.sql (filename: V1_1__init_data.sql)]
10:01 LOG: DEBUG[Filtering out resource: db/migration/V1__init_schema.sql (filename: V1__init_schema.sql)]
10:01 LOG: INFO [Successfully validated 2 migrations (execution time 00:00.024s)]
10:01 LOG: DEBUG[Schema "public" already exists. Skipping schema creation.]
10:01 LOG: INFO [Creating Schema History table: "public"."flyway_schema_history"]
10:01 LOG: DEBUG[Parsing createMetaDataTable.sql ...]
10:01 LOG: DEBUG[Found statement at line 17: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
10:01 LOG: DEBUG[Found statement at line 29: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
10:01 LOG: DEBUG[Found statement at line 31: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
10:01 LOG: DEBUG[Executing SQL: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
10:01 LOG: DEBUG[Update Count: 0]
10:01 LOG: DEBUG[Executing SQL: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
10:01 LOG: DEBUG[Update Count: 0]
10:01 LOG: DEBUG[Executing SQL: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
10:01 LOG: DEBUG[Update Count: 0]
10:01 LOG: DEBUG[Created Schema History table: "public"."flyway_schema_history"]
10:01 LOG: INFO [Current version of schema "public": << Empty Schema >>]
10:01 LOG: INFO [Migrating schema "public" to version 1 - init schema]
10:01 LOG: DEBUG[Executing SQL: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
10:01 LOG: DEBUG[Update Count: 0]
10:01 LOG: DEBUG[Executing SQL: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
10:01 LOG: DEBUG[Update Count: 0]
10:01 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
10:01 LOG: DEBUG[Update Count: 0]
10:01 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
10:01 LOG: DEBUG[Update Count: 0]
10:01 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
10:01 LOG: DEBUG[Update Count: 0]
10:01 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
10:01 LOG: DEBUG[Update Count: 0]
10:01 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
10:01 LOG: DEBUG[Update Count: 0]
10:01 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
10:01 LOG: DEBUG[Update Count: 0]
10:01 LOG: DEBUG[Successfully completed migration of schema "public" to version 1 - init schema]
10:01 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
10:01 LOG: INFO [Migrating schema "public" to version 1.1 - init data]
10:01 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
10:01 LOG: DEBUG[Update Count: 1]
10:01 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
10:01 LOG: DEBUG[Update Count: 1]
10:01 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
10:01 LOG: DEBUG[Update Count: 1]
10:01 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
10:01 LOG: DEBUG[Update Count: 1]
10:01 LOG: DEBUG[Successfully completed migration of schema "public" to version 1.1 - init data]
10:01 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
10:01 LOG: INFO [Successfully applied 2 migrations to schema "public" (execution time 00:00.168s)]
10:01 LOG: DEBUG[Memory usage: 42 of 126M]
10:01 LOG: TRACE[beforeTestMethod(): instance [repository.HotelRepositoryTest@37052337], method [public void repository.HotelRepositoryTest.shouldBeCreated()]]
10:01 LOG: DEBUG[Before test method: context [DefaultTestContext@604f2bd2 testClass = HotelRepositoryTest, testInstance = repository.HotelRepositoryTest@37052337, testMethod = shouldBeCreated@HotelRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d3ac898 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].]
10:01 LOG: TRACE[beforeTestExecution(): instance [repository.HotelRepositoryTest@37052337], method [public void repository.HotelRepositoryTest.shouldBeCreated()]]
10:01 LOG: DEBUG[Executing prepared SQL update]
10:01 LOG: DEBUG[Executing prepared SQL statement [INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES (?,?,?,?,?,?::hotel_feature)]]
10:01 LOG: DEBUG[Fetching JDBC Connection from DataSource]
10:01 LOG: TRACE[SQL update affected 1 rows]
10:01 LOG: DEBUG[Executing prepared SQL query]
10:01 LOG: DEBUG[Executing prepared SQL statement [SELECT id, name, stars, website, latitude, longitude, feature FROM hotel WHERE id=?]]
10:01 LOG: DEBUG[Fetching JDBC Connection from DataSource]
10:01 LOG: TRACE[Setting SQL statement parameter value: column index 1, parameter value [1], value class [java.lang.Integer], SQL type unknown]
10:01 LOG: TRACE[afterTestExecution(): instance [repository.HotelRepositoryTest@37052337], method [public void repository.HotelRepositoryTest.shouldBeCreated()], exception [null]]
10:01 LOG: TRACE[afterTestMethod(): instance [repository.HotelRepositoryTest@37052337], method [public void repository.HotelRepositoryTest.shouldBeCreated()], exception [null]]
10:01 LOG: DEBUG[After test method: context [DefaultTestContext@604f2bd2 testClass = HotelRepositoryTest, testInstance = repository.HotelRepositoryTest@37052337, testMethod = shouldBeCreated@HotelRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d3ac898 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].]
10:01 LOG: TRACE[afterTestClass(): class [repository.HotelRepositoryTest]]
10:01 LOG: DEBUG[After test class: context [DefaultTestContext@604f2bd2 testClass = HotelRepositoryTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d3ac898 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].]
10:01 LOG: DEBUG[Closing org.springframework.context.support.GenericApplicationContext@3c9bfddc, started on Wed Feb 20 10:00:54 MSK 2019]
10:01 LOG: TRACE[Returning cached instance of singleton bean 'lifecycleProcessor']
10:01 LOG: TRACE[Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6f603e89: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,testConfig,getDataSource,getJdbcTemplate,userRepository,hotelRepository,userDataContext,hotelDataContext]; root of factory hierarchy]
10:14 LOG: DEBUG[SpringJUnit4ClassRunner constructor called with [class repository.HotelRepositoryTest]]
10:14 LOG: DEBUG[Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]]
10:14 LOG: DEBUG[Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]]
10:14 LOG: DEBUG[Instantiating TestContextBootstrapper for test class [repository.HotelRepositoryTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]]
10:14 LOG: TRACE[Retrieved @ContextConfiguration [@org.springframework.test.context.ContextConfiguration(name=, value=[], loader=interface org.springframework.test.context.ContextLoader, classes=[class config.TestConfig], locations=[], inheritInitializers=true, inheritLocations=true, initializers=[])] for declaring class [repository.HotelRepositoryTest].]
10:14 LOG: TRACE[Resolved context configuration attributes: [ContextConfigurationAttributes@b2c5e07 declaringClass = 'repository.HotelRepositoryTest', classes = '{class config.TestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']]
10:14 LOG: TRACE[Resolving ContextLoader for context configuration attributes [ContextConfigurationAttributes@b2c5e07 declaringClass = 'repository.HotelRepositoryTest', classes = '{class config.TestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']]
10:14 LOG: TRACE[Using ContextLoader class [org.springframework.test.context.support.DelegatingSmartContextLoader] for test class [repository.HotelRepositoryTest]]
10:14 LOG: TRACE[Processing locations and classes for context configuration attributes [ContextConfigurationAttributes@b2c5e07 declaringClass = 'repository.HotelRepositoryTest', classes = '{class config.TestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']]
10:14 LOG: DEBUG[Delegating to AnnotationConfigContextLoader to process context configuration [ContextConfigurationAttributes@b2c5e07 declaringClass = 'repository.HotelRepositoryTest', classes = '{class config.TestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].]
10:14 LOG: TRACE[Loaded [org.springframework.test.context.ContextCustomizerFactory] names: [org.springframework.test.context.web.socket.MockServerContainerContextCustomizerFactory]]
10:14 LOG: TRACE[Processing context initializers for configuration attributes [ContextConfigurationAttributes@b2c5e07 declaringClass = 'repository.HotelRepositoryTest', classes = '{class config.TestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']]
10:14 LOG: DEBUG[Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [repository.HotelRepositoryTest]]
10:14 LOG: DEBUG[@TestExecutionListeners is not present for class [repository.HotelRepositoryTest]: using defaults.]
10:14 LOG: INFO [Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]]
10:14 LOG: DEBUG[Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]]
10:14 LOG: INFO [Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@b1712f3, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@6986bbaf, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4879dfad, org.springframework.test.context.transaction.TransactionalTestExecutionListener@4758820d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@74eb909f]]
10:14 LOG: TRACE[Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@b1712f3]
10:14 LOG: TRACE[Registering TestExecutionListener: org.springframework.test.context.support.DependencyInjectionTestExecutionListener@6986bbaf]
10:14 LOG: TRACE[Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextTestExecutionListener@4879dfad]
10:14 LOG: TRACE[Registering TestExecutionListener: org.springframework.test.context.transaction.TransactionalTestExecutionListener@4758820d]
10:14 LOG: TRACE[Registering TestExecutionListener: org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@74eb909f]
10:14 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [repository.HotelRepositoryTest]]
10:14 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [repository.HotelRepositoryTest]]
10:14 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [repository.HotelRepositoryTest]]
10:14 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [repository.HotelRepositoryTest]]
10:14 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [repository.HotelRepositoryTest]]
10:14 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [repository.HotelRepositoryTest]]
10:14 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [repository.HotelRepositoryTest]]
10:14 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [repository.HotelRepositoryTest]]
10:14 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
10:14 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [repository.HotelRepositoryTest]]
10:14 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [repository.HotelRepositoryTest]]
10:14 LOG: INFO [Detected a Windows x86_64 system]
10:14 LOG: INFO [Postgres binaries at C:\Users\valik\AppData\Local\Temp\embedded-pg\PG-91c1fa33789b0c913345bf0253da6836]
10:14 LOG: TRACE[3a67003d-05fd-4b20-a2ae-4a70c07e0aaf postgres data directory is C:\Users\valik\AppData\Local\Temp\epg13680453308341989519]
10:14 LOG: INFO [The files belonging to this database system will be owned by user "valik".]
10:14 LOG: INFO [This user must also own the server process.]
10:14 LOG: INFO []
10:14 LOG: INFO [The database cluster will be initialized with locale "Russian_Belarus.1251".]
10:14 LOG: INFO [The default text search configuration will be set to "russian".]
10:14 LOG: INFO []
10:14 LOG: INFO [Data page checksums are disabled.]
10:14 LOG: INFO []
10:14 LOG: INFO [fixing permissions on existing directory C:/Users/valik/AppData/Local/Temp/epg13680453308341989519 ... ok]
10:14 LOG: INFO [creating subdirectories ... ok]
10:14 LOG: INFO [selecting default max_connections ... 100]
10:14 LOG: INFO [selecting default shared_buffers ... 128MB]
10:14 LOG: INFO [selecting dynamic shared memory implementation ... windows]
10:14 LOG: INFO [creating configuration files ... ok]
10:14 LOG: INFO [running bootstrap script ... ok]
10:14 LOG: INFO [performing post-bootstrap initialization ... ok]
10:14 LOG: INFO [syncing data to disk ... ok]
10:14 LOG: INFO []
10:14 LOG: INFO [Success. You can now start the database server using:]
10:14 LOG: INFO []
10:14 LOG: INFO [    C:/Users/valik/AppData/Local/Temp/embedded-pg/PG-91c1fa33789b0c913345bf0253da6836/bin/pg_ctl -D ^"C^:^\Users^\valik^\AppData^\Local^\Temp^\epg13680453308341989519^" -l logfile start]
10:14 LOG: INFO []
10:14 LOG: INFO [3a67003d-05fd-4b20-a2ae-4a70c07e0aaf initdb completed in 00:00:07.344]
10:14 LOG: INFO [3a67003d-05fd-4b20-a2ae-4a70c07e0aaf postmaster started as Process[pid=13956, exitValue="not exited"] on port 50047.  Waiting up to PT10S for server startup to finish.]
10:14 LOG: INFO [waiting for server to start....2019-02-20 10:14:43.631 +03 [10620] ���������:  ��� ����� ����������� �� ������ IPv6 "::1" ������ ���� 50047]
10:14 LOG: INFO [2019-02-20 10:14:43.632 +03 [10620] ���������:  ��� ����� ����������� �� ������ IPv4 "127.0.0.1" ������ ���� 50047]
10:14 LOG: INFO [2019-02-20 10:14:43.714 +03 [14988] ���������:  ������� �� ���� ���������: 2019-02-20 10:14:42 +03]
10:14 LOG: INFO [2019-02-20 10:14:43.764 +03 [10620] ���������:  ������� �� ������ ��������� �����������]
10:14 LOG: INFO [ done]
10:14 LOG: TRACE[While waiting for server startup]
java.sql.SQLException: connect failed
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:341) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.waitForServerStartup(EmbeddedPostgres.java:315) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.startPostmaster(EmbeddedPostgres.java:275) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.<init>(EmbeddedPostgres.java:162) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres$Builder.start(EmbeddedPostgres.java:580) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.createOrFindPreparer(PreparedDbProvider.java:82) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.<init>(PreparedDbProvider.java:62) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.forPreparer(PreparedDbProvider.java:57) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.junit.PreparedDbRule.before(PreparedDbRule.java:55) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:46) [junit-4.12.jar:4.12]
	at org.junit.rules.RunRules.evaluate(RunRules.java:20) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) [junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190) [spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) [junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) [junit-rt.jar:?]
Caused by: java.net.SocketTimeoutException: connect timed out
	at java.net.PlainSocketImpl.waitForConnect(Native Method) ~[?:?]
	at java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:107) ~[?:?]
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224) ~[?:?]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403) ~[?:?]
	at java.net.Socket.connect(Socket.java:591) ~[?:?]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:339) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	... 17 more
10:14 LOG: INFO [3a67003d-05fd-4b20-a2ae-4a70c07e0aaf postmaster startup finished in 00:00:00.828]
10:14 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
10:14 LOG: INFO [Flyway Community Edition 5.2.4 by Boxfuse]
10:14 LOG: INFO [Database: jdbc:postgresql://localhost:50047/template1 (PostgreSQL 10.6)]
10:14 LOG: DEBUG[Driver  : PostgreSQL JDBC Driver 42.2.5]
10:14 LOG: DEBUG[DDL Transactions Supported: true]
10:14 LOG: DEBUG[Schema: public]
10:14 LOG: DEBUG[Scanning for classpath resources at 'classpath:db/migration' ...]
10:14 LOG: DEBUG[Determining location urls for classpath:db/migration using ClassLoader jdk.internal.loader.ClassLoaders$AppClassLoader@6ed3ef1 ...]
10:14 LOG: DEBUG[Scanning URL: file:/C:/Users/valik/IdeaProjects/java-lab-task-1/target/classes/db/migration]
10:14 LOG: DEBUG[JBoss VFS v2 available: false]
10:14 LOG: DEBUG[Scanning starting at classpath root in filesystem: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\]
10:14 LOG: DEBUG[Scanning for resources in path: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\db\migration (db/migration)]
10:14 LOG: DEBUG[Found resource: db/migration/V1_1__init_data.sql]
10:14 LOG: DEBUG[Found resource: db/migration/V1__init_schema.sql]
10:14 LOG: DEBUG[Scanning for classes at classpath:db/migration]
10:14 LOG: DEBUG[Scanning for SQL callbacks ...]
10:14 LOG: DEBUG[Spring Jdbc available: true]
10:14 LOG: DEBUG[Validating migrations ...]
10:14 LOG: DEBUG[Parsing V1_1__init_data.sql ...]
10:14 LOG: DEBUG[Found statement at line 1: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
10:14 LOG: DEBUG[Found statement at line 2: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
10:14 LOG: DEBUG[Found statement at line 3: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
10:14 LOG: DEBUG[Found statement at line 4: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
10:14 LOG: DEBUG[Found statement at line 6: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test1', 4, 'test1', 1, 1, 'security')]
10:14 LOG: DEBUG[Found statement at line 7: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test2', 4, 'test2', 1, 1, 'security')]
10:14 LOG: DEBUG[Found statement at line 8: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test3', 4, 'test3', 1, 1, 'security')]
10:14 LOG: DEBUG[Found statement at line 9: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test4', 4, 'test4', 1, 1, 'security')]
10:14 LOG: DEBUG[Parsing V1__init_schema.sql ...]
10:14 LOG: DEBUG[Found statement at line 1: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
10:14 LOG: DEBUG[Found statement at line 8: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
10:14 LOG: DEBUG[Found statement at line 16: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
10:14 LOG: DEBUG[Found statement at line 24: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
10:14 LOG: DEBUG[Found statement at line 36: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
10:14 LOG: DEBUG[Found statement at line 43: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
10:14 LOG: DEBUG[Found statement at line 59: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
10:14 LOG: DEBUG[Found statement at line 68: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
10:14 LOG: DEBUG[Filtering out resource: db/migration/V1_1__init_data.sql (filename: V1_1__init_data.sql)]
10:14 LOG: DEBUG[Filtering out resource: db/migration/V1__init_schema.sql (filename: V1__init_schema.sql)]
10:14 LOG: INFO [Successfully validated 2 migrations (execution time 00:00.034s)]
10:14 LOG: DEBUG[Schema "public" already exists. Skipping schema creation.]
10:14 LOG: INFO [Creating Schema History table: "public"."flyway_schema_history"]
10:14 LOG: DEBUG[Parsing createMetaDataTable.sql ...]
10:14 LOG: DEBUG[Found statement at line 17: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
10:14 LOG: DEBUG[Found statement at line 29: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
10:14 LOG: DEBUG[Found statement at line 31: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
10:14 LOG: DEBUG[Executing SQL: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
10:14 LOG: DEBUG[Update Count: 0]
10:14 LOG: DEBUG[Executing SQL: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
10:14 LOG: DEBUG[Update Count: 0]
10:14 LOG: DEBUG[Executing SQL: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
10:14 LOG: DEBUG[Update Count: 0]
10:14 LOG: DEBUG[Created Schema History table: "public"."flyway_schema_history"]
10:14 LOG: INFO [Current version of schema "public": << Empty Schema >>]
10:14 LOG: INFO [Migrating schema "public" to version 1 - init schema]
10:14 LOG: DEBUG[Executing SQL: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
10:14 LOG: DEBUG[Update Count: 0]
10:14 LOG: DEBUG[Executing SQL: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
10:14 LOG: DEBUG[Update Count: 0]
10:14 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
10:14 LOG: DEBUG[Update Count: 0]
10:14 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
10:14 LOG: DEBUG[Update Count: 0]
10:14 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
10:14 LOG: DEBUG[Update Count: 0]
10:14 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
10:14 LOG: DEBUG[Update Count: 0]
10:14 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
10:14 LOG: DEBUG[Update Count: 0]
10:14 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
10:14 LOG: DEBUG[Update Count: 0]
10:14 LOG: DEBUG[Successfully completed migration of schema "public" to version 1 - init schema]
10:14 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
10:14 LOG: INFO [Migrating schema "public" to version 1.1 - init data]
10:14 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
10:14 LOG: DEBUG[Update Count: 1]
10:14 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
10:14 LOG: DEBUG[Update Count: 1]
10:14 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
10:14 LOG: DEBUG[Update Count: 1]
10:14 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
10:14 LOG: DEBUG[Update Count: 1]
10:14 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test1', 4, 'test1', 1, 1, 'security')]
10:14 LOG: DEBUG[Update Count: 1]
10:14 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test2', 4, 'test2', 1, 1, 'security')]
10:14 LOG: DEBUG[Update Count: 1]
10:14 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test3', 4, 'test3', 1, 1, 'security')]
10:14 LOG: DEBUG[Update Count: 1]
10:14 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test4', 4, 'test4', 1, 1, 'security')]
10:14 LOG: DEBUG[Update Count: 1]
10:14 LOG: DEBUG[Successfully completed migration of schema "public" to version 1.1 - init data]
10:14 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
10:14 LOG: INFO [Successfully applied 2 migrations to schema "public" (execution time 00:00.193s)]
10:14 LOG: DEBUG[Memory usage: 15 of 126M]
10:14 LOG: TRACE[beforeTestClass(): class [repository.HotelRepositoryTest]]
10:14 LOG: DEBUG[Before test class: context [DefaultTestContext@f415a95 testClass = HotelRepositoryTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@cf65451 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].]
10:14 LOG: TRACE[afterTestClass(): class [repository.HotelRepositoryTest]]
10:14 LOG: DEBUG[After test class: context [DefaultTestContext@f415a95 testClass = HotelRepositoryTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@cf65451 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].]
10:15 LOG: DEBUG[SpringJUnit4ClassRunner constructor called with [class repository.HotelRepositoryTest]]
10:15 LOG: DEBUG[Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]]
10:15 LOG: DEBUG[Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]]
10:15 LOG: DEBUG[Instantiating TestContextBootstrapper for test class [repository.HotelRepositoryTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]]
10:15 LOG: TRACE[Retrieved @ContextConfiguration [@org.springframework.test.context.ContextConfiguration(name=, value=[], loader=interface org.springframework.test.context.ContextLoader, classes=[class config.TestConfig], locations=[], inheritInitializers=true, initializers=[], inheritLocations=true)] for declaring class [repository.HotelRepositoryTest].]
10:15 LOG: TRACE[Resolved context configuration attributes: [ContextConfigurationAttributes@29ca3d04 declaringClass = 'repository.HotelRepositoryTest', classes = '{class config.TestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']]
10:15 LOG: TRACE[Resolving ContextLoader for context configuration attributes [ContextConfigurationAttributes@29ca3d04 declaringClass = 'repository.HotelRepositoryTest', classes = '{class config.TestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']]
10:15 LOG: TRACE[Using ContextLoader class [org.springframework.test.context.support.DelegatingSmartContextLoader] for test class [repository.HotelRepositoryTest]]
10:15 LOG: TRACE[Processing locations and classes for context configuration attributes [ContextConfigurationAttributes@29ca3d04 declaringClass = 'repository.HotelRepositoryTest', classes = '{class config.TestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']]
10:15 LOG: DEBUG[Delegating to AnnotationConfigContextLoader to process context configuration [ContextConfigurationAttributes@29ca3d04 declaringClass = 'repository.HotelRepositoryTest', classes = '{class config.TestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].]
10:15 LOG: TRACE[Loaded [org.springframework.test.context.ContextCustomizerFactory] names: [org.springframework.test.context.web.socket.MockServerContainerContextCustomizerFactory]]
10:15 LOG: TRACE[Processing context initializers for configuration attributes [ContextConfigurationAttributes@29ca3d04 declaringClass = 'repository.HotelRepositoryTest', classes = '{class config.TestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']]
10:15 LOG: DEBUG[Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [repository.HotelRepositoryTest]]
10:15 LOG: DEBUG[@TestExecutionListeners is not present for class [repository.HotelRepositoryTest]: using defaults.]
10:15 LOG: INFO [Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]]
10:15 LOG: DEBUG[Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]]
10:15 LOG: INFO [Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6d3c5255, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@b1712f3, org.springframework.test.context.support.DirtiesContextTestExecutionListener@6986bbaf, org.springframework.test.context.transaction.TransactionalTestExecutionListener@4879dfad, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@4758820d]]
10:15 LOG: TRACE[Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6d3c5255]
10:15 LOG: TRACE[Registering TestExecutionListener: org.springframework.test.context.support.DependencyInjectionTestExecutionListener@b1712f3]
10:15 LOG: TRACE[Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextTestExecutionListener@6986bbaf]
10:15 LOG: TRACE[Registering TestExecutionListener: org.springframework.test.context.transaction.TransactionalTestExecutionListener@4879dfad]
10:15 LOG: TRACE[Registering TestExecutionListener: org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@4758820d]
10:15 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [repository.HotelRepositoryTest]]
10:15 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [repository.HotelRepositoryTest]]
10:15 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [repository.HotelRepositoryTest]]
10:15 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [repository.HotelRepositoryTest]]
10:15 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [repository.HotelRepositoryTest]]
10:15 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [repository.HotelRepositoryTest]]
10:15 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [repository.HotelRepositoryTest]]
10:15 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [repository.HotelRepositoryTest]]
10:15 LOG: TRACE[beforeTestClass(): class [repository.HotelRepositoryTest]]
10:15 LOG: DEBUG[Before test class: context [DefaultTestContext@ebaa6cb testClass = HotelRepositoryTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@906d29b testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].]
10:15 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [repository.HotelRepositoryTest]]
10:15 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [repository.HotelRepositoryTest]]
10:15 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
10:15 LOG: TRACE[prepareTestInstance(): instance [repository.HotelRepositoryTest@4b2a01d4]]
10:15 LOG: DEBUG[Performing dependency injection for test context [[DefaultTestContext@ebaa6cb testClass = HotelRepositoryTest, testInstance = repository.HotelRepositoryTest@4b2a01d4, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@906d29b testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].]
10:15 LOG: DEBUG[Delegating to AnnotationConfigContextLoader to load context from [MergedContextConfiguration@906d29b testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].]
10:15 LOG: DEBUG[Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@906d29b testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].]
10:15 LOG: DEBUG[Activating profiles []]
10:15 LOG: DEBUG[Registering annotated classes: {class config.TestConfig}]
10:15 LOG: TRACE[Refreshing org.springframework.context.support.GenericApplicationContext@2a5b3fee, started on Wed Feb 20 10:15:41 MSK 2019]
10:15 LOG: DEBUG[Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor']
10:15 LOG: TRACE[Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor']
10:15 LOG: TRACE[Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references]
10:15 LOG: TRACE[Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor']
10:15 LOG: TRACE[Registering bean definition for @Bean method config.TestConfig.getDataSource()]
10:15 LOG: TRACE[Registering bean definition for @Bean method config.TestConfig.getJdbcTemplate()]
10:15 LOG: TRACE[Registering bean definition for @Bean method config.TestConfig.userRepository()]
10:15 LOG: TRACE[Registering bean definition for @Bean method config.TestConfig.hotelRepository()]
10:15 LOG: TRACE[Registering bean definition for @Bean method config.TestConfig.userDataContext()]
10:15 LOG: TRACE[Registering bean definition for @Bean method config.TestConfig.hotelDataContext()]
10:15 LOG: TRACE[Successfully enhanced config.TestConfig; enhanced class name is: config.TestConfig$$EnhancerBySpringCGLIB$$772fa64d]
10:15 LOG: TRACE[Replacing bean definition 'testConfig' existing class 'config.TestConfig' with enhanced class 'config.TestConfig$$EnhancerBySpringCGLIB$$772fa64d']
10:15 LOG: DEBUG[Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor']
10:15 LOG: TRACE[Creating instance of bean 'org.springframework.context.event.internalEventListenerProcessor']
10:15 LOG: TRACE[Eagerly caching bean 'org.springframework.context.event.internalEventListenerProcessor' to allow for resolving potential circular references]
10:15 LOG: TRACE[Finished creating instance of bean 'org.springframework.context.event.internalEventListenerProcessor']
10:15 LOG: DEBUG[Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory']
10:15 LOG: TRACE[Creating instance of bean 'org.springframework.context.event.internalEventListenerFactory']
10:15 LOG: TRACE[Eagerly caching bean 'org.springframework.context.event.internalEventListenerFactory' to allow for resolving potential circular references]
10:15 LOG: TRACE[Finished creating instance of bean 'org.springframework.context.event.internalEventListenerFactory']
10:15 LOG: DEBUG[Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor']
10:15 LOG: TRACE[Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor']
10:15 LOG: TRACE[Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references]
10:15 LOG: TRACE[Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor']
10:15 LOG: DEBUG[Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor']
10:15 LOG: TRACE[Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor']
10:15 LOG: TRACE[Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references]
10:15 LOG: TRACE[Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor']
10:15 LOG: TRACE[No 'messageSource' bean, using [Empty MessageSource]]
10:15 LOG: TRACE[No 'applicationEventMulticaster' bean, using [SimpleApplicationEventMulticaster]]
10:15 LOG: TRACE[Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@7fc44dec: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,testConfig,getDataSource,getJdbcTemplate,userRepository,hotelRepository,userDataContext,hotelDataContext]; root of factory hierarchy]
10:15 LOG: TRACE[Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor']
10:15 LOG: TRACE[Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor']
10:15 LOG: TRACE[Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor']
10:15 LOG: TRACE[Returning cached instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor']
10:15 LOG: TRACE[Returning cached instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory']
10:15 LOG: DEBUG[Creating shared instance of singleton bean 'testConfig']
10:15 LOG: TRACE[Creating instance of bean 'testConfig']
10:15 LOG: TRACE[Eagerly caching bean 'testConfig' to allow for resolving potential circular references]
10:15 LOG: TRACE[Finished creating instance of bean 'testConfig']
10:15 LOG: DEBUG[Creating shared instance of singleton bean 'getDataSource']
10:15 LOG: TRACE[Creating instance of bean 'getDataSource']
10:15 LOG: TRACE[Returning cached instance of singleton bean 'testConfig']
10:15 LOG: INFO [Starting embedded database: url='jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa']
10:15 LOG: DEBUG[Fetching JDBC Connection from DataSource]
10:15 LOG: DEBUG[Creating new JDBC Driver Connection to [jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false]]
10:15 LOG: DEBUG[Executing SQL script from class path resource [db/migration/V1__init_schema.sql]]
10:15 LOG: DEBUG[0 returned as update count for SQL: CREATE TYPE TOUR_TYPE AS ENUM ( 'bus', 'sightseeing', 'shore_excursion', 'adventure', 'sporting', 'cruise', 'escorted', 'guided', 'rail', 'extreme' )]
10:15 LOG: DEBUG[0 returned as update count for SQL: CREATE TYPE HOTEL_FEATURE AS ENUM ( 'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning', 'food_delivery', 'pool', 'conference_hall', 'safe' )]
10:15 LOG: DEBUG[0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS "user" ( id SERIAL, login VARCHAR(255) UNIQUE NOT NULL, password VARCHAR(255) NOT NULL, PRIMARY KEY (id) )]
10:15 LOG: DEBUG[0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS "hotel" ( id SERIAL, name VARCHAR(255) NOT NULL, stars SMALLINT NOT NULL, website VARCHAR(255) NOT NULL, latitude DECIMAL(8, 6) NOT NULL, longitude DECIMAL(8, 6) NOT NULL, feature HOTEL_FEATURE NOT NULL, PRIMARY KEY (id) )]
10:15 LOG: DEBUG[0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS "country" ( id SERIAL, name VARCHAR(255), PRIMARY KEY (id) )]
10:15 LOG: DEBUG[0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS "tour" ( id SERIAL, photo VARCHAR(255), date DATE NOT NULL, duration INT NOT NULL, description TEXT NOT NULL, cost DECIMAL(19, 3) NOT NULL, tour_type TOUR_TYPE NOT NULL, hotel_id INT NOT NULL, country_id INT NOT NULL, PRIMARY KEY (id), FOREIGN KEY (hotel_id) REFERENCES "hotel" (id), FOREIGN KEY (country_id) REFERENCES "country" (id) )]
10:15 LOG: DEBUG[0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS "usertour" ( user_id INT UNIQUE NOT NULL, tour_id INT UNIQUE NOT NULL, PRIMARY KEY (user_id, tour_id), FOREIGN KEY (user_id) REFERENCES "user" (id), FOREIGN KEY (tour_id) REFERENCES "tour" (id) )]
10:15 LOG: DEBUG[0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS "review" ( id SERIAL, date DATE NOT NULL, text TEXT NOT NULL, user_id INT NOT NULL, tour_id INT NOT NULL, PRIMARY KEY (id), FOREIGN KEY (user_id) REFERENCES "user" (id), FOREIGN KEY (tour_id) REFERENCES "tour" (id) ) ]
10:15 LOG: DEBUG[Executed SQL script from class path resource [db/migration/V1__init_schema.sql] in 55 ms.]
10:15 LOG: DEBUG[Executing SQL script from class path resource [db/migration/V1_1__init_data.sql]]
10:15 LOG: DEBUG[1 returned as update count for SQL: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
10:15 LOG: DEBUG[1 returned as update count for SQL: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
10:15 LOG: DEBUG[1 returned as update count for SQL: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
10:15 LOG: DEBUG[1 returned as update count for SQL: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
10:15 LOG: DEBUG[1 returned as update count for SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test1', 4, 'test1', 1, 1, 'security')]
10:15 LOG: DEBUG[1 returned as update count for SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test2', 4, 'test2', 1, 1, 'security')]
10:15 LOG: DEBUG[1 returned as update count for SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test3', 4, 'test3', 1, 1, 'security')]
10:15 LOG: DEBUG[1 returned as update count for SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test4', 4, 'test4', 1, 1, 'security')]
10:15 LOG: DEBUG[Executed SQL script from class path resource [db/migration/V1_1__init_data.sql] in 13 ms.]
10:15 LOG: TRACE[Eagerly caching bean 'getDataSource' to allow for resolving potential circular references]
10:15 LOG: TRACE[Finished creating instance of bean 'getDataSource']
10:15 LOG: DEBUG[Creating shared instance of singleton bean 'getJdbcTemplate']
10:15 LOG: TRACE[Creating instance of bean 'getJdbcTemplate']
10:15 LOG: TRACE[Returning cached instance of singleton bean 'testConfig']
10:15 LOG: TRACE[Returning cached instance of singleton bean 'getDataSource']
10:15 LOG: TRACE[Eagerly caching bean 'getJdbcTemplate' to allow for resolving potential circular references]
10:15 LOG: TRACE[Invoking afterPropertiesSet() on bean with name 'getJdbcTemplate']
10:15 LOG: TRACE[Finished creating instance of bean 'getJdbcTemplate']
10:15 LOG: DEBUG[Creating shared instance of singleton bean 'userRepository']
10:15 LOG: TRACE[Creating instance of bean 'userRepository']
10:15 LOG: TRACE[Returning cached instance of singleton bean 'testConfig']
10:15 LOG: TRACE[Loaded [org.springframework.beans.BeanInfoFactory] names: [org.springframework.beans.ExtendedBeanInfoFactory]]
10:15 LOG: TRACE[Getting BeanInfo for class [com.epam.travelagency.repository.UserRepository]]
10:15 LOG: TRACE[Caching PropertyDescriptors for class [com.epam.travelagency.repository.UserRepository]]
10:15 LOG: TRACE[Found bean property 'class' of type [java.lang.Class]]
10:15 LOG: TRACE[Found bean property 'dataContext' of type [com.epam.travelagency.storage.DataContext]]
10:15 LOG: TRACE[Registered injected element on class [com.epam.travelagency.repository.UserRepository]: AutowiredMethodElement for public void com.epam.travelagency.repository.Repository.setDataContext(com.epam.travelagency.storage.DataContext)]
10:15 LOG: TRACE[Eagerly caching bean 'userRepository' to allow for resolving potential circular references]
10:15 LOG: TRACE[Processing injected element of bean 'userRepository': AutowiredMethodElement for public void com.epam.travelagency.repository.Repository.setDataContext(com.epam.travelagency.storage.DataContext)]
10:15 LOG: DEBUG[Creating shared instance of singleton bean 'userDataContext']
10:15 LOG: TRACE[Creating instance of bean 'userDataContext']
10:15 LOG: TRACE[Returning cached instance of singleton bean 'testConfig']
10:15 LOG: TRACE[Returning cached instance of singleton bean 'getJdbcTemplate']
10:15 LOG: TRACE[Eagerly caching bean 'userDataContext' to allow for resolving potential circular references]
10:15 LOG: TRACE[Finished creating instance of bean 'userDataContext']
10:15 LOG: TRACE[Autowiring by type from bean name 'userRepository' to bean named 'userDataContext']
10:15 LOG: TRACE[Finished creating instance of bean 'userRepository']
10:15 LOG: DEBUG[Creating shared instance of singleton bean 'hotelRepository']
10:15 LOG: TRACE[Creating instance of bean 'hotelRepository']
10:15 LOG: TRACE[Returning cached instance of singleton bean 'testConfig']
10:15 LOG: TRACE[Getting BeanInfo for class [com.epam.travelagency.repository.HotelRepository]]
10:15 LOG: TRACE[Caching PropertyDescriptors for class [com.epam.travelagency.repository.HotelRepository]]
10:15 LOG: TRACE[Found bean property 'class' of type [java.lang.Class]]
10:15 LOG: TRACE[Found bean property 'dataContext' of type [com.epam.travelagency.storage.DataContext]]
10:15 LOG: TRACE[Registered injected element on class [com.epam.travelagency.repository.HotelRepository]: AutowiredMethodElement for public void com.epam.travelagency.repository.Repository.setDataContext(com.epam.travelagency.storage.DataContext)]
10:15 LOG: TRACE[Eagerly caching bean 'hotelRepository' to allow for resolving potential circular references]
10:15 LOG: TRACE[Processing injected element of bean 'hotelRepository': AutowiredMethodElement for public void com.epam.travelagency.repository.Repository.setDataContext(com.epam.travelagency.storage.DataContext)]
10:15 LOG: DEBUG[Creating shared instance of singleton bean 'hotelDataContext']
10:15 LOG: TRACE[Creating instance of bean 'hotelDataContext']
10:15 LOG: TRACE[Returning cached instance of singleton bean 'testConfig']
10:15 LOG: TRACE[Returning cached instance of singleton bean 'getJdbcTemplate']
10:15 LOG: TRACE[Eagerly caching bean 'hotelDataContext' to allow for resolving potential circular references]
10:15 LOG: TRACE[Finished creating instance of bean 'hotelDataContext']
10:15 LOG: TRACE[Autowiring by type from bean name 'hotelRepository' to bean named 'hotelDataContext']
10:15 LOG: TRACE[Finished creating instance of bean 'hotelRepository']
10:15 LOG: TRACE[Returning cached instance of singleton bean 'userDataContext']
10:15 LOG: TRACE[Returning cached instance of singleton bean 'hotelDataContext']
10:15 LOG: TRACE[No @EventListener annotations found on bean class: config.TestConfig$$EnhancerBySpringCGLIB$$772fa64d]
10:15 LOG: TRACE[No @EventListener annotations found on bean class: com.epam.travelagency.repository.UserRepository]
10:15 LOG: TRACE[No @EventListener annotations found on bean class: com.epam.travelagency.repository.HotelRepository]
10:15 LOG: TRACE[No @EventListener annotations found on bean class: com.epam.travelagency.storage.posgresql.UserDataContext]
10:15 LOG: TRACE[No @EventListener annotations found on bean class: com.epam.travelagency.storage.posgresql.HotelDataContext]
10:15 LOG: TRACE[No @EventListener annotations found on bean class: java.util.Properties]
10:15 LOG: TRACE[No @EventListener annotations found on bean class: java.util.Collections$UnmodifiableMap]
10:15 LOG: TRACE[No 'lifecycleProcessor' bean, using [DefaultLifecycleProcessor]]
10:15 LOG: TRACE[Returning cached instance of singleton bean 'lifecycleProcessor']
10:15 LOG: TRACE[Searching for key 'spring.liveBeansView.mbeanDomain' in PropertySource 'systemProperties']
10:15 LOG: TRACE[Searching for key 'spring.liveBeansView.mbeanDomain' in PropertySource 'systemEnvironment']
10:15 LOG: TRACE[Could not find key 'spring.liveBeansView.mbeanDomain' in any property source]
10:15 LOG: DEBUG[Storing ApplicationContext in cache under key [[MergedContextConfiguration@906d29b testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]]
10:15 LOG: DEBUG[Spring test ApplicationContext cache statistics: [DefaultContextCache@68e62ca4 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 0, missCount = 1]]
10:15 LOG: TRACE[Processing injected element of bean 'repository.HotelRepositoryTest': AutowiredFieldElement for private com.epam.travelagency.repository.HotelRepository repository.HotelRepositoryTest.hotelRepository]
10:15 LOG: TRACE[Returning cached instance of singleton bean 'hotelRepository']
10:15 LOG: TRACE[Autowiring by type from bean name 'repository.HotelRepositoryTest' to bean named 'hotelRepository']
10:15 LOG: INFO [Detected a Windows x86_64 system]
10:15 LOG: INFO [Postgres binaries at C:\Users\valik\AppData\Local\Temp\embedded-pg\PG-91c1fa33789b0c913345bf0253da6836]
10:15 LOG: TRACE[da808abf-4475-4513-9d51-d970d78ca58a postgres data directory is C:\Users\valik\AppData\Local\Temp\epg16383153144774647891]
10:15 LOG: INFO [The files belonging to this database system will be owned by user "valik".]
10:15 LOG: INFO [This user must also own the server process.]
10:15 LOG: INFO []
10:15 LOG: INFO [The database cluster will be initialized with locale "Russian_Belarus.1251".]
10:15 LOG: INFO [The default text search configuration will be set to "russian".]
10:15 LOG: INFO []
10:15 LOG: INFO [Data page checksums are disabled.]
10:15 LOG: INFO []
10:15 LOG: INFO [fixing permissions on existing directory C:/Users/valik/AppData/Local/Temp/epg16383153144774647891 ... ok]
10:15 LOG: INFO [creating subdirectories ... ok]
10:15 LOG: INFO [selecting default max_connections ... 100]
10:15 LOG: INFO [selecting default shared_buffers ... 128MB]
10:15 LOG: INFO [selecting dynamic shared memory implementation ... windows]
10:15 LOG: INFO [creating configuration files ... ok]
10:15 LOG: INFO [running bootstrap script ... ok]
10:15 LOG: INFO [performing post-bootstrap initialization ... ok]
10:15 LOG: INFO [syncing data to disk ... ok]
10:15 LOG: INFO []
10:15 LOG: INFO [Success. You can now start the database server using:]
10:15 LOG: INFO []
10:15 LOG: INFO [    C:/Users/valik/AppData/Local/Temp/embedded-pg/PG-91c1fa33789b0c913345bf0253da6836/bin/pg_ctl -D ^"C^:^\Users^\valik^\AppData^\Local^\Temp^\epg16383153144774647891^" -l logfile start]
10:15 LOG: INFO []
10:15 LOG: INFO [da808abf-4475-4513-9d51-d970d78ca58a initdb completed in 00:00:07.277]
10:15 LOG: INFO [da808abf-4475-4513-9d51-d970d78ca58a postmaster started as Process[pid=7324, exitValue="not exited"] on port 50076.  Waiting up to PT10S for server startup to finish.]
10:15 LOG: INFO [waiting for server to start....2019-02-20 10:15:50.057 +03 [11804] ���������:  ��� ����� ����������� �� ������ IPv6 "::1" ������ ���� 50076]
10:15 LOG: INFO [2019-02-20 10:15:50.058 +03 [11804] ���������:  ��� ����� ����������� �� ������ IPv4 "127.0.0.1" ������ ���� 50076]
10:15 LOG: INFO [2019-02-20 10:15:50.139 +03 [6404] ���������:  ������� �� ���� ���������: 2019-02-20 10:15:48 +03]
10:15 LOG: INFO [2019-02-20 10:15:50.193 +03 [11804] ���������:  ������� �� ������ ��������� �����������]
10:15 LOG: INFO [ done]
10:15 LOG: INFO [da808abf-4475-4513-9d51-d970d78ca58a postmaster startup finished in 00:00:00.662]
10:15 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
10:15 LOG: INFO [Flyway Community Edition 5.2.4 by Boxfuse]
10:15 LOG: INFO [Database: jdbc:postgresql://localhost:50076/template1 (PostgreSQL 10.6)]
10:15 LOG: DEBUG[Driver  : PostgreSQL JDBC Driver 42.2.5]
10:15 LOG: DEBUG[DDL Transactions Supported: true]
10:15 LOG: DEBUG[Schema: public]
10:15 LOG: DEBUG[Scanning for classpath resources at 'classpath:db/migration' ...]
10:15 LOG: DEBUG[Determining location urls for classpath:db/migration using ClassLoader jdk.internal.loader.ClassLoaders$AppClassLoader@6ed3ef1 ...]
10:15 LOG: DEBUG[Scanning URL: file:/C:/Users/valik/IdeaProjects/java-lab-task-1/target/classes/db/migration]
10:15 LOG: DEBUG[JBoss VFS v2 available: false]
10:15 LOG: DEBUG[Scanning starting at classpath root in filesystem: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\]
10:15 LOG: DEBUG[Scanning for resources in path: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\db\migration (db/migration)]
10:15 LOG: DEBUG[Found resource: db/migration/V1_1__init_data.sql]
10:15 LOG: DEBUG[Found resource: db/migration/V1__init_schema.sql]
10:15 LOG: DEBUG[Scanning for classes at classpath:db/migration]
10:15 LOG: DEBUG[Scanning for SQL callbacks ...]
10:15 LOG: DEBUG[Spring Jdbc available: true]
10:15 LOG: DEBUG[Validating migrations ...]
10:15 LOG: DEBUG[Parsing V1_1__init_data.sql ...]
10:15 LOG: DEBUG[Found statement at line 1: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
10:15 LOG: DEBUG[Found statement at line 2: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
10:15 LOG: DEBUG[Found statement at line 3: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
10:15 LOG: DEBUG[Found statement at line 4: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
10:15 LOG: DEBUG[Found statement at line 6: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test1', 4, 'test1', 1, 1, 'security')]
10:15 LOG: DEBUG[Found statement at line 7: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test2', 4, 'test2', 1, 1, 'security')]
10:15 LOG: DEBUG[Found statement at line 8: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test3', 4, 'test3', 1, 1, 'security')]
10:15 LOG: DEBUG[Found statement at line 9: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test4', 4, 'test4', 1, 1, 'security')]
10:15 LOG: DEBUG[Parsing V1__init_schema.sql ...]
10:15 LOG: DEBUG[Found statement at line 1: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
10:15 LOG: DEBUG[Found statement at line 8: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
10:15 LOG: DEBUG[Found statement at line 16: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
10:15 LOG: DEBUG[Found statement at line 24: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
10:15 LOG: DEBUG[Found statement at line 36: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
10:15 LOG: DEBUG[Found statement at line 43: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
10:15 LOG: DEBUG[Found statement at line 59: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
10:15 LOG: DEBUG[Found statement at line 68: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
10:15 LOG: DEBUG[Filtering out resource: db/migration/V1_1__init_data.sql (filename: V1_1__init_data.sql)]
10:15 LOG: DEBUG[Filtering out resource: db/migration/V1__init_schema.sql (filename: V1__init_schema.sql)]
10:15 LOG: INFO [Successfully validated 2 migrations (execution time 00:00.025s)]
10:15 LOG: DEBUG[Schema "public" already exists. Skipping schema creation.]
10:15 LOG: INFO [Creating Schema History table: "public"."flyway_schema_history"]
10:15 LOG: DEBUG[Parsing createMetaDataTable.sql ...]
10:15 LOG: DEBUG[Found statement at line 17: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
10:15 LOG: DEBUG[Found statement at line 29: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
10:15 LOG: DEBUG[Found statement at line 31: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
10:15 LOG: DEBUG[Executing SQL: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
10:15 LOG: DEBUG[Update Count: 0]
10:15 LOG: DEBUG[Executing SQL: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
10:15 LOG: DEBUG[Update Count: 0]
10:15 LOG: DEBUG[Executing SQL: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
10:15 LOG: DEBUG[Update Count: 0]
10:15 LOG: DEBUG[Created Schema History table: "public"."flyway_schema_history"]
10:15 LOG: INFO [Current version of schema "public": << Empty Schema >>]
10:15 LOG: INFO [Migrating schema "public" to version 1 - init schema]
10:15 LOG: DEBUG[Executing SQL: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
10:15 LOG: DEBUG[Update Count: 0]
10:15 LOG: DEBUG[Executing SQL: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
10:15 LOG: DEBUG[Update Count: 0]
10:15 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
10:15 LOG: DEBUG[Update Count: 0]
10:15 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
10:15 LOG: DEBUG[Update Count: 0]
10:15 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
10:15 LOG: DEBUG[Update Count: 0]
10:15 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
10:15 LOG: DEBUG[Update Count: 0]
10:15 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
10:15 LOG: DEBUG[Update Count: 0]
10:15 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
10:15 LOG: DEBUG[Update Count: 0]
10:15 LOG: DEBUG[Successfully completed migration of schema "public" to version 1 - init schema]
10:15 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
10:15 LOG: INFO [Migrating schema "public" to version 1.1 - init data]
10:15 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
10:15 LOG: DEBUG[Update Count: 1]
10:15 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
10:15 LOG: DEBUG[Update Count: 1]
10:15 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
10:15 LOG: DEBUG[Update Count: 1]
10:15 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
10:15 LOG: DEBUG[Update Count: 1]
10:15 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test1', 4, 'test1', 1, 1, 'security')]
10:15 LOG: DEBUG[Update Count: 1]
10:15 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test2', 4, 'test2', 1, 1, 'security')]
10:15 LOG: DEBUG[Update Count: 1]
10:15 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test3', 4, 'test3', 1, 1, 'security')]
10:15 LOG: DEBUG[Update Count: 1]
10:15 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test4', 4, 'test4', 1, 1, 'security')]
10:15 LOG: DEBUG[Update Count: 1]
10:15 LOG: DEBUG[Successfully completed migration of schema "public" to version 1.1 - init data]
10:15 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
10:15 LOG: INFO [Successfully applied 2 migrations to schema "public" (execution time 00:00.174s)]
10:15 LOG: DEBUG[Memory usage: 42 of 126M]
10:15 LOG: TRACE[beforeTestMethod(): instance [repository.HotelRepositoryTest@4b2a01d4], method [public void repository.HotelRepositoryTest.shouldBeReadCorrectly()]]
10:15 LOG: DEBUG[Before test method: context [DefaultTestContext@ebaa6cb testClass = HotelRepositoryTest, testInstance = repository.HotelRepositoryTest@4b2a01d4, testMethod = shouldBeReadCorrectly@HotelRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@906d29b testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].]
10:15 LOG: TRACE[beforeTestExecution(): instance [repository.HotelRepositoryTest@4b2a01d4], method [public void repository.HotelRepositoryTest.shouldBeReadCorrectly()]]
10:15 LOG: DEBUG[Executing prepared SQL query]
10:15 LOG: DEBUG[Executing prepared SQL statement [SELECT id, name, stars, website, latitude, longitude, feature FROM hotel WHERE id=?]]
10:15 LOG: DEBUG[Fetching JDBC Connection from DataSource]
10:15 LOG: TRACE[Setting SQL statement parameter value: column index 1, parameter value [1], value class [java.lang.Integer], SQL type unknown]
10:15 LOG: TRACE[afterTestExecution(): instance [repository.HotelRepositoryTest@4b2a01d4], method [public void repository.HotelRepositoryTest.shouldBeReadCorrectly()], exception [java.lang.AssertionError: expected:<10.0> but was:<1.000000>]]
10:15 LOG: TRACE[afterTestMethod(): instance [repository.HotelRepositoryTest@4b2a01d4], method [public void repository.HotelRepositoryTest.shouldBeReadCorrectly()], exception [java.lang.AssertionError: expected:<10.0> but was:<1.000000>]]
10:15 LOG: DEBUG[After test method: context [DefaultTestContext@ebaa6cb testClass = HotelRepositoryTest, testInstance = repository.HotelRepositoryTest@4b2a01d4, testMethod = shouldBeReadCorrectly@HotelRepositoryTest, testException = java.lang.AssertionError: expected:<10.0> but was:<1.000000>, mergedContextConfiguration = [MergedContextConfiguration@906d29b testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].]
10:15 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [repository.HotelRepositoryTest]]
10:15 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [repository.HotelRepositoryTest]]
10:15 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
10:15 LOG: TRACE[prepareTestInstance(): instance [repository.HotelRepositoryTest@28348c6]]
10:15 LOG: DEBUG[Performing dependency injection for test context [[DefaultTestContext@ebaa6cb testClass = HotelRepositoryTest, testInstance = repository.HotelRepositoryTest@28348c6, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@906d29b testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].]
10:15 LOG: DEBUG[Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@906d29b testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]]
10:15 LOG: DEBUG[Spring test ApplicationContext cache statistics: [DefaultContextCache@68e62ca4 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 1, missCount = 1]]
10:15 LOG: TRACE[Processing injected element of bean 'repository.HotelRepositoryTest': AutowiredFieldElement for private com.epam.travelagency.repository.HotelRepository repository.HotelRepositoryTest.hotelRepository]
10:15 LOG: TRACE[Returning cached instance of singleton bean 'hotelRepository']
10:15 LOG: TRACE[beforeTestMethod(): instance [repository.HotelRepositoryTest@28348c6], method [public void repository.HotelRepositoryTest.shouldBeCreated()]]
10:15 LOG: DEBUG[Before test method: context [DefaultTestContext@ebaa6cb testClass = HotelRepositoryTest, testInstance = repository.HotelRepositoryTest@28348c6, testMethod = shouldBeCreated@HotelRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@906d29b testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].]
10:15 LOG: TRACE[beforeTestExecution(): instance [repository.HotelRepositoryTest@28348c6], method [public void repository.HotelRepositoryTest.shouldBeCreated()]]
10:15 LOG: DEBUG[Executing prepared SQL update]
10:15 LOG: DEBUG[Executing prepared SQL statement [INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES (?,?,?,?,?,?::hotel_feature)]]
10:15 LOG: DEBUG[Fetching JDBC Connection from DataSource]
10:15 LOG: TRACE[SQL update affected 1 rows]
10:15 LOG: DEBUG[Executing prepared SQL query]
10:15 LOG: DEBUG[Executing prepared SQL statement [SELECT id, name, stars, website, latitude, longitude, feature FROM hotel WHERE id=?]]
10:15 LOG: DEBUG[Fetching JDBC Connection from DataSource]
10:15 LOG: TRACE[Setting SQL statement parameter value: column index 1, parameter value [5], value class [java.lang.Integer], SQL type unknown]
10:15 LOG: TRACE[afterTestExecution(): instance [repository.HotelRepositoryTest@28348c6], method [public void repository.HotelRepositoryTest.shouldBeCreated()], exception [null]]
10:15 LOG: TRACE[afterTestMethod(): instance [repository.HotelRepositoryTest@28348c6], method [public void repository.HotelRepositoryTest.shouldBeCreated()], exception [null]]
10:15 LOG: DEBUG[After test method: context [DefaultTestContext@ebaa6cb testClass = HotelRepositoryTest, testInstance = repository.HotelRepositoryTest@28348c6, testMethod = shouldBeCreated@HotelRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@906d29b testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].]
10:15 LOG: TRACE[afterTestClass(): class [repository.HotelRepositoryTest]]
10:15 LOG: DEBUG[After test class: context [DefaultTestContext@ebaa6cb testClass = HotelRepositoryTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@906d29b testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].]
10:15 LOG: DEBUG[Closing org.springframework.context.support.GenericApplicationContext@2a5b3fee, started on Wed Feb 20 10:15:41 MSK 2019]
10:15 LOG: TRACE[Returning cached instance of singleton bean 'lifecycleProcessor']
10:15 LOG: TRACE[Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@7fc44dec: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,testConfig,getDataSource,getJdbcTemplate,userRepository,hotelRepository,userDataContext,hotelDataContext]; root of factory hierarchy]
10:16 LOG: DEBUG[SpringJUnit4ClassRunner constructor called with [class repository.HotelRepositoryTest]]
10:16 LOG: DEBUG[Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]]
10:16 LOG: DEBUG[Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]]
10:16 LOG: DEBUG[Instantiating TestContextBootstrapper for test class [repository.HotelRepositoryTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]]
10:16 LOG: TRACE[Retrieved @ContextConfiguration [@org.springframework.test.context.ContextConfiguration(name=, value=[], loader=interface org.springframework.test.context.ContextLoader, classes=[class config.TestConfig], locations=[], initializers=[], inheritLocations=true, inheritInitializers=true)] for declaring class [repository.HotelRepositoryTest].]
10:16 LOG: TRACE[Resolved context configuration attributes: [ContextConfigurationAttributes@b2c5e07 declaringClass = 'repository.HotelRepositoryTest', classes = '{class config.TestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']]
10:16 LOG: TRACE[Resolving ContextLoader for context configuration attributes [ContextConfigurationAttributes@b2c5e07 declaringClass = 'repository.HotelRepositoryTest', classes = '{class config.TestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']]
10:16 LOG: TRACE[Using ContextLoader class [org.springframework.test.context.support.DelegatingSmartContextLoader] for test class [repository.HotelRepositoryTest]]
10:16 LOG: TRACE[Processing locations and classes for context configuration attributes [ContextConfigurationAttributes@b2c5e07 declaringClass = 'repository.HotelRepositoryTest', classes = '{class config.TestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']]
10:16 LOG: DEBUG[Delegating to AnnotationConfigContextLoader to process context configuration [ContextConfigurationAttributes@b2c5e07 declaringClass = 'repository.HotelRepositoryTest', classes = '{class config.TestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].]
10:16 LOG: TRACE[Loaded [org.springframework.test.context.ContextCustomizerFactory] names: [org.springframework.test.context.web.socket.MockServerContainerContextCustomizerFactory]]
10:16 LOG: TRACE[Processing context initializers for configuration attributes [ContextConfigurationAttributes@b2c5e07 declaringClass = 'repository.HotelRepositoryTest', classes = '{class config.TestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']]
10:16 LOG: DEBUG[Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [repository.HotelRepositoryTest]]
10:16 LOG: DEBUG[@TestExecutionListeners is not present for class [repository.HotelRepositoryTest]: using defaults.]
10:16 LOG: INFO [Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]]
10:16 LOG: DEBUG[Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]]
10:16 LOG: INFO [Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@b1712f3, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@6986bbaf, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4879dfad, org.springframework.test.context.transaction.TransactionalTestExecutionListener@4758820d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@74eb909f]]
10:16 LOG: TRACE[Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@b1712f3]
10:16 LOG: TRACE[Registering TestExecutionListener: org.springframework.test.context.support.DependencyInjectionTestExecutionListener@6986bbaf]
10:16 LOG: TRACE[Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextTestExecutionListener@4879dfad]
10:16 LOG: TRACE[Registering TestExecutionListener: org.springframework.test.context.transaction.TransactionalTestExecutionListener@4758820d]
10:16 LOG: TRACE[Registering TestExecutionListener: org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@74eb909f]
10:16 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [repository.HotelRepositoryTest]]
10:16 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [repository.HotelRepositoryTest]]
10:16 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [repository.HotelRepositoryTest]]
10:16 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [repository.HotelRepositoryTest]]
10:16 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [repository.HotelRepositoryTest]]
10:16 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [repository.HotelRepositoryTest]]
10:16 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [repository.HotelRepositoryTest]]
10:16 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [repository.HotelRepositoryTest]]
10:16 LOG: TRACE[beforeTestClass(): class [repository.HotelRepositoryTest]]
10:16 LOG: DEBUG[Before test class: context [DefaultTestContext@906d29b testClass = HotelRepositoryTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@49d3c823 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].]
10:16 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [repository.HotelRepositoryTest]]
10:16 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [repository.HotelRepositoryTest]]
10:16 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
10:16 LOG: TRACE[prepareTestInstance(): instance [repository.HotelRepositoryTest@8692d67]]
10:16 LOG: DEBUG[Performing dependency injection for test context [[DefaultTestContext@906d29b testClass = HotelRepositoryTest, testInstance = repository.HotelRepositoryTest@8692d67, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@49d3c823 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].]
10:16 LOG: DEBUG[Delegating to AnnotationConfigContextLoader to load context from [MergedContextConfiguration@49d3c823 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].]
10:16 LOG: DEBUG[Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@49d3c823 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].]
10:16 LOG: DEBUG[Activating profiles []]
10:16 LOG: DEBUG[Registering annotated classes: {class config.TestConfig}]
10:16 LOG: TRACE[Refreshing org.springframework.context.support.GenericApplicationContext@7c1e2a2d, started on Wed Feb 20 10:16:38 MSK 2019]
10:16 LOG: DEBUG[Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor']
10:16 LOG: TRACE[Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor']
10:16 LOG: TRACE[Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references]
10:16 LOG: TRACE[Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor']
10:16 LOG: TRACE[Registering bean definition for @Bean method config.TestConfig.getDataSource()]
10:16 LOG: TRACE[Registering bean definition for @Bean method config.TestConfig.getJdbcTemplate()]
10:16 LOG: TRACE[Registering bean definition for @Bean method config.TestConfig.userRepository()]
10:16 LOG: TRACE[Registering bean definition for @Bean method config.TestConfig.hotelRepository()]
10:16 LOG: TRACE[Registering bean definition for @Bean method config.TestConfig.userDataContext()]
10:16 LOG: TRACE[Registering bean definition for @Bean method config.TestConfig.hotelDataContext()]
10:16 LOG: TRACE[Successfully enhanced config.TestConfig; enhanced class name is: config.TestConfig$$EnhancerBySpringCGLIB$$1ad277c3]
10:16 LOG: TRACE[Replacing bean definition 'testConfig' existing class 'config.TestConfig' with enhanced class 'config.TestConfig$$EnhancerBySpringCGLIB$$1ad277c3']
10:16 LOG: DEBUG[Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor']
10:16 LOG: TRACE[Creating instance of bean 'org.springframework.context.event.internalEventListenerProcessor']
10:16 LOG: TRACE[Eagerly caching bean 'org.springframework.context.event.internalEventListenerProcessor' to allow for resolving potential circular references]
10:16 LOG: TRACE[Finished creating instance of bean 'org.springframework.context.event.internalEventListenerProcessor']
10:16 LOG: DEBUG[Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory']
10:16 LOG: TRACE[Creating instance of bean 'org.springframework.context.event.internalEventListenerFactory']
10:16 LOG: TRACE[Eagerly caching bean 'org.springframework.context.event.internalEventListenerFactory' to allow for resolving potential circular references]
10:16 LOG: TRACE[Finished creating instance of bean 'org.springframework.context.event.internalEventListenerFactory']
10:16 LOG: DEBUG[Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor']
10:16 LOG: TRACE[Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor']
10:16 LOG: TRACE[Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references]
10:16 LOG: TRACE[Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor']
10:16 LOG: DEBUG[Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor']
10:16 LOG: TRACE[Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor']
10:16 LOG: TRACE[Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references]
10:16 LOG: TRACE[Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor']
10:16 LOG: TRACE[No 'messageSource' bean, using [Empty MessageSource]]
10:16 LOG: TRACE[No 'applicationEventMulticaster' bean, using [SimpleApplicationEventMulticaster]]
10:16 LOG: TRACE[Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@7e3060d8: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,testConfig,getDataSource,getJdbcTemplate,userRepository,hotelRepository,userDataContext,hotelDataContext]; root of factory hierarchy]
10:16 LOG: TRACE[Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor']
10:16 LOG: TRACE[Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor']
10:16 LOG: TRACE[Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor']
10:16 LOG: TRACE[Returning cached instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor']
10:16 LOG: TRACE[Returning cached instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory']
10:16 LOG: DEBUG[Creating shared instance of singleton bean 'testConfig']
10:16 LOG: TRACE[Creating instance of bean 'testConfig']
10:16 LOG: TRACE[Eagerly caching bean 'testConfig' to allow for resolving potential circular references]
10:16 LOG: TRACE[Finished creating instance of bean 'testConfig']
10:16 LOG: DEBUG[Creating shared instance of singleton bean 'getDataSource']
10:16 LOG: TRACE[Creating instance of bean 'getDataSource']
10:16 LOG: TRACE[Returning cached instance of singleton bean 'testConfig']
10:16 LOG: INFO [Starting embedded database: url='jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa']
10:16 LOG: DEBUG[Fetching JDBC Connection from DataSource]
10:16 LOG: DEBUG[Creating new JDBC Driver Connection to [jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false]]
10:16 LOG: DEBUG[Executing SQL script from class path resource [db/migration/V1__init_schema.sql]]
10:16 LOG: DEBUG[0 returned as update count for SQL: CREATE TYPE TOUR_TYPE AS ENUM ( 'bus', 'sightseeing', 'shore_excursion', 'adventure', 'sporting', 'cruise', 'escorted', 'guided', 'rail', 'extreme' )]
10:16 LOG: DEBUG[0 returned as update count for SQL: CREATE TYPE HOTEL_FEATURE AS ENUM ( 'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning', 'food_delivery', 'pool', 'conference_hall', 'safe' )]
10:16 LOG: DEBUG[0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS "user" ( id SERIAL, login VARCHAR(255) UNIQUE NOT NULL, password VARCHAR(255) NOT NULL, PRIMARY KEY (id) )]
10:16 LOG: DEBUG[0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS "hotel" ( id SERIAL, name VARCHAR(255) NOT NULL, stars SMALLINT NOT NULL, website VARCHAR(255) NOT NULL, latitude DECIMAL(8, 6) NOT NULL, longitude DECIMAL(8, 6) NOT NULL, feature HOTEL_FEATURE NOT NULL, PRIMARY KEY (id) )]
10:16 LOG: DEBUG[0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS "country" ( id SERIAL, name VARCHAR(255), PRIMARY KEY (id) )]
10:16 LOG: DEBUG[0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS "tour" ( id SERIAL, photo VARCHAR(255), date DATE NOT NULL, duration INT NOT NULL, description TEXT NOT NULL, cost DECIMAL(19, 3) NOT NULL, tour_type TOUR_TYPE NOT NULL, hotel_id INT NOT NULL, country_id INT NOT NULL, PRIMARY KEY (id), FOREIGN KEY (hotel_id) REFERENCES "hotel" (id), FOREIGN KEY (country_id) REFERENCES "country" (id) )]
10:16 LOG: DEBUG[0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS "usertour" ( user_id INT UNIQUE NOT NULL, tour_id INT UNIQUE NOT NULL, PRIMARY KEY (user_id, tour_id), FOREIGN KEY (user_id) REFERENCES "user" (id), FOREIGN KEY (tour_id) REFERENCES "tour" (id) )]
10:16 LOG: DEBUG[0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS "review" ( id SERIAL, date DATE NOT NULL, text TEXT NOT NULL, user_id INT NOT NULL, tour_id INT NOT NULL, PRIMARY KEY (id), FOREIGN KEY (user_id) REFERENCES "user" (id), FOREIGN KEY (tour_id) REFERENCES "tour" (id) ) ]
10:16 LOG: DEBUG[Executed SQL script from class path resource [db/migration/V1__init_schema.sql] in 48 ms.]
10:16 LOG: DEBUG[Executing SQL script from class path resource [db/migration/V1_1__init_data.sql]]
10:16 LOG: DEBUG[1 returned as update count for SQL: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
10:16 LOG: DEBUG[1 returned as update count for SQL: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
10:16 LOG: DEBUG[1 returned as update count for SQL: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
10:16 LOG: DEBUG[1 returned as update count for SQL: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
10:16 LOG: DEBUG[1 returned as update count for SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test1', 4, 'test1', 1, 1, 'security')]
10:16 LOG: DEBUG[1 returned as update count for SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test2', 4, 'test2', 1, 1, 'security')]
10:16 LOG: DEBUG[1 returned as update count for SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test3', 4, 'test3', 1, 1, 'security')]
10:16 LOG: DEBUG[1 returned as update count for SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test4', 4, 'test4', 1, 1, 'security')]
10:16 LOG: DEBUG[Executed SQL script from class path resource [db/migration/V1_1__init_data.sql] in 12 ms.]
10:16 LOG: TRACE[Eagerly caching bean 'getDataSource' to allow for resolving potential circular references]
10:16 LOG: TRACE[Finished creating instance of bean 'getDataSource']
10:16 LOG: DEBUG[Creating shared instance of singleton bean 'getJdbcTemplate']
10:16 LOG: TRACE[Creating instance of bean 'getJdbcTemplate']
10:16 LOG: TRACE[Returning cached instance of singleton bean 'testConfig']
10:16 LOG: TRACE[Returning cached instance of singleton bean 'getDataSource']
10:16 LOG: TRACE[Eagerly caching bean 'getJdbcTemplate' to allow for resolving potential circular references]
10:16 LOG: TRACE[Invoking afterPropertiesSet() on bean with name 'getJdbcTemplate']
10:16 LOG: TRACE[Finished creating instance of bean 'getJdbcTemplate']
10:16 LOG: DEBUG[Creating shared instance of singleton bean 'userRepository']
10:16 LOG: TRACE[Creating instance of bean 'userRepository']
10:16 LOG: TRACE[Returning cached instance of singleton bean 'testConfig']
10:16 LOG: TRACE[Loaded [org.springframework.beans.BeanInfoFactory] names: [org.springframework.beans.ExtendedBeanInfoFactory]]
10:16 LOG: TRACE[Getting BeanInfo for class [com.epam.travelagency.repository.UserRepository]]
10:16 LOG: TRACE[Caching PropertyDescriptors for class [com.epam.travelagency.repository.UserRepository]]
10:16 LOG: TRACE[Found bean property 'class' of type [java.lang.Class]]
10:16 LOG: TRACE[Found bean property 'dataContext' of type [com.epam.travelagency.storage.DataContext]]
10:16 LOG: TRACE[Registered injected element on class [com.epam.travelagency.repository.UserRepository]: AutowiredMethodElement for public void com.epam.travelagency.repository.Repository.setDataContext(com.epam.travelagency.storage.DataContext)]
10:16 LOG: TRACE[Eagerly caching bean 'userRepository' to allow for resolving potential circular references]
10:16 LOG: TRACE[Processing injected element of bean 'userRepository': AutowiredMethodElement for public void com.epam.travelagency.repository.Repository.setDataContext(com.epam.travelagency.storage.DataContext)]
10:16 LOG: DEBUG[Creating shared instance of singleton bean 'userDataContext']
10:16 LOG: TRACE[Creating instance of bean 'userDataContext']
10:16 LOG: TRACE[Returning cached instance of singleton bean 'testConfig']
10:16 LOG: TRACE[Returning cached instance of singleton bean 'getJdbcTemplate']
10:16 LOG: TRACE[Eagerly caching bean 'userDataContext' to allow for resolving potential circular references]
10:16 LOG: TRACE[Finished creating instance of bean 'userDataContext']
10:16 LOG: TRACE[Autowiring by type from bean name 'userRepository' to bean named 'userDataContext']
10:16 LOG: TRACE[Finished creating instance of bean 'userRepository']
10:16 LOG: DEBUG[Creating shared instance of singleton bean 'hotelRepository']
10:16 LOG: TRACE[Creating instance of bean 'hotelRepository']
10:16 LOG: TRACE[Returning cached instance of singleton bean 'testConfig']
10:16 LOG: TRACE[Getting BeanInfo for class [com.epam.travelagency.repository.HotelRepository]]
10:16 LOG: TRACE[Caching PropertyDescriptors for class [com.epam.travelagency.repository.HotelRepository]]
10:16 LOG: TRACE[Found bean property 'class' of type [java.lang.Class]]
10:16 LOG: TRACE[Found bean property 'dataContext' of type [com.epam.travelagency.storage.DataContext]]
10:16 LOG: TRACE[Registered injected element on class [com.epam.travelagency.repository.HotelRepository]: AutowiredMethodElement for public void com.epam.travelagency.repository.Repository.setDataContext(com.epam.travelagency.storage.DataContext)]
10:16 LOG: TRACE[Eagerly caching bean 'hotelRepository' to allow for resolving potential circular references]
10:16 LOG: TRACE[Processing injected element of bean 'hotelRepository': AutowiredMethodElement for public void com.epam.travelagency.repository.Repository.setDataContext(com.epam.travelagency.storage.DataContext)]
10:16 LOG: DEBUG[Creating shared instance of singleton bean 'hotelDataContext']
10:16 LOG: TRACE[Creating instance of bean 'hotelDataContext']
10:16 LOG: TRACE[Returning cached instance of singleton bean 'testConfig']
10:16 LOG: TRACE[Returning cached instance of singleton bean 'getJdbcTemplate']
10:16 LOG: TRACE[Eagerly caching bean 'hotelDataContext' to allow for resolving potential circular references]
10:16 LOG: TRACE[Finished creating instance of bean 'hotelDataContext']
10:16 LOG: TRACE[Autowiring by type from bean name 'hotelRepository' to bean named 'hotelDataContext']
10:16 LOG: TRACE[Finished creating instance of bean 'hotelRepository']
10:16 LOG: TRACE[Returning cached instance of singleton bean 'userDataContext']
10:16 LOG: TRACE[Returning cached instance of singleton bean 'hotelDataContext']
10:16 LOG: TRACE[No @EventListener annotations found on bean class: config.TestConfig$$EnhancerBySpringCGLIB$$1ad277c3]
10:16 LOG: TRACE[No @EventListener annotations found on bean class: com.epam.travelagency.repository.UserRepository]
10:16 LOG: TRACE[No @EventListener annotations found on bean class: com.epam.travelagency.repository.HotelRepository]
10:16 LOG: TRACE[No @EventListener annotations found on bean class: com.epam.travelagency.storage.posgresql.UserDataContext]
10:16 LOG: TRACE[No @EventListener annotations found on bean class: com.epam.travelagency.storage.posgresql.HotelDataContext]
10:16 LOG: TRACE[No @EventListener annotations found on bean class: java.util.Properties]
10:16 LOG: TRACE[No @EventListener annotations found on bean class: java.util.Collections$UnmodifiableMap]
10:16 LOG: TRACE[No 'lifecycleProcessor' bean, using [DefaultLifecycleProcessor]]
10:16 LOG: TRACE[Returning cached instance of singleton bean 'lifecycleProcessor']
10:16 LOG: TRACE[Searching for key 'spring.liveBeansView.mbeanDomain' in PropertySource 'systemProperties']
10:16 LOG: TRACE[Searching for key 'spring.liveBeansView.mbeanDomain' in PropertySource 'systemEnvironment']
10:16 LOG: TRACE[Could not find key 'spring.liveBeansView.mbeanDomain' in any property source]
10:16 LOG: DEBUG[Storing ApplicationContext in cache under key [[MergedContextConfiguration@49d3c823 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]]
10:16 LOG: DEBUG[Spring test ApplicationContext cache statistics: [DefaultContextCache@5328a9c1 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 0, missCount = 1]]
10:16 LOG: TRACE[Processing injected element of bean 'repository.HotelRepositoryTest': AutowiredFieldElement for private com.epam.travelagency.repository.HotelRepository repository.HotelRepositoryTest.hotelRepository]
10:16 LOG: TRACE[Returning cached instance of singleton bean 'hotelRepository']
10:16 LOG: TRACE[Autowiring by type from bean name 'repository.HotelRepositoryTest' to bean named 'hotelRepository']
10:16 LOG: INFO [Detected a Windows x86_64 system]
10:16 LOG: INFO [Postgres binaries at C:\Users\valik\AppData\Local\Temp\embedded-pg\PG-91c1fa33789b0c913345bf0253da6836]
10:16 LOG: TRACE[baffc7f5-dbf8-40d0-a727-b65628c60e6f postgres data directory is C:\Users\valik\AppData\Local\Temp\epg3188991632553644036]
10:16 LOG: INFO [The files belonging to this database system will be owned by user "valik".]
10:16 LOG: INFO [This user must also own the server process.]
10:16 LOG: INFO []
10:16 LOG: INFO [The database cluster will be initialized with locale "Russian_Belarus.1251".]
10:16 LOG: INFO [The default text search configuration will be set to "russian".]
10:16 LOG: INFO []
10:16 LOG: INFO [Data page checksums are disabled.]
10:16 LOG: INFO []
10:16 LOG: INFO [fixing permissions on existing directory C:/Users/valik/AppData/Local/Temp/epg3188991632553644036 ... ok]
10:16 LOG: INFO [creating subdirectories ... ok]
10:16 LOG: INFO [selecting default max_connections ... 100]
10:16 LOG: INFO [selecting default shared_buffers ... 128MB]
10:16 LOG: INFO [selecting dynamic shared memory implementation ... windows]
10:16 LOG: INFO [creating configuration files ... ok]
10:16 LOG: INFO [running bootstrap script ... ok]
10:16 LOG: INFO [performing post-bootstrap initialization ... ok]
10:16 LOG: INFO [syncing data to disk ... ok]
10:16 LOG: INFO []
10:16 LOG: INFO [Success. You can now start the database server using:]
10:16 LOG: INFO []
10:16 LOG: INFO [    C:/Users/valik/AppData/Local/Temp/embedded-pg/PG-91c1fa33789b0c913345bf0253da6836/bin/pg_ctl -D ^"C^:^\Users^\valik^\AppData^\Local^\Temp^\epg3188991632553644036^" -l logfile start]
10:16 LOG: INFO []
10:16 LOG: INFO [baffc7f5-dbf8-40d0-a727-b65628c60e6f initdb completed in 00:00:07.247]
10:16 LOG: INFO [baffc7f5-dbf8-40d0-a727-b65628c60e6f postmaster started as Process[pid=6236, exitValue="not exited"] on port 50110.  Waiting up to PT10S for server startup to finish.]
10:16 LOG: INFO [waiting for server to start....2019-02-20 10:16:47.440 +03 [7036] ���������:  ��� ����� ����������� �� ������ IPv6 "::1" ������ ���� 50110]
10:16 LOG: INFO [2019-02-20 10:16:47.441 +03 [7036] ���������:  ��� ����� ����������� �� ������ IPv4 "127.0.0.1" ������ ���� 50110]
10:16 LOG: INFO [2019-02-20 10:16:47.521 +03 [2096] ���������:  ������� �� ���� ���������: 2019-02-20 10:16:46 +03]
10:16 LOG: INFO [2019-02-20 10:16:47.572 +03 [7036] ���������:  ������� �� ������ ��������� �����������]
10:16 LOG: INFO [ done]
10:16 LOG: TRACE[While waiting for server startup]
java.sql.SQLException: connect failed
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:341) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.waitForServerStartup(EmbeddedPostgres.java:315) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.startPostmaster(EmbeddedPostgres.java:275) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.<init>(EmbeddedPostgres.java:162) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres$Builder.start(EmbeddedPostgres.java:580) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.createOrFindPreparer(PreparedDbProvider.java:82) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.<init>(PreparedDbProvider.java:62) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.forPreparer(PreparedDbProvider.java:57) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.junit.PreparedDbRule.before(PreparedDbRule.java:55) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:46) [junit-4.12.jar:4.12]
	at org.junit.rules.RunRules.evaluate(RunRules.java:20) [junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84) [spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) [junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251) [spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97) [spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) [junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61) [spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70) [spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) [junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190) [spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) [junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) [junit-rt.jar:?]
Caused by: java.net.SocketTimeoutException: connect timed out
	at java.net.PlainSocketImpl.waitForConnect(Native Method) ~[?:?]
	at java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:107) ~[?:?]
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224) ~[?:?]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403) ~[?:?]
	at java.net.Socket.connect(Socket.java:591) ~[?:?]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:339) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	... 28 more
10:16 LOG: INFO [baffc7f5-dbf8-40d0-a727-b65628c60e6f postmaster startup finished in 00:00:00.805]
10:16 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
10:16 LOG: INFO [Flyway Community Edition 5.2.4 by Boxfuse]
10:16 LOG: INFO [Database: jdbc:postgresql://localhost:50110/template1 (PostgreSQL 10.6)]
10:16 LOG: DEBUG[Driver  : PostgreSQL JDBC Driver 42.2.5]
10:16 LOG: DEBUG[DDL Transactions Supported: true]
10:16 LOG: DEBUG[Schema: public]
10:16 LOG: DEBUG[Scanning for classpath resources at 'classpath:db/migration' ...]
10:16 LOG: DEBUG[Determining location urls for classpath:db/migration using ClassLoader jdk.internal.loader.ClassLoaders$AppClassLoader@6ed3ef1 ...]
10:16 LOG: DEBUG[Scanning URL: file:/C:/Users/valik/IdeaProjects/java-lab-task-1/target/classes/db/migration]
10:16 LOG: DEBUG[JBoss VFS v2 available: false]
10:16 LOG: DEBUG[Scanning starting at classpath root in filesystem: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\]
10:16 LOG: DEBUG[Scanning for resources in path: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\db\migration (db/migration)]
10:16 LOG: DEBUG[Found resource: db/migration/V1_1__init_data.sql]
10:16 LOG: DEBUG[Found resource: db/migration/V1__init_schema.sql]
10:16 LOG: DEBUG[Scanning for classes at classpath:db/migration]
10:16 LOG: DEBUG[Scanning for SQL callbacks ...]
10:16 LOG: DEBUG[Spring Jdbc available: true]
10:16 LOG: DEBUG[Validating migrations ...]
10:16 LOG: DEBUG[Parsing V1_1__init_data.sql ...]
10:16 LOG: DEBUG[Found statement at line 1: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
10:16 LOG: DEBUG[Found statement at line 2: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
10:16 LOG: DEBUG[Found statement at line 3: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
10:16 LOG: DEBUG[Found statement at line 4: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
10:16 LOG: DEBUG[Found statement at line 6: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test1', 4, 'test1', 1, 1, 'security')]
10:16 LOG: DEBUG[Found statement at line 7: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test2', 4, 'test2', 1, 1, 'security')]
10:16 LOG: DEBUG[Found statement at line 8: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test3', 4, 'test3', 1, 1, 'security')]
10:16 LOG: DEBUG[Found statement at line 9: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test4', 4, 'test4', 1, 1, 'security')]
10:16 LOG: DEBUG[Parsing V1__init_schema.sql ...]
10:16 LOG: DEBUG[Found statement at line 1: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
10:16 LOG: DEBUG[Found statement at line 8: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
10:16 LOG: DEBUG[Found statement at line 16: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
10:16 LOG: DEBUG[Found statement at line 24: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
10:16 LOG: DEBUG[Found statement at line 36: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
10:16 LOG: DEBUG[Found statement at line 43: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
10:16 LOG: DEBUG[Found statement at line 59: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
10:16 LOG: DEBUG[Found statement at line 68: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
10:16 LOG: DEBUG[Filtering out resource: db/migration/V1_1__init_data.sql (filename: V1_1__init_data.sql)]
10:16 LOG: DEBUG[Filtering out resource: db/migration/V1__init_schema.sql (filename: V1__init_schema.sql)]
10:16 LOG: INFO [Successfully validated 2 migrations (execution time 00:00.034s)]
10:16 LOG: DEBUG[Schema "public" already exists. Skipping schema creation.]
10:16 LOG: INFO [Creating Schema History table: "public"."flyway_schema_history"]
10:16 LOG: DEBUG[Parsing createMetaDataTable.sql ...]
10:16 LOG: DEBUG[Found statement at line 17: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
10:16 LOG: DEBUG[Found statement at line 29: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
10:16 LOG: DEBUG[Found statement at line 31: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
10:16 LOG: DEBUG[Executing SQL: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
10:16 LOG: DEBUG[Update Count: 0]
10:16 LOG: DEBUG[Executing SQL: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
10:16 LOG: DEBUG[Update Count: 0]
10:16 LOG: DEBUG[Executing SQL: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
10:16 LOG: DEBUG[Update Count: 0]
10:16 LOG: DEBUG[Created Schema History table: "public"."flyway_schema_history"]
10:16 LOG: INFO [Current version of schema "public": << Empty Schema >>]
10:16 LOG: INFO [Migrating schema "public" to version 1 - init schema]
10:16 LOG: DEBUG[Executing SQL: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
10:16 LOG: DEBUG[Update Count: 0]
10:16 LOG: DEBUG[Executing SQL: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
10:16 LOG: DEBUG[Update Count: 0]
10:16 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
10:16 LOG: DEBUG[Update Count: 0]
10:16 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
10:16 LOG: DEBUG[Update Count: 0]
10:16 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
10:16 LOG: DEBUG[Update Count: 0]
10:16 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
10:16 LOG: DEBUG[Update Count: 0]
10:16 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
10:16 LOG: DEBUG[Update Count: 0]
10:16 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
10:16 LOG: DEBUG[Update Count: 0]
10:16 LOG: DEBUG[Successfully completed migration of schema "public" to version 1 - init schema]
10:16 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
10:16 LOG: INFO [Migrating schema "public" to version 1.1 - init data]
10:16 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
10:16 LOG: DEBUG[Update Count: 1]
10:16 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
10:16 LOG: DEBUG[Update Count: 1]
10:16 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
10:16 LOG: DEBUG[Update Count: 1]
10:16 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
10:16 LOG: DEBUG[Update Count: 1]
10:16 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test1', 4, 'test1', 1, 1, 'security')]
10:16 LOG: DEBUG[Update Count: 1]
10:16 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test2', 4, 'test2', 1, 1, 'security')]
10:16 LOG: DEBUG[Update Count: 1]
10:16 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test3', 4, 'test3', 1, 1, 'security')]
10:16 LOG: DEBUG[Update Count: 1]
10:16 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test4', 4, 'test4', 1, 1, 'security')]
10:16 LOG: DEBUG[Update Count: 1]
10:16 LOG: DEBUG[Successfully completed migration of schema "public" to version 1.1 - init data]
10:16 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
10:16 LOG: INFO [Successfully applied 2 migrations to schema "public" (execution time 00:00.184s)]
10:16 LOG: DEBUG[Memory usage: 10 of 126M]
10:16 LOG: TRACE[beforeTestMethod(): instance [repository.HotelRepositoryTest@8692d67], method [public void repository.HotelRepositoryTest.shouldBeReadCorrectly()]]
10:16 LOG: DEBUG[Before test method: context [DefaultTestContext@906d29b testClass = HotelRepositoryTest, testInstance = repository.HotelRepositoryTest@8692d67, testMethod = shouldBeReadCorrectly@HotelRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@49d3c823 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].]
10:16 LOG: TRACE[beforeTestExecution(): instance [repository.HotelRepositoryTest@8692d67], method [public void repository.HotelRepositoryTest.shouldBeReadCorrectly()]]
10:16 LOG: DEBUG[Executing prepared SQL query]
10:16 LOG: DEBUG[Executing prepared SQL statement [SELECT id, name, stars, website, latitude, longitude, feature FROM hotel WHERE id=?]]
10:16 LOG: DEBUG[Fetching JDBC Connection from DataSource]
10:16 LOG: TRACE[Setting SQL statement parameter value: column index 1, parameter value [1], value class [java.lang.Integer], SQL type unknown]
10:16 LOG: TRACE[afterTestExecution(): instance [repository.HotelRepositoryTest@8692d67], method [public void repository.HotelRepositoryTest.shouldBeReadCorrectly()], exception [java.lang.AssertionError: expected:<10.0> but was:<1.000000>]]
10:16 LOG: TRACE[afterTestMethod(): instance [repository.HotelRepositoryTest@8692d67], method [public void repository.HotelRepositoryTest.shouldBeReadCorrectly()], exception [java.lang.AssertionError: expected:<10.0> but was:<1.000000>]]
10:16 LOG: DEBUG[After test method: context [DefaultTestContext@906d29b testClass = HotelRepositoryTest, testInstance = repository.HotelRepositoryTest@8692d67, testMethod = shouldBeReadCorrectly@HotelRepositoryTest, testException = java.lang.AssertionError: expected:<10.0> but was:<1.000000>, mergedContextConfiguration = [MergedContextConfiguration@49d3c823 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].]
10:16 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [repository.HotelRepositoryTest]]
10:16 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [repository.HotelRepositoryTest]]
10:16 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
10:16 LOG: TRACE[prepareTestInstance(): instance [repository.HotelRepositoryTest@61f80d55]]
10:16 LOG: DEBUG[Performing dependency injection for test context [[DefaultTestContext@906d29b testClass = HotelRepositoryTest, testInstance = repository.HotelRepositoryTest@61f80d55, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@49d3c823 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].]
10:16 LOG: DEBUG[Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@49d3c823 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]]
10:16 LOG: DEBUG[Spring test ApplicationContext cache statistics: [DefaultContextCache@5328a9c1 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 1, missCount = 1]]
10:16 LOG: TRACE[Processing injected element of bean 'repository.HotelRepositoryTest': AutowiredFieldElement for private com.epam.travelagency.repository.HotelRepository repository.HotelRepositoryTest.hotelRepository]
10:16 LOG: TRACE[Returning cached instance of singleton bean 'hotelRepository']
10:16 LOG: TRACE[beforeTestMethod(): instance [repository.HotelRepositoryTest@61f80d55], method [public void repository.HotelRepositoryTest.shouldBeCreated()]]
10:16 LOG: DEBUG[Before test method: context [DefaultTestContext@906d29b testClass = HotelRepositoryTest, testInstance = repository.HotelRepositoryTest@61f80d55, testMethod = shouldBeCreated@HotelRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@49d3c823 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].]
10:16 LOG: TRACE[beforeTestExecution(): instance [repository.HotelRepositoryTest@61f80d55], method [public void repository.HotelRepositoryTest.shouldBeCreated()]]
10:16 LOG: DEBUG[Executing prepared SQL update]
10:16 LOG: DEBUG[Executing prepared SQL statement [INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES (?,?,?,?,?,?::hotel_feature)]]
10:16 LOG: DEBUG[Fetching JDBC Connection from DataSource]
10:16 LOG: TRACE[SQL update affected 1 rows]
10:16 LOG: DEBUG[Executing prepared SQL query]
10:16 LOG: DEBUG[Executing prepared SQL statement [SELECT id, name, stars, website, latitude, longitude, feature FROM hotel WHERE id=?]]
10:16 LOG: DEBUG[Fetching JDBC Connection from DataSource]
10:16 LOG: TRACE[Setting SQL statement parameter value: column index 1, parameter value [5], value class [java.lang.Integer], SQL type unknown]
10:16 LOG: TRACE[afterTestExecution(): instance [repository.HotelRepositoryTest@61f80d55], method [public void repository.HotelRepositoryTest.shouldBeCreated()], exception [null]]
10:16 LOG: TRACE[afterTestMethod(): instance [repository.HotelRepositoryTest@61f80d55], method [public void repository.HotelRepositoryTest.shouldBeCreated()], exception [null]]
10:16 LOG: DEBUG[After test method: context [DefaultTestContext@906d29b testClass = HotelRepositoryTest, testInstance = repository.HotelRepositoryTest@61f80d55, testMethod = shouldBeCreated@HotelRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@49d3c823 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].]
10:16 LOG: TRACE[afterTestClass(): class [repository.HotelRepositoryTest]]
10:16 LOG: DEBUG[After test class: context [DefaultTestContext@906d29b testClass = HotelRepositoryTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@49d3c823 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].]
10:16 LOG: DEBUG[Closing org.springframework.context.support.GenericApplicationContext@7c1e2a2d, started on Wed Feb 20 10:16:38 MSK 2019]
10:16 LOG: TRACE[Returning cached instance of singleton bean 'lifecycleProcessor']
10:17 LOG: DEBUG[SpringJUnit4ClassRunner constructor called with [class repository.HotelRepositoryTest]]
10:17 LOG: DEBUG[Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]]
10:17 LOG: DEBUG[Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]]
10:17 LOG: DEBUG[Instantiating TestContextBootstrapper for test class [repository.HotelRepositoryTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]]
10:17 LOG: TRACE[Retrieved @ContextConfiguration [@org.springframework.test.context.ContextConfiguration(locations=[], inheritLocations=true, initializers=[], inheritInitializers=true, name=, value=[], loader=interface org.springframework.test.context.ContextLoader, classes=[class config.TestConfig])] for declaring class [repository.HotelRepositoryTest].]
10:17 LOG: TRACE[Resolved context configuration attributes: [ContextConfigurationAttributes@b2c5e07 declaringClass = 'repository.HotelRepositoryTest', classes = '{class config.TestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']]
10:17 LOG: TRACE[Resolving ContextLoader for context configuration attributes [ContextConfigurationAttributes@b2c5e07 declaringClass = 'repository.HotelRepositoryTest', classes = '{class config.TestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']]
10:17 LOG: TRACE[Using ContextLoader class [org.springframework.test.context.support.DelegatingSmartContextLoader] for test class [repository.HotelRepositoryTest]]
10:17 LOG: TRACE[Processing locations and classes for context configuration attributes [ContextConfigurationAttributes@b2c5e07 declaringClass = 'repository.HotelRepositoryTest', classes = '{class config.TestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']]
10:17 LOG: DEBUG[Delegating to AnnotationConfigContextLoader to process context configuration [ContextConfigurationAttributes@b2c5e07 declaringClass = 'repository.HotelRepositoryTest', classes = '{class config.TestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].]
10:17 LOG: TRACE[Loaded [org.springframework.test.context.ContextCustomizerFactory] names: [org.springframework.test.context.web.socket.MockServerContainerContextCustomizerFactory]]
10:17 LOG: TRACE[Processing context initializers for configuration attributes [ContextConfigurationAttributes@b2c5e07 declaringClass = 'repository.HotelRepositoryTest', classes = '{class config.TestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']]
10:17 LOG: DEBUG[Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [repository.HotelRepositoryTest]]
10:17 LOG: DEBUG[@TestExecutionListeners is not present for class [repository.HotelRepositoryTest]: using defaults.]
10:17 LOG: INFO [Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]]
10:17 LOG: DEBUG[Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]]
10:17 LOG: INFO [Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@b1712f3, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@6986bbaf, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4879dfad, org.springframework.test.context.transaction.TransactionalTestExecutionListener@4758820d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@74eb909f]]
10:17 LOG: TRACE[Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@b1712f3]
10:17 LOG: TRACE[Registering TestExecutionListener: org.springframework.test.context.support.DependencyInjectionTestExecutionListener@6986bbaf]
10:17 LOG: TRACE[Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextTestExecutionListener@4879dfad]
10:17 LOG: TRACE[Registering TestExecutionListener: org.springframework.test.context.transaction.TransactionalTestExecutionListener@4758820d]
10:17 LOG: TRACE[Registering TestExecutionListener: org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@74eb909f]
10:17 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [repository.HotelRepositoryTest]]
10:17 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [repository.HotelRepositoryTest]]
10:17 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [repository.HotelRepositoryTest]]
10:17 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [repository.HotelRepositoryTest]]
10:17 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [repository.HotelRepositoryTest]]
10:17 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [repository.HotelRepositoryTest]]
10:17 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [repository.HotelRepositoryTest]]
10:17 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [repository.HotelRepositoryTest]]
10:17 LOG: TRACE[beforeTestClass(): class [repository.HotelRepositoryTest]]
10:17 LOG: DEBUG[Before test class: context [DefaultTestContext@906d29b testClass = HotelRepositoryTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@49d3c823 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].]
10:17 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [repository.HotelRepositoryTest]]
10:17 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [repository.HotelRepositoryTest]]
10:17 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
10:17 LOG: TRACE[prepareTestInstance(): instance [repository.HotelRepositoryTest@8692d67]]
10:17 LOG: DEBUG[Performing dependency injection for test context [[DefaultTestContext@906d29b testClass = HotelRepositoryTest, testInstance = repository.HotelRepositoryTest@8692d67, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@49d3c823 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].]
10:17 LOG: DEBUG[Delegating to AnnotationConfigContextLoader to load context from [MergedContextConfiguration@49d3c823 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].]
10:17 LOG: DEBUG[Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@49d3c823 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].]
10:17 LOG: DEBUG[Activating profiles []]
10:17 LOG: DEBUG[Registering annotated classes: {class config.TestConfig}]
10:17 LOG: TRACE[Refreshing org.springframework.context.support.GenericApplicationContext@7c1e2a2d, started on Wed Feb 20 10:17:59 MSK 2019]
10:17 LOG: DEBUG[Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor']
10:17 LOG: TRACE[Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor']
10:17 LOG: TRACE[Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references]
10:17 LOG: TRACE[Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor']
10:17 LOG: TRACE[Registering bean definition for @Bean method config.TestConfig.getDataSource()]
10:17 LOG: TRACE[Registering bean definition for @Bean method config.TestConfig.getJdbcTemplate()]
10:17 LOG: TRACE[Registering bean definition for @Bean method config.TestConfig.userRepository()]
10:17 LOG: TRACE[Registering bean definition for @Bean method config.TestConfig.hotelRepository()]
10:17 LOG: TRACE[Registering bean definition for @Bean method config.TestConfig.userDataContext()]
10:17 LOG: TRACE[Registering bean definition for @Bean method config.TestConfig.hotelDataContext()]
10:17 LOG: TRACE[Successfully enhanced config.TestConfig; enhanced class name is: config.TestConfig$$EnhancerBySpringCGLIB$$1ad277c3]
10:17 LOG: TRACE[Replacing bean definition 'testConfig' existing class 'config.TestConfig' with enhanced class 'config.TestConfig$$EnhancerBySpringCGLIB$$1ad277c3']
10:17 LOG: DEBUG[Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor']
10:17 LOG: TRACE[Creating instance of bean 'org.springframework.context.event.internalEventListenerProcessor']
10:17 LOG: TRACE[Eagerly caching bean 'org.springframework.context.event.internalEventListenerProcessor' to allow for resolving potential circular references]
10:17 LOG: TRACE[Finished creating instance of bean 'org.springframework.context.event.internalEventListenerProcessor']
10:17 LOG: DEBUG[Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory']
10:17 LOG: TRACE[Creating instance of bean 'org.springframework.context.event.internalEventListenerFactory']
10:17 LOG: TRACE[Eagerly caching bean 'org.springframework.context.event.internalEventListenerFactory' to allow for resolving potential circular references]
10:17 LOG: TRACE[Finished creating instance of bean 'org.springframework.context.event.internalEventListenerFactory']
10:17 LOG: DEBUG[Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor']
10:17 LOG: TRACE[Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor']
10:17 LOG: TRACE[Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references]
10:17 LOG: TRACE[Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor']
10:17 LOG: DEBUG[Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor']
10:17 LOG: TRACE[Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor']
10:17 LOG: TRACE[Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references]
10:17 LOG: TRACE[Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor']
10:17 LOG: TRACE[No 'messageSource' bean, using [Empty MessageSource]]
10:17 LOG: TRACE[No 'applicationEventMulticaster' bean, using [SimpleApplicationEventMulticaster]]
10:17 LOG: TRACE[Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@7e3060d8: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,testConfig,getDataSource,getJdbcTemplate,userRepository,hotelRepository,userDataContext,hotelDataContext]; root of factory hierarchy]
10:17 LOG: TRACE[Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor']
10:17 LOG: TRACE[Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor']
10:17 LOG: TRACE[Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor']
10:17 LOG: TRACE[Returning cached instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor']
10:17 LOG: TRACE[Returning cached instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory']
10:17 LOG: DEBUG[Creating shared instance of singleton bean 'testConfig']
10:17 LOG: TRACE[Creating instance of bean 'testConfig']
10:17 LOG: TRACE[Eagerly caching bean 'testConfig' to allow for resolving potential circular references]
10:17 LOG: TRACE[Finished creating instance of bean 'testConfig']
10:17 LOG: DEBUG[Creating shared instance of singleton bean 'getDataSource']
10:17 LOG: TRACE[Creating instance of bean 'getDataSource']
10:17 LOG: TRACE[Returning cached instance of singleton bean 'testConfig']
10:17 LOG: INFO [Starting embedded database: url='jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa']
10:17 LOG: DEBUG[Fetching JDBC Connection from DataSource]
10:17 LOG: DEBUG[Creating new JDBC Driver Connection to [jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false]]
10:18 LOG: DEBUG[Executing SQL script from class path resource [db/migration/V1__init_schema.sql]]
10:18 LOG: DEBUG[0 returned as update count for SQL: CREATE TYPE TOUR_TYPE AS ENUM ( 'bus', 'sightseeing', 'shore_excursion', 'adventure', 'sporting', 'cruise', 'escorted', 'guided', 'rail', 'extreme' )]
10:18 LOG: DEBUG[0 returned as update count for SQL: CREATE TYPE HOTEL_FEATURE AS ENUM ( 'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning', 'food_delivery', 'pool', 'conference_hall', 'safe' )]
10:18 LOG: DEBUG[0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS "user" ( id SERIAL, login VARCHAR(255) UNIQUE NOT NULL, password VARCHAR(255) NOT NULL, PRIMARY KEY (id) )]
10:18 LOG: DEBUG[0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS "hotel" ( id SERIAL, name VARCHAR(255) NOT NULL, stars SMALLINT NOT NULL, website VARCHAR(255) NOT NULL, latitude DECIMAL(8, 6) NOT NULL, longitude DECIMAL(8, 6) NOT NULL, feature HOTEL_FEATURE NOT NULL, PRIMARY KEY (id) )]
10:18 LOG: DEBUG[0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS "country" ( id SERIAL, name VARCHAR(255), PRIMARY KEY (id) )]
10:18 LOG: DEBUG[0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS "tour" ( id SERIAL, photo VARCHAR(255), date DATE NOT NULL, duration INT NOT NULL, description TEXT NOT NULL, cost DECIMAL(19, 3) NOT NULL, tour_type TOUR_TYPE NOT NULL, hotel_id INT NOT NULL, country_id INT NOT NULL, PRIMARY KEY (id), FOREIGN KEY (hotel_id) REFERENCES "hotel" (id), FOREIGN KEY (country_id) REFERENCES "country" (id) )]
10:18 LOG: DEBUG[0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS "usertour" ( user_id INT UNIQUE NOT NULL, tour_id INT UNIQUE NOT NULL, PRIMARY KEY (user_id, tour_id), FOREIGN KEY (user_id) REFERENCES "user" (id), FOREIGN KEY (tour_id) REFERENCES "tour" (id) )]
10:18 LOG: DEBUG[0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS "review" ( id SERIAL, date DATE NOT NULL, text TEXT NOT NULL, user_id INT NOT NULL, tour_id INT NOT NULL, PRIMARY KEY (id), FOREIGN KEY (user_id) REFERENCES "user" (id), FOREIGN KEY (tour_id) REFERENCES "tour" (id) ) ]
10:18 LOG: DEBUG[Executed SQL script from class path resource [db/migration/V1__init_schema.sql] in 58 ms.]
10:18 LOG: DEBUG[Executing SQL script from class path resource [db/migration/V1_1__init_data.sql]]
10:18 LOG: DEBUG[1 returned as update count for SQL: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
10:18 LOG: DEBUG[1 returned as update count for SQL: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
10:18 LOG: DEBUG[1 returned as update count for SQL: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
10:18 LOG: DEBUG[1 returned as update count for SQL: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
10:18 LOG: DEBUG[1 returned as update count for SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test1', 4, 'test1', 1, 1, 'security')]
10:18 LOG: DEBUG[1 returned as update count for SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test2', 4, 'test2', 1, 1, 'security')]
10:18 LOG: DEBUG[1 returned as update count for SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test3', 4, 'test3', 1, 1, 'security')]
10:18 LOG: DEBUG[1 returned as update count for SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test4', 4, 'test4', 1, 1, 'security')]
10:18 LOG: DEBUG[Executed SQL script from class path resource [db/migration/V1_1__init_data.sql] in 14 ms.]
10:18 LOG: TRACE[Eagerly caching bean 'getDataSource' to allow for resolving potential circular references]
10:18 LOG: TRACE[Finished creating instance of bean 'getDataSource']
10:18 LOG: DEBUG[Creating shared instance of singleton bean 'getJdbcTemplate']
10:18 LOG: TRACE[Creating instance of bean 'getJdbcTemplate']
10:18 LOG: TRACE[Returning cached instance of singleton bean 'testConfig']
10:18 LOG: TRACE[Returning cached instance of singleton bean 'getDataSource']
10:18 LOG: TRACE[Eagerly caching bean 'getJdbcTemplate' to allow for resolving potential circular references]
10:18 LOG: TRACE[Invoking afterPropertiesSet() on bean with name 'getJdbcTemplate']
10:18 LOG: TRACE[Finished creating instance of bean 'getJdbcTemplate']
10:18 LOG: DEBUG[Creating shared instance of singleton bean 'userRepository']
10:18 LOG: TRACE[Creating instance of bean 'userRepository']
10:18 LOG: TRACE[Returning cached instance of singleton bean 'testConfig']
10:18 LOG: TRACE[Loaded [org.springframework.beans.BeanInfoFactory] names: [org.springframework.beans.ExtendedBeanInfoFactory]]
10:18 LOG: TRACE[Getting BeanInfo for class [com.epam.travelagency.repository.UserRepository]]
10:18 LOG: TRACE[Caching PropertyDescriptors for class [com.epam.travelagency.repository.UserRepository]]
10:18 LOG: TRACE[Found bean property 'class' of type [java.lang.Class]]
10:18 LOG: TRACE[Found bean property 'dataContext' of type [com.epam.travelagency.storage.DataContext]]
10:18 LOG: TRACE[Registered injected element on class [com.epam.travelagency.repository.UserRepository]: AutowiredMethodElement for public void com.epam.travelagency.repository.Repository.setDataContext(com.epam.travelagency.storage.DataContext)]
10:18 LOG: TRACE[Eagerly caching bean 'userRepository' to allow for resolving potential circular references]
10:18 LOG: TRACE[Processing injected element of bean 'userRepository': AutowiredMethodElement for public void com.epam.travelagency.repository.Repository.setDataContext(com.epam.travelagency.storage.DataContext)]
10:18 LOG: DEBUG[Creating shared instance of singleton bean 'userDataContext']
10:18 LOG: TRACE[Creating instance of bean 'userDataContext']
10:18 LOG: TRACE[Returning cached instance of singleton bean 'testConfig']
10:18 LOG: TRACE[Returning cached instance of singleton bean 'getJdbcTemplate']
10:18 LOG: TRACE[Eagerly caching bean 'userDataContext' to allow for resolving potential circular references]
10:18 LOG: TRACE[Finished creating instance of bean 'userDataContext']
10:18 LOG: TRACE[Autowiring by type from bean name 'userRepository' to bean named 'userDataContext']
10:18 LOG: TRACE[Finished creating instance of bean 'userRepository']
10:18 LOG: DEBUG[Creating shared instance of singleton bean 'hotelRepository']
10:18 LOG: TRACE[Creating instance of bean 'hotelRepository']
10:18 LOG: TRACE[Returning cached instance of singleton bean 'testConfig']
10:18 LOG: TRACE[Getting BeanInfo for class [com.epam.travelagency.repository.HotelRepository]]
10:18 LOG: TRACE[Caching PropertyDescriptors for class [com.epam.travelagency.repository.HotelRepository]]
10:18 LOG: TRACE[Found bean property 'class' of type [java.lang.Class]]
10:18 LOG: TRACE[Found bean property 'dataContext' of type [com.epam.travelagency.storage.DataContext]]
10:18 LOG: TRACE[Registered injected element on class [com.epam.travelagency.repository.HotelRepository]: AutowiredMethodElement for public void com.epam.travelagency.repository.Repository.setDataContext(com.epam.travelagency.storage.DataContext)]
10:18 LOG: TRACE[Eagerly caching bean 'hotelRepository' to allow for resolving potential circular references]
10:18 LOG: TRACE[Processing injected element of bean 'hotelRepository': AutowiredMethodElement for public void com.epam.travelagency.repository.Repository.setDataContext(com.epam.travelagency.storage.DataContext)]
10:18 LOG: DEBUG[Creating shared instance of singleton bean 'hotelDataContext']
10:18 LOG: TRACE[Creating instance of bean 'hotelDataContext']
10:18 LOG: TRACE[Returning cached instance of singleton bean 'testConfig']
10:18 LOG: TRACE[Returning cached instance of singleton bean 'getJdbcTemplate']
10:18 LOG: TRACE[Eagerly caching bean 'hotelDataContext' to allow for resolving potential circular references]
10:18 LOG: TRACE[Finished creating instance of bean 'hotelDataContext']
10:18 LOG: TRACE[Autowiring by type from bean name 'hotelRepository' to bean named 'hotelDataContext']
10:18 LOG: TRACE[Finished creating instance of bean 'hotelRepository']
10:18 LOG: TRACE[Returning cached instance of singleton bean 'userDataContext']
10:18 LOG: TRACE[Returning cached instance of singleton bean 'hotelDataContext']
10:18 LOG: TRACE[No @EventListener annotations found on bean class: config.TestConfig$$EnhancerBySpringCGLIB$$1ad277c3]
10:18 LOG: TRACE[No @EventListener annotations found on bean class: com.epam.travelagency.repository.UserRepository]
10:18 LOG: TRACE[No @EventListener annotations found on bean class: com.epam.travelagency.repository.HotelRepository]
10:18 LOG: TRACE[No @EventListener annotations found on bean class: com.epam.travelagency.storage.posgresql.UserDataContext]
10:18 LOG: TRACE[No @EventListener annotations found on bean class: com.epam.travelagency.storage.posgresql.HotelDataContext]
10:18 LOG: TRACE[No @EventListener annotations found on bean class: java.util.Properties]
10:18 LOG: TRACE[No @EventListener annotations found on bean class: java.util.Collections$UnmodifiableMap]
10:18 LOG: TRACE[No 'lifecycleProcessor' bean, using [DefaultLifecycleProcessor]]
10:18 LOG: TRACE[Returning cached instance of singleton bean 'lifecycleProcessor']
10:18 LOG: TRACE[Searching for key 'spring.liveBeansView.mbeanDomain' in PropertySource 'systemProperties']
10:18 LOG: TRACE[Searching for key 'spring.liveBeansView.mbeanDomain' in PropertySource 'systemEnvironment']
10:18 LOG: TRACE[Could not find key 'spring.liveBeansView.mbeanDomain' in any property source]
10:18 LOG: DEBUG[Storing ApplicationContext in cache under key [[MergedContextConfiguration@49d3c823 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]]
10:18 LOG: DEBUG[Spring test ApplicationContext cache statistics: [DefaultContextCache@5328a9c1 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 0, missCount = 1]]
10:18 LOG: TRACE[Processing injected element of bean 'repository.HotelRepositoryTest': AutowiredFieldElement for private com.epam.travelagency.repository.HotelRepository repository.HotelRepositoryTest.hotelRepository]
10:18 LOG: TRACE[Returning cached instance of singleton bean 'hotelRepository']
10:18 LOG: TRACE[Autowiring by type from bean name 'repository.HotelRepositoryTest' to bean named 'hotelRepository']
10:18 LOG: INFO [Detected a Windows x86_64 system]
10:18 LOG: INFO [Postgres binaries at C:\Users\valik\AppData\Local\Temp\embedded-pg\PG-91c1fa33789b0c913345bf0253da6836]
10:18 LOG: TRACE[2ccb88ba-3e35-4b21-9671-04417ab53009 postgres data directory is C:\Users\valik\AppData\Local\Temp\epg17971140128848319599]
10:18 LOG: INFO [The files belonging to this database system will be owned by user "valik".]
10:18 LOG: INFO [This user must also own the server process.]
10:18 LOG: INFO []
10:18 LOG: INFO [The database cluster will be initialized with locale "Russian_Belarus.1251".]
10:18 LOG: INFO [The default text search configuration will be set to "russian".]
10:18 LOG: INFO []
10:18 LOG: INFO [Data page checksums are disabled.]
10:18 LOG: INFO []
10:18 LOG: INFO [fixing permissions on existing directory C:/Users/valik/AppData/Local/Temp/epg17971140128848319599 ... ok]
10:18 LOG: INFO [creating subdirectories ... ok]
10:18 LOG: INFO [selecting default max_connections ... 100]
10:18 LOG: INFO [selecting default shared_buffers ... 128MB]
10:18 LOG: INFO [selecting dynamic shared memory implementation ... windows]
10:18 LOG: INFO [creating configuration files ... ok]
10:18 LOG: INFO [running bootstrap script ... ok]
10:18 LOG: INFO [performing post-bootstrap initialization ... ok]
10:18 LOG: INFO [syncing data to disk ... ok]
10:18 LOG: INFO []
10:18 LOG: INFO [Success. You can now start the database server using:]
10:18 LOG: INFO []
10:18 LOG: INFO [    C:/Users/valik/AppData/Local/Temp/embedded-pg/PG-91c1fa33789b0c913345bf0253da6836/bin/pg_ctl -D ^"C^:^\Users^\valik^\AppData^\Local^\Temp^\epg17971140128848319599^" -l logfile start]
10:18 LOG: INFO []
10:18 LOG: INFO [2ccb88ba-3e35-4b21-9671-04417ab53009 initdb completed in 00:00:07.176]
10:18 LOG: INFO [2ccb88ba-3e35-4b21-9671-04417ab53009 postmaster started as Process[pid=10916, exitValue="not exited"] on port 50135.  Waiting up to PT10S for server startup to finish.]
10:18 LOG: INFO [waiting for server to start....2019-02-20 10:18:07.804 +03 [7056] ���������:  ��� ����� ����������� �� ������ IPv6 "::1" ������ ���� 50135]
10:18 LOG: INFO [2019-02-20 10:18:07.804 +03 [7056] ���������:  ��� ����� ����������� �� ������ IPv4 "127.0.0.1" ������ ���� 50135]
10:18 LOG: INFO [2019-02-20 10:18:07.882 +03 [3184] ���������:  ������� �� ���� ���������: 2019-02-20 10:18:06 +03]
10:18 LOG: INFO [2019-02-20 10:18:07.924 +03 [7056] ���������:  ������� �� ������ ��������� �����������]
10:18 LOG: INFO [ done]
10:18 LOG: INFO [2ccb88ba-3e35-4b21-9671-04417ab53009 postmaster startup finished in 00:00:00.672]
10:18 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
10:18 LOG: INFO [Flyway Community Edition 5.2.4 by Boxfuse]
10:18 LOG: INFO [Database: jdbc:postgresql://localhost:50135/template1 (PostgreSQL 10.6)]
10:18 LOG: DEBUG[Driver  : PostgreSQL JDBC Driver 42.2.5]
10:18 LOG: DEBUG[DDL Transactions Supported: true]
10:18 LOG: DEBUG[Schema: public]
10:18 LOG: DEBUG[Scanning for classpath resources at 'classpath:db/migration' ...]
10:18 LOG: DEBUG[Determining location urls for classpath:db/migration using ClassLoader jdk.internal.loader.ClassLoaders$AppClassLoader@6ed3ef1 ...]
10:18 LOG: DEBUG[Scanning URL: file:/C:/Users/valik/IdeaProjects/java-lab-task-1/target/classes/db/migration]
10:18 LOG: DEBUG[JBoss VFS v2 available: false]
10:18 LOG: DEBUG[Scanning starting at classpath root in filesystem: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\]
10:18 LOG: DEBUG[Scanning for resources in path: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\db\migration (db/migration)]
10:18 LOG: DEBUG[Found resource: db/migration/V1_1__init_data.sql]
10:18 LOG: DEBUG[Found resource: db/migration/V1__init_schema.sql]
10:18 LOG: DEBUG[Scanning for classes at classpath:db/migration]
10:18 LOG: DEBUG[Scanning for SQL callbacks ...]
10:18 LOG: DEBUG[Spring Jdbc available: true]
10:18 LOG: DEBUG[Validating migrations ...]
10:18 LOG: DEBUG[Parsing V1_1__init_data.sql ...]
10:18 LOG: DEBUG[Found statement at line 1: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
10:18 LOG: DEBUG[Found statement at line 2: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
10:18 LOG: DEBUG[Found statement at line 3: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
10:18 LOG: DEBUG[Found statement at line 4: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
10:18 LOG: DEBUG[Found statement at line 6: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test1', 4, 'test1', 1, 1, 'security')]
10:18 LOG: DEBUG[Found statement at line 7: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test2', 4, 'test2', 1, 1, 'security')]
10:18 LOG: DEBUG[Found statement at line 8: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test3', 4, 'test3', 1, 1, 'security')]
10:18 LOG: DEBUG[Found statement at line 9: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test4', 4, 'test4', 1, 1, 'security')]
10:18 LOG: DEBUG[Parsing V1__init_schema.sql ...]
10:18 LOG: DEBUG[Found statement at line 1: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
10:18 LOG: DEBUG[Found statement at line 8: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
10:18 LOG: DEBUG[Found statement at line 16: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
10:18 LOG: DEBUG[Found statement at line 24: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
10:18 LOG: DEBUG[Found statement at line 36: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
10:18 LOG: DEBUG[Found statement at line 43: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
10:18 LOG: DEBUG[Found statement at line 59: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
10:18 LOG: DEBUG[Found statement at line 68: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
10:18 LOG: DEBUG[Filtering out resource: db/migration/V1_1__init_data.sql (filename: V1_1__init_data.sql)]
10:18 LOG: DEBUG[Filtering out resource: db/migration/V1__init_schema.sql (filename: V1__init_schema.sql)]
10:18 LOG: INFO [Successfully validated 2 migrations (execution time 00:00.026s)]
10:18 LOG: DEBUG[Schema "public" already exists. Skipping schema creation.]
10:18 LOG: INFO [Creating Schema History table: "public"."flyway_schema_history"]
10:18 LOG: DEBUG[Parsing createMetaDataTable.sql ...]
10:18 LOG: DEBUG[Found statement at line 17: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
10:18 LOG: DEBUG[Found statement at line 29: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
10:18 LOG: DEBUG[Found statement at line 31: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
10:18 LOG: DEBUG[Executing SQL: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
10:18 LOG: DEBUG[Update Count: 0]
10:18 LOG: DEBUG[Executing SQL: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
10:18 LOG: DEBUG[Update Count: 0]
10:18 LOG: DEBUG[Executing SQL: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
10:18 LOG: DEBUG[Update Count: 0]
10:18 LOG: DEBUG[Created Schema History table: "public"."flyway_schema_history"]
10:18 LOG: INFO [Current version of schema "public": << Empty Schema >>]
10:18 LOG: INFO [Migrating schema "public" to version 1 - init schema]
10:18 LOG: DEBUG[Executing SQL: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
10:18 LOG: DEBUG[Update Count: 0]
10:18 LOG: DEBUG[Executing SQL: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
10:18 LOG: DEBUG[Update Count: 0]
10:18 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
10:18 LOG: DEBUG[Update Count: 0]
10:18 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
10:18 LOG: DEBUG[Update Count: 0]
10:18 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
10:18 LOG: DEBUG[Update Count: 0]
10:18 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
10:18 LOG: DEBUG[Update Count: 0]
10:18 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
10:18 LOG: DEBUG[Update Count: 0]
10:18 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
10:18 LOG: DEBUG[Update Count: 0]
10:18 LOG: DEBUG[Successfully completed migration of schema "public" to version 1 - init schema]
10:18 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
10:18 LOG: INFO [Migrating schema "public" to version 1.1 - init data]
10:18 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
10:18 LOG: DEBUG[Update Count: 1]
10:18 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
10:18 LOG: DEBUG[Update Count: 1]
10:18 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
10:18 LOG: DEBUG[Update Count: 1]
10:18 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
10:18 LOG: DEBUG[Update Count: 1]
10:18 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test1', 4, 'test1', 1, 1, 'security')]
10:18 LOG: DEBUG[Update Count: 1]
10:18 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test2', 4, 'test2', 1, 1, 'security')]
10:18 LOG: DEBUG[Update Count: 1]
10:18 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test3', 4, 'test3', 1, 1, 'security')]
10:18 LOG: DEBUG[Update Count: 1]
10:18 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test4', 4, 'test4', 1, 1, 'security')]
10:18 LOG: DEBUG[Update Count: 1]
10:18 LOG: DEBUG[Successfully completed migration of schema "public" to version 1.1 - init data]
10:18 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
10:18 LOG: INFO [Successfully applied 2 migrations to schema "public" (execution time 00:00.190s)]
10:18 LOG: DEBUG[Memory usage: 10 of 126M]
10:18 LOG: TRACE[beforeTestMethod(): instance [repository.HotelRepositoryTest@8692d67], method [public void repository.HotelRepositoryTest.shouldBeReadCorrectly()]]
10:18 LOG: DEBUG[Before test method: context [DefaultTestContext@906d29b testClass = HotelRepositoryTest, testInstance = repository.HotelRepositoryTest@8692d67, testMethod = shouldBeReadCorrectly@HotelRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@49d3c823 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].]
10:18 LOG: TRACE[beforeTestExecution(): instance [repository.HotelRepositoryTest@8692d67], method [public void repository.HotelRepositoryTest.shouldBeReadCorrectly()]]
10:18 LOG: DEBUG[Executing prepared SQL query]
10:18 LOG: DEBUG[Executing prepared SQL statement [SELECT id, name, stars, website, latitude, longitude, feature FROM hotel WHERE id=?]]
10:18 LOG: DEBUG[Fetching JDBC Connection from DataSource]
10:18 LOG: TRACE[Setting SQL statement parameter value: column index 1, parameter value [1], value class [java.lang.Integer], SQL type unknown]
10:18 LOG: TRACE[afterTestExecution(): instance [repository.HotelRepositoryTest@8692d67], method [public void repository.HotelRepositoryTest.shouldBeReadCorrectly()], exception [null]]
10:18 LOG: TRACE[afterTestMethod(): instance [repository.HotelRepositoryTest@8692d67], method [public void repository.HotelRepositoryTest.shouldBeReadCorrectly()], exception [null]]
10:18 LOG: DEBUG[After test method: context [DefaultTestContext@906d29b testClass = HotelRepositoryTest, testInstance = repository.HotelRepositoryTest@8692d67, testMethod = shouldBeReadCorrectly@HotelRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@49d3c823 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].]
10:18 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [repository.HotelRepositoryTest]]
10:18 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [repository.HotelRepositoryTest]]
10:18 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
10:18 LOG: TRACE[prepareTestInstance(): instance [repository.HotelRepositoryTest@6b667cb3]]
10:18 LOG: DEBUG[Performing dependency injection for test context [[DefaultTestContext@906d29b testClass = HotelRepositoryTest, testInstance = repository.HotelRepositoryTest@6b667cb3, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@49d3c823 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].]
10:18 LOG: DEBUG[Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@49d3c823 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]]
10:18 LOG: DEBUG[Spring test ApplicationContext cache statistics: [DefaultContextCache@5328a9c1 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 1, missCount = 1]]
10:18 LOG: TRACE[Processing injected element of bean 'repository.HotelRepositoryTest': AutowiredFieldElement for private com.epam.travelagency.repository.HotelRepository repository.HotelRepositoryTest.hotelRepository]
10:18 LOG: TRACE[Returning cached instance of singleton bean 'hotelRepository']
10:18 LOG: TRACE[beforeTestMethod(): instance [repository.HotelRepositoryTest@6b667cb3], method [public void repository.HotelRepositoryTest.shouldBeCreated()]]
10:18 LOG: DEBUG[Before test method: context [DefaultTestContext@906d29b testClass = HotelRepositoryTest, testInstance = repository.HotelRepositoryTest@6b667cb3, testMethod = shouldBeCreated@HotelRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@49d3c823 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].]
10:18 LOG: TRACE[beforeTestExecution(): instance [repository.HotelRepositoryTest@6b667cb3], method [public void repository.HotelRepositoryTest.shouldBeCreated()]]
10:18 LOG: DEBUG[Executing prepared SQL update]
10:18 LOG: DEBUG[Executing prepared SQL statement [INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES (?,?,?,?,?,?::hotel_feature)]]
10:18 LOG: DEBUG[Fetching JDBC Connection from DataSource]
10:18 LOG: TRACE[SQL update affected 1 rows]
10:18 LOG: DEBUG[Executing prepared SQL query]
10:18 LOG: DEBUG[Executing prepared SQL statement [SELECT id, name, stars, website, latitude, longitude, feature FROM hotel WHERE id=?]]
10:18 LOG: DEBUG[Fetching JDBC Connection from DataSource]
10:18 LOG: TRACE[Setting SQL statement parameter value: column index 1, parameter value [5], value class [java.lang.Integer], SQL type unknown]
10:18 LOG: TRACE[afterTestExecution(): instance [repository.HotelRepositoryTest@6b667cb3], method [public void repository.HotelRepositoryTest.shouldBeCreated()], exception [null]]
10:18 LOG: TRACE[afterTestMethod(): instance [repository.HotelRepositoryTest@6b667cb3], method [public void repository.HotelRepositoryTest.shouldBeCreated()], exception [null]]
10:18 LOG: DEBUG[After test method: context [DefaultTestContext@906d29b testClass = HotelRepositoryTest, testInstance = repository.HotelRepositoryTest@6b667cb3, testMethod = shouldBeCreated@HotelRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@49d3c823 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].]
10:18 LOG: TRACE[afterTestClass(): class [repository.HotelRepositoryTest]]
10:18 LOG: DEBUG[After test class: context [DefaultTestContext@906d29b testClass = HotelRepositoryTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@49d3c823 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].]
10:18 LOG: DEBUG[Closing org.springframework.context.support.GenericApplicationContext@7c1e2a2d, started on Wed Feb 20 10:17:59 MSK 2019]
10:18 LOG: TRACE[Returning cached instance of singleton bean 'lifecycleProcessor']
10:18 LOG: TRACE[Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@7e3060d8: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,testConfig,getDataSource,getJdbcTemplate,userRepository,hotelRepository,userDataContext,hotelDataContext]; root of factory hierarchy]
10:19 LOG: DEBUG[SpringJUnit4ClassRunner constructor called with [class repository.HotelRepositoryTest]]
10:19 LOG: DEBUG[Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]]
10:19 LOG: DEBUG[Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]]
10:19 LOG: DEBUG[Instantiating TestContextBootstrapper for test class [repository.HotelRepositoryTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]]
10:19 LOG: TRACE[Retrieved @ContextConfiguration [@org.springframework.test.context.ContextConfiguration(name=, value=[], loader=interface org.springframework.test.context.ContextLoader, classes=[class config.TestConfig], locations=[], initializers=[], inheritLocations=true, inheritInitializers=true)] for declaring class [repository.HotelRepositoryTest].]
10:19 LOG: TRACE[Resolved context configuration attributes: [ContextConfigurationAttributes@19e4fcac declaringClass = 'repository.HotelRepositoryTest', classes = '{class config.TestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']]
10:19 LOG: TRACE[Resolving ContextLoader for context configuration attributes [ContextConfigurationAttributes@19e4fcac declaringClass = 'repository.HotelRepositoryTest', classes = '{class config.TestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']]
10:19 LOG: TRACE[Using ContextLoader class [org.springframework.test.context.support.DelegatingSmartContextLoader] for test class [repository.HotelRepositoryTest]]
10:19 LOG: TRACE[Processing locations and classes for context configuration attributes [ContextConfigurationAttributes@19e4fcac declaringClass = 'repository.HotelRepositoryTest', classes = '{class config.TestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']]
10:19 LOG: DEBUG[Delegating to AnnotationConfigContextLoader to process context configuration [ContextConfigurationAttributes@19e4fcac declaringClass = 'repository.HotelRepositoryTest', classes = '{class config.TestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].]
10:19 LOG: TRACE[Loaded [org.springframework.test.context.ContextCustomizerFactory] names: [org.springframework.test.context.web.socket.MockServerContainerContextCustomizerFactory]]
10:19 LOG: TRACE[Processing context initializers for configuration attributes [ContextConfigurationAttributes@19e4fcac declaringClass = 'repository.HotelRepositoryTest', classes = '{class config.TestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']]
10:19 LOG: DEBUG[Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [repository.HotelRepositoryTest]]
10:19 LOG: DEBUG[@TestExecutionListeners is not present for class [repository.HotelRepositoryTest]: using defaults.]
10:19 LOG: INFO [Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]]
10:19 LOG: DEBUG[Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]]
10:19 LOG: INFO [Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@12c7a01b, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@13d9b21f, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2826f61, org.springframework.test.context.transaction.TransactionalTestExecutionListener@62727399, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@4d9ac0b4]]
10:19 LOG: TRACE[Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@12c7a01b]
10:19 LOG: TRACE[Registering TestExecutionListener: org.springframework.test.context.support.DependencyInjectionTestExecutionListener@13d9b21f]
10:19 LOG: TRACE[Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextTestExecutionListener@2826f61]
10:19 LOG: TRACE[Registering TestExecutionListener: org.springframework.test.context.transaction.TransactionalTestExecutionListener@62727399]
10:19 LOG: TRACE[Registering TestExecutionListener: org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@4d9ac0b4]
10:19 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [repository.HotelRepositoryTest]]
10:19 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [repository.HotelRepositoryTest]]
10:19 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [repository.HotelRepositoryTest]]
10:19 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [repository.HotelRepositoryTest]]
10:19 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [repository.HotelRepositoryTest]]
10:19 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [repository.HotelRepositoryTest]]
10:19 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [repository.HotelRepositoryTest]]
10:19 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [repository.HotelRepositoryTest]]
10:19 LOG: TRACE[beforeTestClass(): class [repository.HotelRepositoryTest]]
10:19 LOG: DEBUG[Before test class: context [DefaultTestContext@52851b44 testClass = HotelRepositoryTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@584f54e6 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].]
10:19 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [repository.HotelRepositoryTest]]
10:19 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [repository.HotelRepositoryTest]]
10:19 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
10:19 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [repository.HotelRepositoryTest]]
10:19 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [repository.HotelRepositoryTest]]
10:19 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
10:19 LOG: TRACE[afterTestClass(): class [repository.HotelRepositoryTest]]
10:19 LOG: DEBUG[After test class: context [DefaultTestContext@52851b44 testClass = HotelRepositoryTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@584f54e6 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].]
10:21 LOG: DEBUG[SpringJUnit4ClassRunner constructor called with [class repository.HotelRepositoryTest]]
10:21 LOG: DEBUG[Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]]
10:21 LOG: DEBUG[Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]]
10:21 LOG: DEBUG[Instantiating TestContextBootstrapper for test class [repository.HotelRepositoryTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]]
10:21 LOG: TRACE[Retrieved @ContextConfiguration [@org.springframework.test.context.ContextConfiguration(name=, value=[], loader=interface org.springframework.test.context.ContextLoader, classes=[class config.TestConfig], locations=[], inheritLocations=true, initializers=[], inheritInitializers=true)] for declaring class [repository.HotelRepositoryTest].]
10:21 LOG: TRACE[Resolved context configuration attributes: [ContextConfigurationAttributes@8c3619e declaringClass = 'repository.HotelRepositoryTest', classes = '{class config.TestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']]
10:21 LOG: TRACE[Resolving ContextLoader for context configuration attributes [ContextConfigurationAttributes@8c3619e declaringClass = 'repository.HotelRepositoryTest', classes = '{class config.TestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']]
10:21 LOG: TRACE[Using ContextLoader class [org.springframework.test.context.support.DelegatingSmartContextLoader] for test class [repository.HotelRepositoryTest]]
10:21 LOG: TRACE[Processing locations and classes for context configuration attributes [ContextConfigurationAttributes@8c3619e declaringClass = 'repository.HotelRepositoryTest', classes = '{class config.TestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']]
10:21 LOG: DEBUG[Delegating to AnnotationConfigContextLoader to process context configuration [ContextConfigurationAttributes@8c3619e declaringClass = 'repository.HotelRepositoryTest', classes = '{class config.TestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].]
10:21 LOG: TRACE[Loaded [org.springframework.test.context.ContextCustomizerFactory] names: [org.springframework.test.context.web.socket.MockServerContainerContextCustomizerFactory]]
10:21 LOG: TRACE[Processing context initializers for configuration attributes [ContextConfigurationAttributes@8c3619e declaringClass = 'repository.HotelRepositoryTest', classes = '{class config.TestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']]
10:21 LOG: DEBUG[Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [repository.HotelRepositoryTest]]
10:21 LOG: DEBUG[@TestExecutionListeners is not present for class [repository.HotelRepositoryTest]: using defaults.]
10:21 LOG: INFO [Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]]
10:21 LOG: DEBUG[Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]]
10:21 LOG: INFO [Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@5f0e9815, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@76884e4b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@126945f9, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2a898881, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@16c63f5]]
10:21 LOG: TRACE[Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@5f0e9815]
10:21 LOG: TRACE[Registering TestExecutionListener: org.springframework.test.context.support.DependencyInjectionTestExecutionListener@76884e4b]
10:21 LOG: TRACE[Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextTestExecutionListener@126945f9]
10:21 LOG: TRACE[Registering TestExecutionListener: org.springframework.test.context.transaction.TransactionalTestExecutionListener@2a898881]
10:21 LOG: TRACE[Registering TestExecutionListener: org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@16c63f5]
10:21 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [repository.HotelRepositoryTest]]
10:21 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [repository.HotelRepositoryTest]]
10:21 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [repository.HotelRepositoryTest]]
10:21 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [repository.HotelRepositoryTest]]
10:21 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [repository.HotelRepositoryTest]]
10:21 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [repository.HotelRepositoryTest]]
10:21 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [repository.HotelRepositoryTest]]
10:21 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [repository.HotelRepositoryTest]]
10:21 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
10:21 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [repository.HotelRepositoryTest]]
10:21 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [repository.HotelRepositoryTest]]
10:21 LOG: INFO [Detected a Windows x86_64 system]
10:21 LOG: INFO [Postgres binaries at C:\Users\valik\AppData\Local\Temp\embedded-pg\PG-91c1fa33789b0c913345bf0253da6836]
10:21 LOG: TRACE[32e38530-c2f9-4fbf-9ae5-604a69cb8bc1 postgres data directory is C:\Users\valik\AppData\Local\Temp\epg196750408885080095]
10:21 LOG: INFO [The files belonging to this database system will be owned by user "valik".]
10:21 LOG: INFO [This user must also own the server process.]
10:21 LOG: INFO []
10:21 LOG: INFO [The database cluster will be initialized with locale "Russian_Belarus.1251".]
10:21 LOG: INFO [The default text search configuration will be set to "russian".]
10:21 LOG: INFO []
10:21 LOG: INFO [Data page checksums are disabled.]
10:21 LOG: INFO []
10:21 LOG: INFO [fixing permissions on existing directory C:/Users/valik/AppData/Local/Temp/epg196750408885080095 ... ok]
10:21 LOG: INFO [creating subdirectories ... ok]
10:21 LOG: INFO [selecting default max_connections ... 100]
10:21 LOG: INFO [selecting default shared_buffers ... 128MB]
10:21 LOG: INFO [selecting dynamic shared memory implementation ... windows]
10:21 LOG: INFO [creating configuration files ... ok]
10:21 LOG: INFO [running bootstrap script ... ok]
10:21 LOG: INFO [performing post-bootstrap initialization ... ok]
10:21 LOG: INFO [syncing data to disk ... ok]
10:21 LOG: INFO []
10:21 LOG: INFO [Success. You can now start the database server using:]
10:21 LOG: INFO []
10:21 LOG: INFO [    C:/Users/valik/AppData/Local/Temp/embedded-pg/PG-91c1fa33789b0c913345bf0253da6836/bin/pg_ctl -D ^"C^:^\Users^\valik^\AppData^\Local^\Temp^\epg196750408885080095^" -l logfile start]
10:21 LOG: INFO []
10:21 LOG: INFO [32e38530-c2f9-4fbf-9ae5-604a69cb8bc1 initdb completed in 00:00:07.415]
10:21 LOG: INFO [32e38530-c2f9-4fbf-9ae5-604a69cb8bc1 postmaster started as Process[pid=7648, exitValue="not exited"] on port 50194.  Waiting up to PT10S for server startup to finish.]
10:21 LOG: INFO [waiting for server to start....2019-02-20 10:21:31.931 +03 [9060] ���������:  ��� ����� ����������� �� ������ IPv6 "::1" ������ ���� 50194]
10:21 LOG: INFO [2019-02-20 10:21:31.931 +03 [9060] ���������:  ��� ����� ����������� �� ������ IPv4 "127.0.0.1" ������ ���� 50194]
10:21 LOG: INFO [2019-02-20 10:21:32.019 +03 [5256] ���������:  ������� �� ���� ���������: 2019-02-20 10:21:30 +03]
10:21 LOG: INFO [2019-02-20 10:21:32.063 +03 [9060] ���������:  ������� �� ������ ��������� �����������]
10:21 LOG: INFO [ done]
10:21 LOG: TRACE[While waiting for server startup]
java.sql.SQLException: connect failed
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:341) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.waitForServerStartup(EmbeddedPostgres.java:315) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.startPostmaster(EmbeddedPostgres.java:275) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.<init>(EmbeddedPostgres.java:162) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres$Builder.start(EmbeddedPostgres.java:580) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.createOrFindPreparer(PreparedDbProvider.java:82) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.<init>(PreparedDbProvider.java:62) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.forPreparer(PreparedDbProvider.java:57) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.junit.PreparedDbRule.before(PreparedDbRule.java:55) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:46) [junit-4.12.jar:4.12]
	at org.junit.rules.RunRules.evaluate(RunRules.java:20) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) [junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190) [spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) [junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) [junit-rt.jar:?]
Caused by: java.net.SocketTimeoutException: connect timed out
	at java.net.PlainSocketImpl.waitForConnect(Native Method) ~[?:?]
	at java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:107) ~[?:?]
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224) ~[?:?]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403) ~[?:?]
	at java.net.Socket.connect(Socket.java:591) ~[?:?]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:339) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	... 17 more
10:21 LOG: INFO [32e38530-c2f9-4fbf-9ae5-604a69cb8bc1 postmaster startup finished in 00:00:00.961]
10:21 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
10:21 LOG: INFO [Flyway Community Edition 5.2.4 by Boxfuse]
10:21 LOG: INFO [Database: jdbc:postgresql://localhost:50194/template1 (PostgreSQL 10.6)]
10:21 LOG: DEBUG[Driver  : PostgreSQL JDBC Driver 42.2.5]
10:21 LOG: DEBUG[DDL Transactions Supported: true]
10:21 LOG: DEBUG[Schema: public]
10:21 LOG: DEBUG[Scanning for classpath resources at 'classpath:db/migration' ...]
10:21 LOG: DEBUG[Determining location urls for classpath:db/migration using ClassLoader jdk.internal.loader.ClassLoaders$AppClassLoader@6ed3ef1 ...]
10:21 LOG: DEBUG[Scanning URL: file:/C:/Users/valik/IdeaProjects/java-lab-task-1/target/classes/db/migration]
10:21 LOG: DEBUG[JBoss VFS v2 available: false]
10:21 LOG: DEBUG[Scanning starting at classpath root in filesystem: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\]
10:21 LOG: DEBUG[Scanning for resources in path: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\db\migration (db/migration)]
10:21 LOG: DEBUG[Found resource: db/migration/V1_1__init_data.sql]
10:21 LOG: DEBUG[Found resource: db/migration/V1__init_schema.sql]
10:21 LOG: DEBUG[Scanning for classes at classpath:db/migration]
10:21 LOG: DEBUG[Scanning for SQL callbacks ...]
10:21 LOG: DEBUG[Spring Jdbc available: true]
10:21 LOG: DEBUG[Validating migrations ...]
10:21 LOG: DEBUG[Parsing V1_1__init_data.sql ...]
10:21 LOG: DEBUG[Found statement at line 1: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
10:21 LOG: DEBUG[Found statement at line 2: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
10:21 LOG: DEBUG[Found statement at line 3: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
10:21 LOG: DEBUG[Found statement at line 4: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
10:21 LOG: DEBUG[Found statement at line 6: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test1', 4, 'test1', 1, 1, 'security')]
10:21 LOG: DEBUG[Found statement at line 7: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test2', 4, 'test2', 1, 1, 'security')]
10:21 LOG: DEBUG[Found statement at line 8: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test3', 4, 'test3', 1, 1, 'security')]
10:21 LOG: DEBUG[Found statement at line 9: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test4', 4, 'test4', 1, 1, 'security')]
10:21 LOG: DEBUG[Parsing V1__init_schema.sql ...]
10:21 LOG: DEBUG[Found statement at line 1: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
10:21 LOG: DEBUG[Found statement at line 8: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
10:21 LOG: DEBUG[Found statement at line 16: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
10:21 LOG: DEBUG[Found statement at line 24: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
10:21 LOG: DEBUG[Found statement at line 36: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
10:21 LOG: DEBUG[Found statement at line 43: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
10:21 LOG: DEBUG[Found statement at line 59: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
10:21 LOG: DEBUG[Found statement at line 68: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
10:21 LOG: DEBUG[Filtering out resource: db/migration/V1_1__init_data.sql (filename: V1_1__init_data.sql)]
10:21 LOG: DEBUG[Filtering out resource: db/migration/V1__init_schema.sql (filename: V1__init_schema.sql)]
10:21 LOG: INFO [Successfully validated 2 migrations (execution time 00:00.033s)]
10:21 LOG: DEBUG[Schema "public" already exists. Skipping schema creation.]
10:21 LOG: INFO [Creating Schema History table: "public"."flyway_schema_history"]
10:21 LOG: DEBUG[Parsing createMetaDataTable.sql ...]
10:21 LOG: DEBUG[Found statement at line 17: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
10:21 LOG: DEBUG[Found statement at line 29: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
10:21 LOG: DEBUG[Found statement at line 31: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
10:21 LOG: DEBUG[Executing SQL: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
10:21 LOG: DEBUG[Update Count: 0]
10:21 LOG: DEBUG[Executing SQL: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
10:21 LOG: DEBUG[Update Count: 0]
10:21 LOG: DEBUG[Executing SQL: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
10:21 LOG: DEBUG[Update Count: 0]
10:21 LOG: DEBUG[Created Schema History table: "public"."flyway_schema_history"]
10:21 LOG: INFO [Current version of schema "public": << Empty Schema >>]
10:21 LOG: INFO [Migrating schema "public" to version 1 - init schema]
10:21 LOG: DEBUG[Executing SQL: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
10:21 LOG: DEBUG[Update Count: 0]
10:21 LOG: DEBUG[Executing SQL: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
10:21 LOG: DEBUG[Update Count: 0]
10:21 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
10:21 LOG: DEBUG[Update Count: 0]
10:21 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
10:21 LOG: DEBUG[Update Count: 0]
10:21 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
10:21 LOG: DEBUG[Update Count: 0]
10:21 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
10:21 LOG: DEBUG[Update Count: 0]
10:21 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
10:21 LOG: DEBUG[Update Count: 0]
10:21 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
10:21 LOG: DEBUG[Update Count: 0]
10:21 LOG: DEBUG[Successfully completed migration of schema "public" to version 1 - init schema]
10:21 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
10:21 LOG: INFO [Migrating schema "public" to version 1.1 - init data]
10:21 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
10:21 LOG: DEBUG[Update Count: 1]
10:21 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
10:21 LOG: DEBUG[Update Count: 1]
10:21 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
10:21 LOG: DEBUG[Update Count: 1]
10:21 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
10:21 LOG: DEBUG[Update Count: 1]
10:21 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test1', 4, 'test1', 1, 1, 'security')]
10:21 LOG: DEBUG[Update Count: 1]
10:21 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test2', 4, 'test2', 1, 1, 'security')]
10:21 LOG: DEBUG[Update Count: 1]
10:21 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test3', 4, 'test3', 1, 1, 'security')]
10:21 LOG: DEBUG[Update Count: 1]
10:21 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test4', 4, 'test4', 1, 1, 'security')]
10:21 LOG: DEBUG[Update Count: 1]
10:21 LOG: DEBUG[Successfully completed migration of schema "public" to version 1.1 - init data]
10:21 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
10:21 LOG: INFO [Successfully applied 2 migrations to schema "public" (execution time 00:00.172s)]
10:21 LOG: DEBUG[Memory usage: 15 of 126M]
10:21 LOG: TRACE[beforeTestClass(): class [repository.HotelRepositoryTest]]
10:21 LOG: DEBUG[Before test class: context [DefaultTestContext@56e07a08 testClass = HotelRepositoryTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@35d6ca49 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].]
10:21 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [repository.HotelRepositoryTest]]
10:21 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [repository.HotelRepositoryTest]]
10:21 LOG: TRACE[prepareTestInstance(): instance [repository.HotelRepositoryTest@138fe6ec]]
10:21 LOG: DEBUG[Performing dependency injection for test context [[DefaultTestContext@56e07a08 testClass = HotelRepositoryTest, testInstance = repository.HotelRepositoryTest@138fe6ec, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@35d6ca49 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].]
10:21 LOG: DEBUG[Delegating to AnnotationConfigContextLoader to load context from [MergedContextConfiguration@35d6ca49 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].]
10:21 LOG: DEBUG[Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@35d6ca49 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].]
10:21 LOG: DEBUG[Activating profiles []]
10:21 LOG: DEBUG[Registering annotated classes: {class config.TestConfig}]
10:21 LOG: TRACE[Refreshing org.springframework.context.support.GenericApplicationContext@3f093abe, started on Wed Feb 20 10:21:34 MSK 2019]
10:21 LOG: DEBUG[Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor']
10:21 LOG: TRACE[Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor']
10:21 LOG: TRACE[Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references]
10:21 LOG: TRACE[Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor']
10:21 LOG: TRACE[Registering bean definition for @Bean method config.TestConfig.getDataSource()]
10:21 LOG: TRACE[Registering bean definition for @Bean method config.TestConfig.getJdbcTemplate()]
10:21 LOG: TRACE[Registering bean definition for @Bean method config.TestConfig.userRepository()]
10:21 LOG: TRACE[Registering bean definition for @Bean method config.TestConfig.hotelRepository()]
10:21 LOG: TRACE[Registering bean definition for @Bean method config.TestConfig.userDataContext()]
10:21 LOG: TRACE[Registering bean definition for @Bean method config.TestConfig.hotelDataContext()]
10:21 LOG: TRACE[Successfully enhanced config.TestConfig; enhanced class name is: config.TestConfig$$EnhancerBySpringCGLIB$$a83094b2]
10:21 LOG: TRACE[Replacing bean definition 'testConfig' existing class 'config.TestConfig' with enhanced class 'config.TestConfig$$EnhancerBySpringCGLIB$$a83094b2']
10:21 LOG: DEBUG[Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor']
10:21 LOG: TRACE[Creating instance of bean 'org.springframework.context.event.internalEventListenerProcessor']
10:21 LOG: TRACE[Eagerly caching bean 'org.springframework.context.event.internalEventListenerProcessor' to allow for resolving potential circular references]
10:21 LOG: TRACE[Finished creating instance of bean 'org.springframework.context.event.internalEventListenerProcessor']
10:21 LOG: DEBUG[Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory']
10:21 LOG: TRACE[Creating instance of bean 'org.springframework.context.event.internalEventListenerFactory']
10:21 LOG: TRACE[Eagerly caching bean 'org.springframework.context.event.internalEventListenerFactory' to allow for resolving potential circular references]
10:21 LOG: TRACE[Finished creating instance of bean 'org.springframework.context.event.internalEventListenerFactory']
10:21 LOG: DEBUG[Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor']
10:21 LOG: TRACE[Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor']
10:21 LOG: TRACE[Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references]
10:21 LOG: TRACE[Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor']
10:21 LOG: DEBUG[Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor']
10:21 LOG: TRACE[Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor']
10:21 LOG: TRACE[Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references]
10:21 LOG: TRACE[Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor']
10:21 LOG: TRACE[No 'messageSource' bean, using [Empty MessageSource]]
10:21 LOG: TRACE[No 'applicationEventMulticaster' bean, using [SimpleApplicationEventMulticaster]]
10:21 LOG: TRACE[Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@5d332969: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,testConfig,getDataSource,getJdbcTemplate,userRepository,hotelRepository,userDataContext,hotelDataContext]; root of factory hierarchy]
10:21 LOG: TRACE[Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor']
10:21 LOG: TRACE[Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor']
10:21 LOG: TRACE[Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor']
10:21 LOG: TRACE[Returning cached instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor']
10:21 LOG: TRACE[Returning cached instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory']
10:21 LOG: DEBUG[Creating shared instance of singleton bean 'testConfig']
10:21 LOG: TRACE[Creating instance of bean 'testConfig']
10:21 LOG: TRACE[Eagerly caching bean 'testConfig' to allow for resolving potential circular references]
10:21 LOG: TRACE[Finished creating instance of bean 'testConfig']
10:21 LOG: DEBUG[Creating shared instance of singleton bean 'getDataSource']
10:21 LOG: TRACE[Creating instance of bean 'getDataSource']
10:21 LOG: TRACE[Returning cached instance of singleton bean 'testConfig']
10:21 LOG: INFO [Starting embedded database: url='jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa']
10:21 LOG: DEBUG[Fetching JDBC Connection from DataSource]
10:21 LOG: DEBUG[Creating new JDBC Driver Connection to [jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false]]
10:21 LOG: DEBUG[Executing SQL script from class path resource [db/migration/V1__init_schema.sql]]
10:21 LOG: DEBUG[0 returned as update count for SQL: CREATE TYPE TOUR_TYPE AS ENUM ( 'bus', 'sightseeing', 'shore_excursion', 'adventure', 'sporting', 'cruise', 'escorted', 'guided', 'rail', 'extreme' )]
10:21 LOG: DEBUG[0 returned as update count for SQL: CREATE TYPE HOTEL_FEATURE AS ENUM ( 'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning', 'food_delivery', 'pool', 'conference_hall', 'safe' )]
10:21 LOG: DEBUG[0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS "user" ( id SERIAL, login VARCHAR(255) UNIQUE NOT NULL, password VARCHAR(255) NOT NULL, PRIMARY KEY (id) )]
10:21 LOG: DEBUG[0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS "hotel" ( id SERIAL, name VARCHAR(255) NOT NULL, stars SMALLINT NOT NULL, website VARCHAR(255) NOT NULL, latitude DECIMAL(8, 6) NOT NULL, longitude DECIMAL(8, 6) NOT NULL, feature HOTEL_FEATURE NOT NULL, PRIMARY KEY (id) )]
10:21 LOG: DEBUG[0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS "country" ( id SERIAL, name VARCHAR(255), PRIMARY KEY (id) )]
10:21 LOG: DEBUG[0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS "tour" ( id SERIAL, photo VARCHAR(255), date DATE NOT NULL, duration INT NOT NULL, description TEXT NOT NULL, cost DECIMAL(19, 3) NOT NULL, tour_type TOUR_TYPE NOT NULL, hotel_id INT NOT NULL, country_id INT NOT NULL, PRIMARY KEY (id), FOREIGN KEY (hotel_id) REFERENCES "hotel" (id), FOREIGN KEY (country_id) REFERENCES "country" (id) )]
10:21 LOG: DEBUG[0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS "usertour" ( user_id INT UNIQUE NOT NULL, tour_id INT UNIQUE NOT NULL, PRIMARY KEY (user_id, tour_id), FOREIGN KEY (user_id) REFERENCES "user" (id), FOREIGN KEY (tour_id) REFERENCES "tour" (id) )]
10:21 LOG: DEBUG[0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS "review" ( id SERIAL, date DATE NOT NULL, text TEXT NOT NULL, user_id INT NOT NULL, tour_id INT NOT NULL, PRIMARY KEY (id), FOREIGN KEY (user_id) REFERENCES "user" (id), FOREIGN KEY (tour_id) REFERENCES "tour" (id) ) ]
10:21 LOG: DEBUG[Executed SQL script from class path resource [db/migration/V1__init_schema.sql] in 67 ms.]
10:21 LOG: DEBUG[Executing SQL script from class path resource [db/migration/V1_1__init_data.sql]]
10:21 LOG: DEBUG[1 returned as update count for SQL: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
10:21 LOG: DEBUG[1 returned as update count for SQL: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
10:21 LOG: DEBUG[1 returned as update count for SQL: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
10:21 LOG: DEBUG[1 returned as update count for SQL: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
10:21 LOG: DEBUG[1 returned as update count for SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test1', 4, 'test1', 1, 1, 'security')]
10:21 LOG: DEBUG[1 returned as update count for SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test2', 4, 'test2', 1, 1, 'security')]
10:21 LOG: DEBUG[1 returned as update count for SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test3', 4, 'test3', 1, 1, 'security')]
10:21 LOG: DEBUG[1 returned as update count for SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test4', 4, 'test4', 1, 1, 'security')]
10:21 LOG: DEBUG[Executed SQL script from class path resource [db/migration/V1_1__init_data.sql] in 10 ms.]
10:21 LOG: TRACE[Eagerly caching bean 'getDataSource' to allow for resolving potential circular references]
10:21 LOG: TRACE[Finished creating instance of bean 'getDataSource']
10:21 LOG: DEBUG[Creating shared instance of singleton bean 'getJdbcTemplate']
10:21 LOG: TRACE[Creating instance of bean 'getJdbcTemplate']
10:21 LOG: TRACE[Returning cached instance of singleton bean 'testConfig']
10:21 LOG: TRACE[Returning cached instance of singleton bean 'getDataSource']
10:21 LOG: TRACE[Eagerly caching bean 'getJdbcTemplate' to allow for resolving potential circular references]
10:21 LOG: TRACE[Invoking afterPropertiesSet() on bean with name 'getJdbcTemplate']
10:21 LOG: TRACE[Finished creating instance of bean 'getJdbcTemplate']
10:21 LOG: DEBUG[Creating shared instance of singleton bean 'userRepository']
10:21 LOG: TRACE[Creating instance of bean 'userRepository']
10:21 LOG: TRACE[Returning cached instance of singleton bean 'testConfig']
10:21 LOG: TRACE[Loaded [org.springframework.beans.BeanInfoFactory] names: [org.springframework.beans.ExtendedBeanInfoFactory]]
10:21 LOG: TRACE[Getting BeanInfo for class [com.epam.travelagency.repository.UserRepository]]
10:21 LOG: TRACE[Caching PropertyDescriptors for class [com.epam.travelagency.repository.UserRepository]]
10:21 LOG: TRACE[Found bean property 'class' of type [java.lang.Class]]
10:21 LOG: TRACE[Found bean property 'dataContext' of type [com.epam.travelagency.storage.DataContext]]
10:21 LOG: TRACE[Registered injected element on class [com.epam.travelagency.repository.UserRepository]: AutowiredMethodElement for public void com.epam.travelagency.repository.Repository.setDataContext(com.epam.travelagency.storage.DataContext)]
10:21 LOG: TRACE[Eagerly caching bean 'userRepository' to allow for resolving potential circular references]
10:21 LOG: TRACE[Processing injected element of bean 'userRepository': AutowiredMethodElement for public void com.epam.travelagency.repository.Repository.setDataContext(com.epam.travelagency.storage.DataContext)]
10:21 LOG: DEBUG[Creating shared instance of singleton bean 'userDataContext']
10:21 LOG: TRACE[Creating instance of bean 'userDataContext']
10:21 LOG: TRACE[Returning cached instance of singleton bean 'testConfig']
10:21 LOG: TRACE[Returning cached instance of singleton bean 'getJdbcTemplate']
10:21 LOG: TRACE[Eagerly caching bean 'userDataContext' to allow for resolving potential circular references]
10:21 LOG: TRACE[Finished creating instance of bean 'userDataContext']
10:21 LOG: TRACE[Autowiring by type from bean name 'userRepository' to bean named 'userDataContext']
10:21 LOG: TRACE[Finished creating instance of bean 'userRepository']
10:21 LOG: DEBUG[Creating shared instance of singleton bean 'hotelRepository']
10:21 LOG: TRACE[Creating instance of bean 'hotelRepository']
10:21 LOG: TRACE[Returning cached instance of singleton bean 'testConfig']
10:21 LOG: TRACE[Getting BeanInfo for class [com.epam.travelagency.repository.HotelRepository]]
10:21 LOG: TRACE[Caching PropertyDescriptors for class [com.epam.travelagency.repository.HotelRepository]]
10:21 LOG: TRACE[Found bean property 'class' of type [java.lang.Class]]
10:21 LOG: TRACE[Found bean property 'dataContext' of type [com.epam.travelagency.storage.DataContext]]
10:21 LOG: TRACE[Registered injected element on class [com.epam.travelagency.repository.HotelRepository]: AutowiredMethodElement for public void com.epam.travelagency.repository.Repository.setDataContext(com.epam.travelagency.storage.DataContext)]
10:21 LOG: TRACE[Eagerly caching bean 'hotelRepository' to allow for resolving potential circular references]
10:21 LOG: TRACE[Processing injected element of bean 'hotelRepository': AutowiredMethodElement for public void com.epam.travelagency.repository.Repository.setDataContext(com.epam.travelagency.storage.DataContext)]
10:21 LOG: DEBUG[Creating shared instance of singleton bean 'hotelDataContext']
10:21 LOG: TRACE[Creating instance of bean 'hotelDataContext']
10:21 LOG: TRACE[Returning cached instance of singleton bean 'testConfig']
10:21 LOG: TRACE[Returning cached instance of singleton bean 'getJdbcTemplate']
10:21 LOG: TRACE[Eagerly caching bean 'hotelDataContext' to allow for resolving potential circular references]
10:21 LOG: TRACE[Finished creating instance of bean 'hotelDataContext']
10:21 LOG: TRACE[Autowiring by type from bean name 'hotelRepository' to bean named 'hotelDataContext']
10:21 LOG: TRACE[Finished creating instance of bean 'hotelRepository']
10:21 LOG: TRACE[Returning cached instance of singleton bean 'userDataContext']
10:21 LOG: TRACE[Returning cached instance of singleton bean 'hotelDataContext']
10:21 LOG: TRACE[No @EventListener annotations found on bean class: config.TestConfig$$EnhancerBySpringCGLIB$$a83094b2]
10:21 LOG: TRACE[No @EventListener annotations found on bean class: com.epam.travelagency.repository.UserRepository]
10:21 LOG: TRACE[No @EventListener annotations found on bean class: com.epam.travelagency.repository.HotelRepository]
10:21 LOG: TRACE[No @EventListener annotations found on bean class: com.epam.travelagency.storage.posgresql.UserDataContext]
10:21 LOG: TRACE[No @EventListener annotations found on bean class: com.epam.travelagency.storage.posgresql.HotelDataContext]
10:21 LOG: TRACE[No @EventListener annotations found on bean class: java.util.Properties]
10:21 LOG: TRACE[No @EventListener annotations found on bean class: java.util.Collections$UnmodifiableMap]
10:21 LOG: TRACE[No 'lifecycleProcessor' bean, using [DefaultLifecycleProcessor]]
10:21 LOG: TRACE[Returning cached instance of singleton bean 'lifecycleProcessor']
10:21 LOG: TRACE[Searching for key 'spring.liveBeansView.mbeanDomain' in PropertySource 'systemProperties']
10:21 LOG: TRACE[Searching for key 'spring.liveBeansView.mbeanDomain' in PropertySource 'systemEnvironment']
10:21 LOG: TRACE[Could not find key 'spring.liveBeansView.mbeanDomain' in any property source]
10:21 LOG: DEBUG[Storing ApplicationContext in cache under key [[MergedContextConfiguration@35d6ca49 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]]
10:21 LOG: DEBUG[Spring test ApplicationContext cache statistics: [DefaultContextCache@351e414e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 0, missCount = 1]]
10:21 LOG: TRACE[beforeTestMethod(): instance [repository.HotelRepositoryTest@138fe6ec], method [public void repository.HotelRepositoryTest.shouldBeReadCorrectly()]]
10:21 LOG: DEBUG[Before test method: context [DefaultTestContext@56e07a08 testClass = HotelRepositoryTest, testInstance = repository.HotelRepositoryTest@138fe6ec, testMethod = shouldBeReadCorrectly@HotelRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@35d6ca49 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].]
10:21 LOG: TRACE[beforeTestExecution(): instance [repository.HotelRepositoryTest@138fe6ec], method [public void repository.HotelRepositoryTest.shouldBeReadCorrectly()]]
10:21 LOG: DEBUG[Executing prepared SQL query]
10:21 LOG: DEBUG[Executing prepared SQL statement [SELECT id, name, stars, website, latitude, longitude, feature FROM hotel WHERE id=?]]
10:21 LOG: DEBUG[Fetching JDBC Connection from DataSource]
10:21 LOG: TRACE[Setting SQL statement parameter value: column index 1, parameter value [1], value class [java.lang.Integer], SQL type unknown]
10:21 LOG: TRACE[afterTestExecution(): instance [repository.HotelRepositoryTest@138fe6ec], method [public void repository.HotelRepositoryTest.shouldBeReadCorrectly()], exception [null]]
10:21 LOG: TRACE[afterTestMethod(): instance [repository.HotelRepositoryTest@138fe6ec], method [public void repository.HotelRepositoryTest.shouldBeReadCorrectly()], exception [null]]
10:21 LOG: DEBUG[After test method: context [DefaultTestContext@56e07a08 testClass = HotelRepositoryTest, testInstance = repository.HotelRepositoryTest@138fe6ec, testMethod = shouldBeReadCorrectly@HotelRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@35d6ca49 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].]
10:21 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [repository.HotelRepositoryTest]]
10:21 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [repository.HotelRepositoryTest]]
10:21 LOG: TRACE[prepareTestInstance(): instance [repository.HotelRepositoryTest@363f0ba0]]
10:21 LOG: DEBUG[Performing dependency injection for test context [[DefaultTestContext@56e07a08 testClass = HotelRepositoryTest, testInstance = repository.HotelRepositoryTest@363f0ba0, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@35d6ca49 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].]
10:21 LOG: DEBUG[Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@35d6ca49 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]]
10:21 LOG: DEBUG[Spring test ApplicationContext cache statistics: [DefaultContextCache@351e414e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 1, missCount = 1]]
10:21 LOG: TRACE[beforeTestMethod(): instance [repository.HotelRepositoryTest@363f0ba0], method [public void repository.HotelRepositoryTest.shouldBeCreated()]]
10:21 LOG: DEBUG[Before test method: context [DefaultTestContext@56e07a08 testClass = HotelRepositoryTest, testInstance = repository.HotelRepositoryTest@363f0ba0, testMethod = shouldBeCreated@HotelRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@35d6ca49 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].]
10:21 LOG: TRACE[beforeTestExecution(): instance [repository.HotelRepositoryTest@363f0ba0], method [public void repository.HotelRepositoryTest.shouldBeCreated()]]
10:21 LOG: DEBUG[Executing prepared SQL update]
10:21 LOG: DEBUG[Executing prepared SQL statement [INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES (?,?,?,?,?,?::hotel_feature)]]
10:21 LOG: DEBUG[Fetching JDBC Connection from DataSource]
10:21 LOG: TRACE[SQL update affected 1 rows]
10:21 LOG: DEBUG[Executing prepared SQL query]
10:21 LOG: DEBUG[Executing prepared SQL statement [SELECT id, name, stars, website, latitude, longitude, feature FROM hotel WHERE id=?]]
10:21 LOG: DEBUG[Fetching JDBC Connection from DataSource]
10:21 LOG: TRACE[Setting SQL statement parameter value: column index 1, parameter value [5], value class [java.lang.Integer], SQL type unknown]
10:21 LOG: TRACE[afterTestExecution(): instance [repository.HotelRepositoryTest@363f0ba0], method [public void repository.HotelRepositoryTest.shouldBeCreated()], exception [null]]
10:21 LOG: TRACE[afterTestMethod(): instance [repository.HotelRepositoryTest@363f0ba0], method [public void repository.HotelRepositoryTest.shouldBeCreated()], exception [null]]
10:21 LOG: DEBUG[After test method: context [DefaultTestContext@56e07a08 testClass = HotelRepositoryTest, testInstance = repository.HotelRepositoryTest@363f0ba0, testMethod = shouldBeCreated@HotelRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@35d6ca49 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].]
10:21 LOG: TRACE[afterTestClass(): class [repository.HotelRepositoryTest]]
10:21 LOG: DEBUG[After test class: context [DefaultTestContext@56e07a08 testClass = HotelRepositoryTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@35d6ca49 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].]
10:21 LOG: DEBUG[Closing org.springframework.context.support.GenericApplicationContext@3f093abe, started on Wed Feb 20 10:21:34 MSK 2019]
10:21 LOG: TRACE[Returning cached instance of singleton bean 'lifecycleProcessor']
10:21 LOG: TRACE[Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@5d332969: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,testConfig,getDataSource,getJdbcTemplate,userRepository,hotelRepository,userDataContext,hotelDataContext]; root of factory hierarchy]
10:21 LOG: TRACE[Retrieved dependent beans for bean 'getDataSource': [getJdbcTemplate]]
10:25 LOG: DEBUG[SpringJUnit4ClassRunner constructor called with [class repository.HotelRepositoryTest]]
10:25 LOG: DEBUG[Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]]
10:25 LOG: DEBUG[Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]]
10:25 LOG: DEBUG[Instantiating TestContextBootstrapper for test class [repository.HotelRepositoryTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]]
10:25 LOG: TRACE[Retrieved @ContextConfiguration [@org.springframework.test.context.ContextConfiguration(name=, value=[], loader=interface org.springframework.test.context.ContextLoader, classes=[class config.TestConfig], locations=[], initializers=[], inheritLocations=true, inheritInitializers=true)] for declaring class [repository.HotelRepositoryTest].]
10:25 LOG: TRACE[Resolved context configuration attributes: [ContextConfigurationAttributes@8c3619e declaringClass = 'repository.HotelRepositoryTest', classes = '{class config.TestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']]
10:25 LOG: TRACE[Resolving ContextLoader for context configuration attributes [ContextConfigurationAttributes@8c3619e declaringClass = 'repository.HotelRepositoryTest', classes = '{class config.TestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']]
10:25 LOG: TRACE[Using ContextLoader class [org.springframework.test.context.support.DelegatingSmartContextLoader] for test class [repository.HotelRepositoryTest]]
10:25 LOG: TRACE[Processing locations and classes for context configuration attributes [ContextConfigurationAttributes@8c3619e declaringClass = 'repository.HotelRepositoryTest', classes = '{class config.TestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']]
10:25 LOG: DEBUG[Delegating to AnnotationConfigContextLoader to process context configuration [ContextConfigurationAttributes@8c3619e declaringClass = 'repository.HotelRepositoryTest', classes = '{class config.TestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].]
10:25 LOG: TRACE[Loaded [org.springframework.test.context.ContextCustomizerFactory] names: [org.springframework.test.context.web.socket.MockServerContainerContextCustomizerFactory]]
10:25 LOG: TRACE[Processing context initializers for configuration attributes [ContextConfigurationAttributes@8c3619e declaringClass = 'repository.HotelRepositoryTest', classes = '{class config.TestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']]
10:25 LOG: DEBUG[Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [repository.HotelRepositoryTest]]
10:25 LOG: DEBUG[@TestExecutionListeners is not present for class [repository.HotelRepositoryTest]: using defaults.]
10:25 LOG: INFO [Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]]
10:25 LOG: DEBUG[Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]]
10:25 LOG: INFO [Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@5f0e9815, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@76884e4b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@126945f9, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2a898881, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@16c63f5]]
10:25 LOG: TRACE[Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@5f0e9815]
10:25 LOG: TRACE[Registering TestExecutionListener: org.springframework.test.context.support.DependencyInjectionTestExecutionListener@76884e4b]
10:25 LOG: TRACE[Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextTestExecutionListener@126945f9]
10:25 LOG: TRACE[Registering TestExecutionListener: org.springframework.test.context.transaction.TransactionalTestExecutionListener@2a898881]
10:25 LOG: TRACE[Registering TestExecutionListener: org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@16c63f5]
10:25 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [repository.HotelRepositoryTest]]
10:25 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [repository.HotelRepositoryTest]]
10:25 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [repository.HotelRepositoryTest]]
10:25 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [repository.HotelRepositoryTest]]
10:25 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [repository.HotelRepositoryTest]]
10:25 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [repository.HotelRepositoryTest]]
10:25 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [repository.HotelRepositoryTest]]
10:25 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [repository.HotelRepositoryTest]]
10:25 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
10:25 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [repository.HotelRepositoryTest]]
10:25 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [repository.HotelRepositoryTest]]
10:25 LOG: INFO [Detected a Windows x86_64 system]
10:25 LOG: INFO [Postgres binaries at C:\Users\valik\AppData\Local\Temp\embedded-pg\PG-91c1fa33789b0c913345bf0253da6836]
10:25 LOG: TRACE[a110c231-cf9f-4f1c-8f59-5768ab78bb31 postgres data directory is C:\Users\valik\AppData\Local\Temp\epg3820157155661634402]
10:25 LOG: INFO [The files belonging to this database system will be owned by user "valik".]
10:25 LOG: INFO [This user must also own the server process.]
10:25 LOG: INFO []
10:25 LOG: INFO [The database cluster will be initialized with locale "Russian_Belarus.1251".]
10:25 LOG: INFO [The default text search configuration will be set to "russian".]
10:25 LOG: INFO []
10:25 LOG: INFO [Data page checksums are disabled.]
10:25 LOG: INFO []
10:25 LOG: INFO [fixing permissions on existing directory C:/Users/valik/AppData/Local/Temp/epg3820157155661634402 ... ok]
10:25 LOG: INFO [creating subdirectories ... ok]
10:25 LOG: INFO [selecting default max_connections ... 100]
10:25 LOG: INFO [selecting default shared_buffers ... 128MB]
10:25 LOG: INFO [selecting dynamic shared memory implementation ... windows]
10:25 LOG: INFO [creating configuration files ... ok]
10:25 LOG: INFO [running bootstrap script ... ok]
10:25 LOG: INFO [performing post-bootstrap initialization ... ok]
10:25 LOG: INFO [syncing data to disk ... ok]
10:25 LOG: INFO []
10:25 LOG: INFO [Success. You can now start the database server using:]
10:25 LOG: INFO []
10:25 LOG: INFO [    C:/Users/valik/AppData/Local/Temp/embedded-pg/PG-91c1fa33789b0c913345bf0253da6836/bin/pg_ctl -D ^"C^:^\Users^\valik^\AppData^\Local^\Temp^\epg3820157155661634402^" -l logfile start]
10:25 LOG: INFO []
10:25 LOG: INFO [a110c231-cf9f-4f1c-8f59-5768ab78bb31 initdb completed in 00:00:07.479]
10:25 LOG: INFO [a110c231-cf9f-4f1c-8f59-5768ab78bb31 postmaster started as Process[pid=12552, exitValue="not exited"] on port 50256.  Waiting up to PT10S for server startup to finish.]
10:25 LOG: INFO [waiting for server to start....2019-02-20 10:25:32.855 +03 [364] ���������:  ��� ����� ����������� �� ������ IPv6 "::1" ������ ���� 50256]
10:25 LOG: INFO [2019-02-20 10:25:32.855 +03 [364] ���������:  ��� ����� ����������� �� ������ IPv4 "127.0.0.1" ������ ���� 50256]
10:25 LOG: INFO [2019-02-20 10:25:32.937 +03 [11420] ���������:  ������� �� ���� ���������: 2019-02-20 10:25:31 +03]
10:25 LOG: INFO [2019-02-20 10:25:32.995 +03 [364] ���������:  ������� �� ������ ��������� �����������]
10:25 LOG: INFO [ done]
10:25 LOG: TRACE[While waiting for server startup]
java.sql.SQLException: connect failed
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:341) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.waitForServerStartup(EmbeddedPostgres.java:315) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.startPostmaster(EmbeddedPostgres.java:275) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.<init>(EmbeddedPostgres.java:162) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres$Builder.start(EmbeddedPostgres.java:580) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.createOrFindPreparer(PreparedDbProvider.java:82) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.<init>(PreparedDbProvider.java:62) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.forPreparer(PreparedDbProvider.java:57) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.junit.PreparedDbRule.before(PreparedDbRule.java:55) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:46) [junit-4.12.jar:4.12]
	at org.junit.rules.RunRules.evaluate(RunRules.java:20) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) [junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190) [spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) [junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) [junit-rt.jar:?]
Caused by: java.net.SocketTimeoutException: connect timed out
	at java.net.PlainSocketImpl.waitForConnect(Native Method) ~[?:?]
	at java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:107) ~[?:?]
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224) ~[?:?]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403) ~[?:?]
	at java.net.Socket.connect(Socket.java:591) ~[?:?]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:339) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	... 17 more
10:25 LOG: INFO [a110c231-cf9f-4f1c-8f59-5768ab78bb31 postmaster startup finished in 00:00:00.833]
10:25 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
10:25 LOG: INFO [Flyway Community Edition 5.2.4 by Boxfuse]
10:25 LOG: INFO [Database: jdbc:postgresql://localhost:50256/template1 (PostgreSQL 10.6)]
10:25 LOG: DEBUG[Driver  : PostgreSQL JDBC Driver 42.2.5]
10:25 LOG: DEBUG[DDL Transactions Supported: true]
10:25 LOG: DEBUG[Schema: public]
10:25 LOG: DEBUG[Scanning for classpath resources at 'classpath:db/migration' ...]
10:25 LOG: DEBUG[Determining location urls for classpath:db/migration using ClassLoader jdk.internal.loader.ClassLoaders$AppClassLoader@6ed3ef1 ...]
10:25 LOG: DEBUG[Scanning URL: file:/C:/Users/valik/IdeaProjects/java-lab-task-1/target/classes/db/migration]
10:25 LOG: DEBUG[JBoss VFS v2 available: false]
10:25 LOG: DEBUG[Scanning starting at classpath root in filesystem: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\]
10:25 LOG: DEBUG[Scanning for resources in path: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\db\migration (db/migration)]
10:25 LOG: DEBUG[Found resource: db/migration/V1_1__init_data.sql]
10:25 LOG: DEBUG[Found resource: db/migration/V1__init_schema.sql]
10:25 LOG: DEBUG[Scanning for classes at classpath:db/migration]
10:25 LOG: DEBUG[Scanning for SQL callbacks ...]
10:25 LOG: DEBUG[Spring Jdbc available: true]
10:25 LOG: DEBUG[Validating migrations ...]
10:25 LOG: DEBUG[Parsing V1_1__init_data.sql ...]
10:25 LOG: DEBUG[Found statement at line 1: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
10:25 LOG: DEBUG[Found statement at line 2: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
10:25 LOG: DEBUG[Found statement at line 3: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
10:25 LOG: DEBUG[Found statement at line 4: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
10:25 LOG: DEBUG[Found statement at line 6: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test1', 4, 'test1', 1, 1, 'security')]
10:25 LOG: DEBUG[Found statement at line 7: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test2', 4, 'test2', 1, 1, 'security')]
10:25 LOG: DEBUG[Found statement at line 8: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test3', 4, 'test3', 1, 1, 'security')]
10:25 LOG: DEBUG[Found statement at line 9: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test4', 4, 'test4', 1, 1, 'security')]
10:25 LOG: DEBUG[Parsing V1__init_schema.sql ...]
10:25 LOG: DEBUG[Found statement at line 1: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
10:25 LOG: DEBUG[Found statement at line 8: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
10:25 LOG: DEBUG[Found statement at line 16: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
10:25 LOG: DEBUG[Found statement at line 24: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
10:25 LOG: DEBUG[Found statement at line 36: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
10:25 LOG: DEBUG[Found statement at line 43: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
10:25 LOG: DEBUG[Found statement at line 59: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
10:25 LOG: DEBUG[Found statement at line 68: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
10:25 LOG: DEBUG[Filtering out resource: db/migration/V1_1__init_data.sql (filename: V1_1__init_data.sql)]
10:25 LOG: DEBUG[Filtering out resource: db/migration/V1__init_schema.sql (filename: V1__init_schema.sql)]
10:25 LOG: INFO [Successfully validated 2 migrations (execution time 00:00.033s)]
10:25 LOG: DEBUG[Schema "public" already exists. Skipping schema creation.]
10:25 LOG: INFO [Creating Schema History table: "public"."flyway_schema_history"]
10:25 LOG: DEBUG[Parsing createMetaDataTable.sql ...]
10:25 LOG: DEBUG[Found statement at line 17: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
10:25 LOG: DEBUG[Found statement at line 29: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
10:25 LOG: DEBUG[Found statement at line 31: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
10:25 LOG: DEBUG[Executing SQL: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
10:25 LOG: DEBUG[Update Count: 0]
10:25 LOG: DEBUG[Executing SQL: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
10:25 LOG: DEBUG[Update Count: 0]
10:25 LOG: DEBUG[Executing SQL: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
10:25 LOG: DEBUG[Update Count: 0]
10:25 LOG: DEBUG[Created Schema History table: "public"."flyway_schema_history"]
10:25 LOG: INFO [Current version of schema "public": << Empty Schema >>]
10:25 LOG: INFO [Migrating schema "public" to version 1 - init schema]
10:25 LOG: DEBUG[Executing SQL: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
10:25 LOG: DEBUG[Update Count: 0]
10:25 LOG: DEBUG[Executing SQL: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
10:25 LOG: DEBUG[Update Count: 0]
10:25 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
10:25 LOG: DEBUG[Update Count: 0]
10:25 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
10:25 LOG: DEBUG[Update Count: 0]
10:25 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
10:25 LOG: DEBUG[Update Count: 0]
10:25 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
10:25 LOG: DEBUG[Update Count: 0]
10:25 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
10:25 LOG: DEBUG[Update Count: 0]
10:25 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
10:25 LOG: DEBUG[Update Count: 0]
10:25 LOG: DEBUG[Successfully completed migration of schema "public" to version 1 - init schema]
10:25 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
10:25 LOG: INFO [Migrating schema "public" to version 1.1 - init data]
10:25 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
10:25 LOG: DEBUG[Update Count: 1]
10:25 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
10:25 LOG: DEBUG[Update Count: 1]
10:25 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
10:25 LOG: DEBUG[Update Count: 1]
10:25 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
10:25 LOG: DEBUG[Update Count: 1]
10:25 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test1', 4, 'test1', 1, 1, 'security')]
10:25 LOG: DEBUG[Update Count: 1]
10:25 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test2', 4, 'test2', 1, 1, 'security')]
10:25 LOG: DEBUG[Update Count: 1]
10:25 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test3', 4, 'test3', 1, 1, 'security')]
10:25 LOG: DEBUG[Update Count: 1]
10:25 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test4', 4, 'test4', 1, 1, 'security')]
10:25 LOG: DEBUG[Update Count: 1]
10:25 LOG: DEBUG[Successfully completed migration of schema "public" to version 1.1 - init data]
10:25 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
10:25 LOG: INFO [Successfully applied 2 migrations to schema "public" (execution time 00:00.173s)]
10:25 LOG: DEBUG[Memory usage: 15 of 126M]
10:25 LOG: TRACE[beforeTestClass(): class [repository.HotelRepositoryTest]]
10:25 LOG: DEBUG[Before test class: context [DefaultTestContext@56e07a08 testClass = HotelRepositoryTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@35d6ca49 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].]
10:25 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [repository.HotelRepositoryTest]]
10:25 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [repository.HotelRepositoryTest]]
10:25 LOG: TRACE[prepareTestInstance(): instance [repository.HotelRepositoryTest@138fe6ec]]
10:25 LOG: DEBUG[Performing dependency injection for test context [[DefaultTestContext@56e07a08 testClass = HotelRepositoryTest, testInstance = repository.HotelRepositoryTest@138fe6ec, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@35d6ca49 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].]
10:25 LOG: DEBUG[Delegating to AnnotationConfigContextLoader to load context from [MergedContextConfiguration@35d6ca49 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].]
10:25 LOG: DEBUG[Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@35d6ca49 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].]
10:25 LOG: DEBUG[Activating profiles []]
10:25 LOG: DEBUG[Registering annotated classes: {class config.TestConfig}]
10:25 LOG: TRACE[Refreshing org.springframework.context.support.GenericApplicationContext@3f093abe, started on Wed Feb 20 10:25:35 MSK 2019]
10:25 LOG: DEBUG[Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor']
10:25 LOG: TRACE[Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor']
10:25 LOG: TRACE[Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references]
10:25 LOG: TRACE[Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor']
10:25 LOG: TRACE[Registering bean definition for @Bean method config.TestConfig.getDataSource()]
10:25 LOG: TRACE[Registering bean definition for @Bean method config.TestConfig.getJdbcTemplate()]
10:25 LOG: TRACE[Registering bean definition for @Bean method config.TestConfig.userRepository()]
10:25 LOG: TRACE[Registering bean definition for @Bean method config.TestConfig.hotelRepository()]
10:25 LOG: TRACE[Registering bean definition for @Bean method config.TestConfig.userDataContext()]
10:25 LOG: TRACE[Registering bean definition for @Bean method config.TestConfig.hotelDataContext()]
10:25 LOG: TRACE[Successfully enhanced config.TestConfig; enhanced class name is: config.TestConfig$$EnhancerBySpringCGLIB$$a83094b2]
10:25 LOG: TRACE[Replacing bean definition 'testConfig' existing class 'config.TestConfig' with enhanced class 'config.TestConfig$$EnhancerBySpringCGLIB$$a83094b2']
10:25 LOG: DEBUG[Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor']
10:25 LOG: TRACE[Creating instance of bean 'org.springframework.context.event.internalEventListenerProcessor']
10:25 LOG: TRACE[Eagerly caching bean 'org.springframework.context.event.internalEventListenerProcessor' to allow for resolving potential circular references]
10:25 LOG: TRACE[Finished creating instance of bean 'org.springframework.context.event.internalEventListenerProcessor']
10:25 LOG: DEBUG[Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory']
10:25 LOG: TRACE[Creating instance of bean 'org.springframework.context.event.internalEventListenerFactory']
10:25 LOG: TRACE[Eagerly caching bean 'org.springframework.context.event.internalEventListenerFactory' to allow for resolving potential circular references]
10:25 LOG: TRACE[Finished creating instance of bean 'org.springframework.context.event.internalEventListenerFactory']
10:25 LOG: DEBUG[Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor']
10:25 LOG: TRACE[Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor']
10:25 LOG: TRACE[Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references]
10:25 LOG: TRACE[Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor']
10:25 LOG: DEBUG[Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor']
10:25 LOG: TRACE[Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor']
10:25 LOG: TRACE[Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references]
10:25 LOG: TRACE[Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor']
10:25 LOG: TRACE[No 'messageSource' bean, using [Empty MessageSource]]
10:25 LOG: TRACE[No 'applicationEventMulticaster' bean, using [SimpleApplicationEventMulticaster]]
10:25 LOG: TRACE[Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@5d332969: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,testConfig,getDataSource,getJdbcTemplate,userRepository,hotelRepository,userDataContext,hotelDataContext]; root of factory hierarchy]
10:25 LOG: TRACE[Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor']
10:25 LOG: TRACE[Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor']
10:25 LOG: TRACE[Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor']
10:25 LOG: TRACE[Returning cached instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor']
10:25 LOG: TRACE[Returning cached instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory']
10:25 LOG: DEBUG[Creating shared instance of singleton bean 'testConfig']
10:25 LOG: TRACE[Creating instance of bean 'testConfig']
10:25 LOG: TRACE[Eagerly caching bean 'testConfig' to allow for resolving potential circular references]
10:25 LOG: TRACE[Finished creating instance of bean 'testConfig']
10:25 LOG: DEBUG[Creating shared instance of singleton bean 'getDataSource']
10:25 LOG: TRACE[Creating instance of bean 'getDataSource']
10:25 LOG: TRACE[Returning cached instance of singleton bean 'testConfig']
10:25 LOG: INFO [Starting embedded database: url='jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa']
10:25 LOG: DEBUG[Fetching JDBC Connection from DataSource]
10:25 LOG: DEBUG[Creating new JDBC Driver Connection to [jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false]]
10:25 LOG: DEBUG[Executing SQL script from class path resource [db/migration/V1__init_schema.sql]]
10:25 LOG: DEBUG[0 returned as update count for SQL: CREATE TYPE TOUR_TYPE AS ENUM ( 'bus', 'sightseeing', 'shore_excursion', 'adventure', 'sporting', 'cruise', 'escorted', 'guided', 'rail', 'extreme' )]
10:25 LOG: DEBUG[0 returned as update count for SQL: CREATE TYPE HOTEL_FEATURE AS ENUM ( 'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning', 'food_delivery', 'pool', 'conference_hall', 'safe' )]
10:25 LOG: DEBUG[0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS "user" ( id SERIAL, login VARCHAR(255) UNIQUE NOT NULL, password VARCHAR(255) NOT NULL, PRIMARY KEY (id) )]
10:25 LOG: DEBUG[0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS "hotel" ( id SERIAL, name VARCHAR(255) NOT NULL, stars SMALLINT NOT NULL, website VARCHAR(255) NOT NULL, latitude DECIMAL(8, 6) NOT NULL, longitude DECIMAL(8, 6) NOT NULL, feature HOTEL_FEATURE NOT NULL, PRIMARY KEY (id) )]
10:25 LOG: DEBUG[0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS "country" ( id SERIAL, name VARCHAR(255), PRIMARY KEY (id) )]
10:25 LOG: DEBUG[0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS "tour" ( id SERIAL, photo VARCHAR(255), date DATE NOT NULL, duration INT NOT NULL, description TEXT NOT NULL, cost DECIMAL(19, 3) NOT NULL, tour_type TOUR_TYPE NOT NULL, hotel_id INT NOT NULL, country_id INT NOT NULL, PRIMARY KEY (id), FOREIGN KEY (hotel_id) REFERENCES "hotel" (id), FOREIGN KEY (country_id) REFERENCES "country" (id) )]
10:25 LOG: DEBUG[0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS "usertour" ( user_id INT UNIQUE NOT NULL, tour_id INT UNIQUE NOT NULL, PRIMARY KEY (user_id, tour_id), FOREIGN KEY (user_id) REFERENCES "user" (id), FOREIGN KEY (tour_id) REFERENCES "tour" (id) )]
10:25 LOG: DEBUG[0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS "review" ( id SERIAL, date DATE NOT NULL, text TEXT NOT NULL, user_id INT NOT NULL, tour_id INT NOT NULL, PRIMARY KEY (id), FOREIGN KEY (user_id) REFERENCES "user" (id), FOREIGN KEY (tour_id) REFERENCES "tour" (id) ) ]
10:25 LOG: DEBUG[Executed SQL script from class path resource [db/migration/V1__init_schema.sql] in 58 ms.]
10:25 LOG: DEBUG[Executing SQL script from class path resource [db/migration/V1_1__init_data.sql]]
10:25 LOG: DEBUG[1 returned as update count for SQL: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
10:25 LOG: DEBUG[1 returned as update count for SQL: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
10:25 LOG: DEBUG[1 returned as update count for SQL: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
10:25 LOG: DEBUG[1 returned as update count for SQL: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
10:25 LOG: DEBUG[1 returned as update count for SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test1', 4, 'test1', 1, 1, 'security')]
10:25 LOG: DEBUG[1 returned as update count for SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test2', 4, 'test2', 1, 1, 'security')]
10:25 LOG: DEBUG[1 returned as update count for SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test3', 4, 'test3', 1, 1, 'security')]
10:25 LOG: DEBUG[1 returned as update count for SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test4', 4, 'test4', 1, 1, 'security')]
10:25 LOG: DEBUG[Executed SQL script from class path resource [db/migration/V1_1__init_data.sql] in 7 ms.]
10:25 LOG: TRACE[Eagerly caching bean 'getDataSource' to allow for resolving potential circular references]
10:25 LOG: TRACE[Finished creating instance of bean 'getDataSource']
10:25 LOG: DEBUG[Creating shared instance of singleton bean 'getJdbcTemplate']
10:25 LOG: TRACE[Creating instance of bean 'getJdbcTemplate']
10:25 LOG: TRACE[Returning cached instance of singleton bean 'testConfig']
10:25 LOG: TRACE[Returning cached instance of singleton bean 'getDataSource']
10:25 LOG: TRACE[Eagerly caching bean 'getJdbcTemplate' to allow for resolving potential circular references]
10:25 LOG: TRACE[Invoking afterPropertiesSet() on bean with name 'getJdbcTemplate']
10:25 LOG: TRACE[Finished creating instance of bean 'getJdbcTemplate']
10:25 LOG: DEBUG[Creating shared instance of singleton bean 'userRepository']
10:25 LOG: TRACE[Creating instance of bean 'userRepository']
10:25 LOG: TRACE[Returning cached instance of singleton bean 'testConfig']
10:25 LOG: TRACE[Loaded [org.springframework.beans.BeanInfoFactory] names: [org.springframework.beans.ExtendedBeanInfoFactory]]
10:25 LOG: TRACE[Getting BeanInfo for class [com.epam.travelagency.repository.UserRepository]]
10:25 LOG: TRACE[Caching PropertyDescriptors for class [com.epam.travelagency.repository.UserRepository]]
10:25 LOG: TRACE[Found bean property 'class' of type [java.lang.Class]]
10:25 LOG: TRACE[Found bean property 'dataContext' of type [com.epam.travelagency.storage.DataContext]]
10:25 LOG: TRACE[Registered injected element on class [com.epam.travelagency.repository.UserRepository]: AutowiredMethodElement for public void com.epam.travelagency.repository.Repository.setDataContext(com.epam.travelagency.storage.DataContext)]
10:25 LOG: TRACE[Eagerly caching bean 'userRepository' to allow for resolving potential circular references]
10:25 LOG: TRACE[Processing injected element of bean 'userRepository': AutowiredMethodElement for public void com.epam.travelagency.repository.Repository.setDataContext(com.epam.travelagency.storage.DataContext)]
10:25 LOG: DEBUG[Creating shared instance of singleton bean 'userDataContext']
10:25 LOG: TRACE[Creating instance of bean 'userDataContext']
10:25 LOG: TRACE[Returning cached instance of singleton bean 'testConfig']
10:25 LOG: TRACE[Returning cached instance of singleton bean 'getJdbcTemplate']
10:25 LOG: TRACE[Eagerly caching bean 'userDataContext' to allow for resolving potential circular references]
10:25 LOG: TRACE[Finished creating instance of bean 'userDataContext']
10:25 LOG: TRACE[Autowiring by type from bean name 'userRepository' to bean named 'userDataContext']
10:25 LOG: TRACE[Finished creating instance of bean 'userRepository']
10:25 LOG: DEBUG[Creating shared instance of singleton bean 'hotelRepository']
10:25 LOG: TRACE[Creating instance of bean 'hotelRepository']
10:25 LOG: TRACE[Returning cached instance of singleton bean 'testConfig']
10:25 LOG: TRACE[Getting BeanInfo for class [com.epam.travelagency.repository.HotelRepository]]
10:25 LOG: TRACE[Caching PropertyDescriptors for class [com.epam.travelagency.repository.HotelRepository]]
10:25 LOG: TRACE[Found bean property 'class' of type [java.lang.Class]]
10:25 LOG: TRACE[Found bean property 'dataContext' of type [com.epam.travelagency.storage.DataContext]]
10:25 LOG: TRACE[Registered injected element on class [com.epam.travelagency.repository.HotelRepository]: AutowiredMethodElement for public void com.epam.travelagency.repository.Repository.setDataContext(com.epam.travelagency.storage.DataContext)]
10:25 LOG: TRACE[Eagerly caching bean 'hotelRepository' to allow for resolving potential circular references]
10:25 LOG: TRACE[Processing injected element of bean 'hotelRepository': AutowiredMethodElement for public void com.epam.travelagency.repository.Repository.setDataContext(com.epam.travelagency.storage.DataContext)]
10:25 LOG: DEBUG[Creating shared instance of singleton bean 'hotelDataContext']
10:25 LOG: TRACE[Creating instance of bean 'hotelDataContext']
10:25 LOG: TRACE[Returning cached instance of singleton bean 'testConfig']
10:25 LOG: TRACE[Returning cached instance of singleton bean 'getJdbcTemplate']
10:25 LOG: TRACE[Eagerly caching bean 'hotelDataContext' to allow for resolving potential circular references]
10:25 LOG: TRACE[Finished creating instance of bean 'hotelDataContext']
10:25 LOG: TRACE[Autowiring by type from bean name 'hotelRepository' to bean named 'hotelDataContext']
10:25 LOG: TRACE[Finished creating instance of bean 'hotelRepository']
10:25 LOG: TRACE[Returning cached instance of singleton bean 'userDataContext']
10:25 LOG: TRACE[Returning cached instance of singleton bean 'hotelDataContext']
10:25 LOG: TRACE[No @EventListener annotations found on bean class: config.TestConfig$$EnhancerBySpringCGLIB$$a83094b2]
10:25 LOG: TRACE[No @EventListener annotations found on bean class: com.epam.travelagency.repository.UserRepository]
10:25 LOG: TRACE[No @EventListener annotations found on bean class: com.epam.travelagency.repository.HotelRepository]
10:25 LOG: TRACE[No @EventListener annotations found on bean class: com.epam.travelagency.storage.posgresql.UserDataContext]
10:25 LOG: TRACE[No @EventListener annotations found on bean class: com.epam.travelagency.storage.posgresql.HotelDataContext]
10:25 LOG: TRACE[No @EventListener annotations found on bean class: java.util.Properties]
10:25 LOG: TRACE[No @EventListener annotations found on bean class: java.util.Collections$UnmodifiableMap]
10:25 LOG: TRACE[No 'lifecycleProcessor' bean, using [DefaultLifecycleProcessor]]
10:25 LOG: TRACE[Returning cached instance of singleton bean 'lifecycleProcessor']
10:25 LOG: TRACE[Searching for key 'spring.liveBeansView.mbeanDomain' in PropertySource 'systemProperties']
10:25 LOG: TRACE[Searching for key 'spring.liveBeansView.mbeanDomain' in PropertySource 'systemEnvironment']
10:25 LOG: TRACE[Could not find key 'spring.liveBeansView.mbeanDomain' in any property source]
10:25 LOG: DEBUG[Storing ApplicationContext in cache under key [[MergedContextConfiguration@35d6ca49 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]]
10:25 LOG: DEBUG[Spring test ApplicationContext cache statistics: [DefaultContextCache@351e414e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 0, missCount = 1]]
10:25 LOG: TRACE[beforeTestMethod(): instance [repository.HotelRepositoryTest@138fe6ec], method [public void repository.HotelRepositoryTest.shouldBeReadCorrectly()]]
10:25 LOG: DEBUG[Before test method: context [DefaultTestContext@56e07a08 testClass = HotelRepositoryTest, testInstance = repository.HotelRepositoryTest@138fe6ec, testMethod = shouldBeReadCorrectly@HotelRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@35d6ca49 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].]
10:25 LOG: TRACE[beforeTestExecution(): instance [repository.HotelRepositoryTest@138fe6ec], method [public void repository.HotelRepositoryTest.shouldBeReadCorrectly()]]
10:25 LOG: DEBUG[Executing prepared SQL query]
10:25 LOG: DEBUG[Executing prepared SQL statement [SELECT id, name, stars, website, latitude, longitude, feature FROM hotel WHERE id=?]]
10:25 LOG: DEBUG[Fetching JDBC Connection from DataSource]
10:25 LOG: TRACE[Setting SQL statement parameter value: column index 1, parameter value [1], value class [java.lang.Integer], SQL type unknown]
10:25 LOG: TRACE[afterTestExecution(): instance [repository.HotelRepositoryTest@138fe6ec], method [public void repository.HotelRepositoryTest.shouldBeReadCorrectly()], exception [null]]
10:25 LOG: TRACE[afterTestMethod(): instance [repository.HotelRepositoryTest@138fe6ec], method [public void repository.HotelRepositoryTest.shouldBeReadCorrectly()], exception [null]]
10:25 LOG: DEBUG[After test method: context [DefaultTestContext@56e07a08 testClass = HotelRepositoryTest, testInstance = repository.HotelRepositoryTest@138fe6ec, testMethod = shouldBeReadCorrectly@HotelRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@35d6ca49 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].]
10:25 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [repository.HotelRepositoryTest]]
10:25 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [repository.HotelRepositoryTest]]
10:25 LOG: TRACE[prepareTestInstance(): instance [repository.HotelRepositoryTest@363f0ba0]]
10:25 LOG: DEBUG[Performing dependency injection for test context [[DefaultTestContext@56e07a08 testClass = HotelRepositoryTest, testInstance = repository.HotelRepositoryTest@363f0ba0, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@35d6ca49 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].]
10:25 LOG: DEBUG[Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@35d6ca49 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]]
10:25 LOG: DEBUG[Spring test ApplicationContext cache statistics: [DefaultContextCache@351e414e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 1, missCount = 1]]
10:25 LOG: TRACE[beforeTestMethod(): instance [repository.HotelRepositoryTest@363f0ba0], method [public void repository.HotelRepositoryTest.shouldReadAllEntries()]]
10:25 LOG: DEBUG[Before test method: context [DefaultTestContext@56e07a08 testClass = HotelRepositoryTest, testInstance = repository.HotelRepositoryTest@363f0ba0, testMethod = shouldReadAllEntries@HotelRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@35d6ca49 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].]
10:25 LOG: TRACE[beforeTestExecution(): instance [repository.HotelRepositoryTest@363f0ba0], method [public void repository.HotelRepositoryTest.shouldReadAllEntries()]]
10:25 LOG: DEBUG[Executing SQL query [SELECT id, name, stars, website, latitude, longitude, feature FROM hotel WHERE id=?]]
10:25 LOG: DEBUG[Fetching JDBC Connection from DataSource]
10:25 LOG: TRACE[Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]]
10:25 LOG: TRACE[Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]]
10:25 LOG: TRACE[Trying to resolve XML entity with public ID [-//SPRING//DTD BEAN 2.0//EN] and system ID [http://www.springframework.org/dtd/spring-beans-2.0.dtd]]
10:25 LOG: TRACE[Trying to locate [spring-beans.dtd] in Spring jar on classpath]
10:25 LOG: TRACE[Found beans DTD [http://www.springframework.org/dtd/spring-beans-2.0.dtd] in classpath: spring-beans.dtd]
10:25 LOG: TRACE[Alias definition 'Db2' registered for name 'DB2']
10:25 LOG: TRACE[Alias definition 'Hana' registered for name 'HDB']
10:25 LOG: TRACE[Alias definition 'Hsql' registered for name 'HSQL']
10:25 LOG: TRACE[Alias definition 'SqlServer' registered for name 'MS-SQL']
10:25 LOG: TRACE[Alias definition 'Postgres' registered for name 'PostgreSQL']
10:25 LOG: DEBUG[Loaded 11 bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]]
10:25 LOG: DEBUG[Creating shared instance of singleton bean 'DB2']
10:25 LOG: TRACE[Creating instance of bean 'DB2']
10:25 LOG: TRACE[Eagerly caching bean 'DB2' to allow for resolving potential circular references]
10:25 LOG: TRACE[Getting BeanInfo for class [org.springframework.jdbc.support.SQLErrorCodes]]
10:25 LOG: TRACE[Caching PropertyDescriptors for class [org.springframework.jdbc.support.SQLErrorCodes]]
10:25 LOG: TRACE[Found bean property 'badSqlGrammarCodes' of type [[Ljava.lang.String;]]
10:25 LOG: TRACE[Found bean property 'cannotAcquireLockCodes' of type [[Ljava.lang.String;]]
10:25 LOG: TRACE[Found bean property 'cannotSerializeTransactionCodes' of type [[Ljava.lang.String;]]
10:25 LOG: TRACE[Found bean property 'class' of type [java.lang.Class]]
10:25 LOG: TRACE[Found bean property 'customSqlExceptionTranslator' of type [org.springframework.jdbc.support.SQLExceptionTranslator]]
10:25 LOG: TRACE[Found bean property 'customSqlExceptionTranslatorClass' of type [java.lang.Class]]
10:25 LOG: TRACE[Found bean property 'customTranslations' of type [[Lorg.springframework.jdbc.support.CustomSQLErrorCodesTranslation;]]
10:25 LOG: TRACE[Found bean property 'dataAccessResourceFailureCodes' of type [[Ljava.lang.String;]]
10:25 LOG: TRACE[Found bean property 'dataIntegrityViolationCodes' of type [[Ljava.lang.String;]]
10:25 LOG: TRACE[Found bean property 'databaseProductName' of type [java.lang.String]]
10:25 LOG: TRACE[Found bean property 'databaseProductNames' of type [[Ljava.lang.String;]]
10:25 LOG: TRACE[Found bean property 'deadlockLoserCodes' of type [[Ljava.lang.String;]]
10:25 LOG: TRACE[Found bean property 'duplicateKeyCodes' of type [[Ljava.lang.String;]]
10:25 LOG: TRACE[Found bean property 'invalidResultSetAccessCodes' of type [[Ljava.lang.String;]]
10:25 LOG: TRACE[Found bean property 'permissionDeniedCodes' of type [[Ljava.lang.String;]]
10:25 LOG: TRACE[Found bean property 'transientDataAccessResourceCodes' of type [[Ljava.lang.String;]]
10:25 LOG: TRACE[Found bean property 'useSqlStateForTranslation' of type [boolean]]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@c6da8bb]]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@c6da8bb]]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@c6da8bb]]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@c6da8bb]]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@c6da8bb]]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@c6da8bb]]
10:25 LOG: TRACE[Finished creating instance of bean 'DB2']
10:25 LOG: DEBUG[Creating shared instance of singleton bean 'Derby']
10:25 LOG: TRACE[Creating instance of bean 'Derby']
10:25 LOG: TRACE[Eagerly caching bean 'Derby' to allow for resolving potential circular references]
10:25 LOG: TRACE[Converting String to [boolean] using property editor [org.springframework.beans.propertyeditors.CustomBooleanEditor@7e736350]]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@36b310aa]]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@36b310aa]]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@36b310aa]]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@36b310aa]]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@36b310aa]]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@36b310aa]]
10:25 LOG: TRACE[Finished creating instance of bean 'Derby']
10:25 LOG: DEBUG[Creating shared instance of singleton bean 'H2']
10:25 LOG: TRACE[Creating instance of bean 'H2']
10:25 LOG: TRACE[Eagerly caching bean 'H2' to allow for resolving potential circular references]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@76c387f9]]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@76c387f9]]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@76c387f9]]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@76c387f9]]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@76c387f9]]
10:25 LOG: TRACE[Finished creating instance of bean 'H2']
10:25 LOG: DEBUG[Creating shared instance of singleton bean 'HDB']
10:25 LOG: TRACE[Creating instance of bean 'HDB']
10:25 LOG: TRACE[Eagerly caching bean 'HDB' to allow for resolving potential circular references]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@1976f537]]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@1976f537]]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@1976f537]]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@1976f537]]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@1976f537]]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@1976f537]]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@1976f537]]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@1976f537]]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@1976f537]]
10:25 LOG: TRACE[Finished creating instance of bean 'HDB']
10:25 LOG: DEBUG[Creating shared instance of singleton bean 'HSQL']
10:25 LOG: TRACE[Creating instance of bean 'HSQL']
10:25 LOG: TRACE[Eagerly caching bean 'HSQL' to allow for resolving potential circular references]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@45f421c]]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@45f421c]]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@45f421c]]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@45f421c]]
10:25 LOG: TRACE[Finished creating instance of bean 'HSQL']
10:25 LOG: DEBUG[Creating shared instance of singleton bean 'Informix']
10:25 LOG: TRACE[Creating instance of bean 'Informix']
10:25 LOG: TRACE[Eagerly caching bean 'Informix' to allow for resolving potential circular references]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@1816e24a]]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@1816e24a]]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@1816e24a]]
10:25 LOG: TRACE[Finished creating instance of bean 'Informix']
10:25 LOG: DEBUG[Creating shared instance of singleton bean 'MS-SQL']
10:25 LOG: TRACE[Creating instance of bean 'MS-SQL']
10:25 LOG: TRACE[Eagerly caching bean 'MS-SQL' to allow for resolving potential circular references]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@6940f685]]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@6940f685]]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@6940f685]]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@6940f685]]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@6940f685]]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@6940f685]]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@6940f685]]
10:25 LOG: TRACE[Finished creating instance of bean 'MS-SQL']
10:25 LOG: DEBUG[Creating shared instance of singleton bean 'MySQL']
10:25 LOG: TRACE[Creating instance of bean 'MySQL']
10:25 LOG: TRACE[Eagerly caching bean 'MySQL' to allow for resolving potential circular references]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@47b179d7]]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@47b179d7]]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@47b179d7]]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@47b179d7]]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@47b179d7]]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@47b179d7]]
10:25 LOG: TRACE[Finished creating instance of bean 'MySQL']
10:25 LOG: DEBUG[Creating shared instance of singleton bean 'Oracle']
10:25 LOG: TRACE[Creating instance of bean 'Oracle']
10:25 LOG: TRACE[Eagerly caching bean 'Oracle' to allow for resolving potential circular references]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@39008c9f]]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@39008c9f]]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@39008c9f]]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@39008c9f]]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@39008c9f]]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@39008c9f]]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@39008c9f]]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@39008c9f]]
10:25 LOG: TRACE[Finished creating instance of bean 'Oracle']
10:25 LOG: DEBUG[Creating shared instance of singleton bean 'PostgreSQL']
10:25 LOG: TRACE[Creating instance of bean 'PostgreSQL']
10:25 LOG: TRACE[Eagerly caching bean 'PostgreSQL' to allow for resolving potential circular references]
10:25 LOG: TRACE[Converting String to [boolean] using property editor [org.springframework.beans.propertyeditors.CustomBooleanEditor@162b3d47]]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@783115d9]]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@783115d9]]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@783115d9]]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@783115d9]]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@783115d9]]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@783115d9]]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@783115d9]]
10:25 LOG: TRACE[Finished creating instance of bean 'PostgreSQL']
10:25 LOG: DEBUG[Creating shared instance of singleton bean 'Sybase']
10:25 LOG: TRACE[Creating instance of bean 'Sybase']
10:25 LOG: TRACE[Eagerly caching bean 'Sybase' to allow for resolving potential circular references]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@3402b4c9]]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@3402b4c9]]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@3402b4c9]]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@3402b4c9]]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@3402b4c9]]
10:25 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@3402b4c9]]
10:25 LOG: TRACE[Finished creating instance of bean 'Sybase']
10:25 LOG: TRACE[SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]]
10:25 LOG: DEBUG[Looking up default SQLErrorCodes for DataSource [org.postgresql.ds.PGSimpleDataSource@95bb2a2]]
10:25 LOG: DEBUG[Fetching JDBC Connection from DataSource]
10:25 LOG: DEBUG[SQL error codes for 'PostgreSQL' found]
10:25 LOG: DEBUG[Caching SQL error codes for DataSource [org.postgresql.ds.PGSimpleDataSource@95bb2a2]: database product name is 'PostgreSQL']
10:25 LOG: DEBUG[Unable to translate SQLException with SQL state '42883', error code '0, will now try the fallback translator]
10:25 LOG: DEBUG[Extracted SQL state class '42' from value '42883']
10:25 LOG: TRACE[afterTestExecution(): instance [repository.HotelRepositoryTest@363f0ba0], method [public void repository.HotelRepositoryTest.shouldReadAllEntries()], exception [org.springframework.jdbc.BadSqlGrammarException: StatementCallback; bad SQL grammar [SELECT id, name, stars, website, latitude, longitude, feature FROM hotel WHERE id=?]; nested exception is org.postgresql.util.PSQLException: ОШИБКА: оператор не существует: integer =?
  Подсказка: Оператор с данными именем и типами аргументов не найден. Возможно, вам следует добавить явные приведения типов.
  Позиция: 82]]
10:25 LOG: TRACE[afterTestMethod(): instance [repository.HotelRepositoryTest@363f0ba0], method [public void repository.HotelRepositoryTest.shouldReadAllEntries()], exception [org.springframework.jdbc.BadSqlGrammarException: StatementCallback; bad SQL grammar [SELECT id, name, stars, website, latitude, longitude, feature FROM hotel WHERE id=?]; nested exception is org.postgresql.util.PSQLException: ОШИБКА: оператор не существует: integer =?
  Подсказка: Оператор с данными именем и типами аргументов не найден. Возможно, вам следует добавить явные приведения типов.
  Позиция: 82]]
10:25 LOG: DEBUG[After test method: context [DefaultTestContext@56e07a08 testClass = HotelRepositoryTest, testInstance = repository.HotelRepositoryTest@363f0ba0, testMethod = shouldReadAllEntries@HotelRepositoryTest, testException = org.springframework.jdbc.BadSqlGrammarException: StatementCallback; bad SQL grammar [SELECT id, name, stars, website, latitude, longitude, feature FROM hotel WHERE id=?]; nested exception is org.postgresql.util.PSQLException: ОШИБКА: оператор не существует: integer =?
  Подсказка: Оператор с данными именем и типами аргументов не найден. Возможно, вам следует добавить явные приведения типов.
  Позиция: 82, mergedContextConfiguration = [MergedContextConfiguration@35d6ca49 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].]
10:25 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [repository.HotelRepositoryTest]]
10:25 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [repository.HotelRepositoryTest]]
10:25 LOG: TRACE[prepareTestInstance(): instance [repository.HotelRepositoryTest@6107165]]
10:25 LOG: DEBUG[Performing dependency injection for test context [[DefaultTestContext@56e07a08 testClass = HotelRepositoryTest, testInstance = repository.HotelRepositoryTest@6107165, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@35d6ca49 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].]
10:25 LOG: DEBUG[Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@35d6ca49 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]]
10:25 LOG: DEBUG[Spring test ApplicationContext cache statistics: [DefaultContextCache@351e414e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 2, missCount = 1]]
10:25 LOG: TRACE[beforeTestMethod(): instance [repository.HotelRepositoryTest@6107165], method [public void repository.HotelRepositoryTest.shouldBeCreated()]]
10:25 LOG: DEBUG[Before test method: context [DefaultTestContext@56e07a08 testClass = HotelRepositoryTest, testInstance = repository.HotelRepositoryTest@6107165, testMethod = shouldBeCreated@HotelRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@35d6ca49 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].]
10:25 LOG: TRACE[beforeTestExecution(): instance [repository.HotelRepositoryTest@6107165], method [public void repository.HotelRepositoryTest.shouldBeCreated()]]
10:25 LOG: DEBUG[Executing prepared SQL update]
10:25 LOG: DEBUG[Executing prepared SQL statement [INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES (?,?,?,?,?,?::hotel_feature)]]
10:25 LOG: DEBUG[Fetching JDBC Connection from DataSource]
10:25 LOG: TRACE[SQL update affected 1 rows]
10:25 LOG: DEBUG[Executing prepared SQL query]
10:25 LOG: DEBUG[Executing prepared SQL statement [SELECT id, name, stars, website, latitude, longitude, feature FROM hotel WHERE id=?]]
10:25 LOG: DEBUG[Fetching JDBC Connection from DataSource]
10:25 LOG: TRACE[Setting SQL statement parameter value: column index 1, parameter value [5], value class [java.lang.Integer], SQL type unknown]
10:25 LOG: TRACE[afterTestExecution(): instance [repository.HotelRepositoryTest@6107165], method [public void repository.HotelRepositoryTest.shouldBeCreated()], exception [null]]
10:25 LOG: TRACE[afterTestMethod(): instance [repository.HotelRepositoryTest@6107165], method [public void repository.HotelRepositoryTest.shouldBeCreated()], exception [null]]
10:25 LOG: DEBUG[After test method: context [DefaultTestContext@56e07a08 testClass = HotelRepositoryTest, testInstance = repository.HotelRepositoryTest@6107165, testMethod = shouldBeCreated@HotelRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@35d6ca49 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].]
10:25 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [repository.HotelRepositoryTest]]
10:25 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [repository.HotelRepositoryTest]]
10:25 LOG: TRACE[prepareTestInstance(): instance [repository.HotelRepositoryTest@f3021cb]]
10:25 LOG: DEBUG[Performing dependency injection for test context [[DefaultTestContext@56e07a08 testClass = HotelRepositoryTest, testInstance = repository.HotelRepositoryTest@f3021cb, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@35d6ca49 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].]
10:25 LOG: DEBUG[Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@35d6ca49 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]]
10:25 LOG: DEBUG[Spring test ApplicationContext cache statistics: [DefaultContextCache@351e414e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 3, missCount = 1]]
10:25 LOG: TRACE[beforeTestMethod(): instance [repository.HotelRepositoryTest@f3021cb], method [public void repository.HotelRepositoryTest.shouldBeDeleted()]]
10:25 LOG: DEBUG[Before test method: context [DefaultTestContext@56e07a08 testClass = HotelRepositoryTest, testInstance = repository.HotelRepositoryTest@f3021cb, testMethod = shouldBeDeleted@HotelRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@35d6ca49 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].]
10:25 LOG: TRACE[beforeTestExecution(): instance [repository.HotelRepositoryTest@f3021cb], method [public void repository.HotelRepositoryTest.shouldBeDeleted()]]
10:25 LOG: DEBUG[Executing prepared SQL update]
10:25 LOG: DEBUG[Executing prepared SQL statement [DELETE FROM hotel where id=?]]
10:25 LOG: DEBUG[Fetching JDBC Connection from DataSource]
10:25 LOG: TRACE[Setting SQL statement parameter value: column index 1, parameter value [1], value class [java.lang.Integer], SQL type unknown]
10:25 LOG: TRACE[SQL update affected 1 rows]
10:25 LOG: DEBUG[Executing prepared SQL query]
10:25 LOG: DEBUG[Executing prepared SQL statement [SELECT id, name, stars, website, latitude, longitude, feature FROM hotel WHERE id=?]]
10:25 LOG: DEBUG[Fetching JDBC Connection from DataSource]
10:25 LOG: TRACE[Setting SQL statement parameter value: column index 1, parameter value [1], value class [java.lang.Integer], SQL type unknown]
10:25 LOG: TRACE[afterTestExecution(): instance [repository.HotelRepositoryTest@f3021cb], method [public void repository.HotelRepositoryTest.shouldBeDeleted()], exception [org.springframework.dao.EmptyResultDataAccessException: Incorrect result size: expected 1, actual 0]]
10:25 LOG: TRACE[afterTestMethod(): instance [repository.HotelRepositoryTest@f3021cb], method [public void repository.HotelRepositoryTest.shouldBeDeleted()], exception [null]]
10:25 LOG: DEBUG[After test method: context [DefaultTestContext@56e07a08 testClass = HotelRepositoryTest, testInstance = repository.HotelRepositoryTest@f3021cb, testMethod = shouldBeDeleted@HotelRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@35d6ca49 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].]
10:25 LOG: TRACE[afterTestClass(): class [repository.HotelRepositoryTest]]
10:25 LOG: DEBUG[After test class: context [DefaultTestContext@56e07a08 testClass = HotelRepositoryTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@35d6ca49 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].]
10:25 LOG: DEBUG[Closing org.springframework.context.support.GenericApplicationContext@3f093abe, started on Wed Feb 20 10:25:35 MSK 2019]
10:25 LOG: TRACE[Returning cached instance of singleton bean 'lifecycleProcessor']
10:25 LOG: TRACE[Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@5d332969: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,testConfig,getDataSource,getJdbcTemplate,userRepository,hotelRepository,userDataContext,hotelDataContext]; root of factory hierarchy]
10:26 LOG: DEBUG[SpringJUnit4ClassRunner constructor called with [class repository.HotelRepositoryTest]]
10:26 LOG: DEBUG[Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]]
10:26 LOG: DEBUG[Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]]
10:26 LOG: DEBUG[Instantiating TestContextBootstrapper for test class [repository.HotelRepositoryTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]]
10:26 LOG: TRACE[Retrieved @ContextConfiguration [@org.springframework.test.context.ContextConfiguration(locations=[], inheritInitializers=true, inheritLocations=true, initializers=[], name=, value=[], loader=interface org.springframework.test.context.ContextLoader, classes=[class config.TestConfig])] for declaring class [repository.HotelRepositoryTest].]
10:26 LOG: TRACE[Resolved context configuration attributes: [ContextConfigurationAttributes@8c3619e declaringClass = 'repository.HotelRepositoryTest', classes = '{class config.TestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']]
10:26 LOG: TRACE[Resolving ContextLoader for context configuration attributes [ContextConfigurationAttributes@8c3619e declaringClass = 'repository.HotelRepositoryTest', classes = '{class config.TestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']]
10:26 LOG: TRACE[Using ContextLoader class [org.springframework.test.context.support.DelegatingSmartContextLoader] for test class [repository.HotelRepositoryTest]]
10:26 LOG: TRACE[Processing locations and classes for context configuration attributes [ContextConfigurationAttributes@8c3619e declaringClass = 'repository.HotelRepositoryTest', classes = '{class config.TestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']]
10:26 LOG: DEBUG[Delegating to AnnotationConfigContextLoader to process context configuration [ContextConfigurationAttributes@8c3619e declaringClass = 'repository.HotelRepositoryTest', classes = '{class config.TestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].]
10:26 LOG: TRACE[Loaded [org.springframework.test.context.ContextCustomizerFactory] names: [org.springframework.test.context.web.socket.MockServerContainerContextCustomizerFactory]]
10:26 LOG: TRACE[Processing context initializers for configuration attributes [ContextConfigurationAttributes@8c3619e declaringClass = 'repository.HotelRepositoryTest', classes = '{class config.TestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']]
10:26 LOG: DEBUG[Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [repository.HotelRepositoryTest]]
10:26 LOG: DEBUG[@TestExecutionListeners is not present for class [repository.HotelRepositoryTest]: using defaults.]
10:26 LOG: INFO [Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]]
10:26 LOG: DEBUG[Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]]
10:26 LOG: INFO [Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@5f0e9815, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@76884e4b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@126945f9, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2a898881, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@16c63f5]]
10:26 LOG: TRACE[Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@5f0e9815]
10:26 LOG: TRACE[Registering TestExecutionListener: org.springframework.test.context.support.DependencyInjectionTestExecutionListener@76884e4b]
10:26 LOG: TRACE[Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextTestExecutionListener@126945f9]
10:26 LOG: TRACE[Registering TestExecutionListener: org.springframework.test.context.transaction.TransactionalTestExecutionListener@2a898881]
10:26 LOG: TRACE[Registering TestExecutionListener: org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@16c63f5]
10:26 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [repository.HotelRepositoryTest]]
10:26 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [repository.HotelRepositoryTest]]
10:26 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [repository.HotelRepositoryTest]]
10:26 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [repository.HotelRepositoryTest]]
10:26 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [repository.HotelRepositoryTest]]
10:26 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [repository.HotelRepositoryTest]]
10:26 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [repository.HotelRepositoryTest]]
10:26 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [repository.HotelRepositoryTest]]
10:26 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
10:26 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [repository.HotelRepositoryTest]]
10:26 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [repository.HotelRepositoryTest]]
10:26 LOG: INFO [Detected a Windows x86_64 system]
10:26 LOG: INFO [Postgres binaries at C:\Users\valik\AppData\Local\Temp\embedded-pg\PG-91c1fa33789b0c913345bf0253da6836]
10:26 LOG: TRACE[9e43f3b8-2426-497a-8136-955f013d14b0 postgres data directory is C:\Users\valik\AppData\Local\Temp\epg14849766183133322108]
10:26 LOG: INFO [The files belonging to this database system will be owned by user "valik".]
10:26 LOG: INFO [This user must also own the server process.]
10:26 LOG: INFO []
10:26 LOG: INFO [The database cluster will be initialized with locale "Russian_Belarus.1251".]
10:26 LOG: INFO [The default text search configuration will be set to "russian".]
10:26 LOG: INFO []
10:26 LOG: INFO [Data page checksums are disabled.]
10:26 LOG: INFO []
10:26 LOG: INFO [fixing permissions on existing directory C:/Users/valik/AppData/Local/Temp/epg14849766183133322108 ... ok]
10:26 LOG: INFO [creating subdirectories ... ok]
10:26 LOG: INFO [selecting default max_connections ... 100]
10:26 LOG: INFO [selecting default shared_buffers ... 128MB]
10:26 LOG: INFO [selecting dynamic shared memory implementation ... windows]
10:26 LOG: INFO [creating configuration files ... ok]
10:26 LOG: INFO [running bootstrap script ... ok]
10:26 LOG: INFO [performing post-bootstrap initialization ... ok]
10:26 LOG: INFO [syncing data to disk ... ok]
10:26 LOG: INFO []
10:26 LOG: INFO [Success. You can now start the database server using:]
10:26 LOG: INFO []
10:26 LOG: INFO [    C:/Users/valik/AppData/Local/Temp/embedded-pg/PG-91c1fa33789b0c913345bf0253da6836/bin/pg_ctl -D ^"C^:^\Users^\valik^\AppData^\Local^\Temp^\epg14849766183133322108^" -l logfile start]
10:26 LOG: INFO []
10:26 LOG: INFO [9e43f3b8-2426-497a-8136-955f013d14b0 initdb completed in 00:00:07.330]
10:26 LOG: INFO [9e43f3b8-2426-497a-8136-955f013d14b0 postmaster started as Process[pid=2664, exitValue="not exited"] on port 50285.  Waiting up to PT10S for server startup to finish.]
10:26 LOG: INFO [waiting for server to start....2019-02-20 10:26:28.675 +03 [3636] ���������:  ��� ����� ����������� �� ������ IPv6 "::1" ������ ���� 50285]
10:26 LOG: INFO [2019-02-20 10:26:28.675 +03 [3636] ���������:  ��� ����� ����������� �� ������ IPv4 "127.0.0.1" ������ ���� 50285]
10:26 LOG: INFO [2019-02-20 10:26:28.753 +03 [8264] ���������:  ������� �� ���� ���������: 2019-02-20 10:26:27 +03]
10:26 LOG: INFO [2019-02-20 10:26:28.806 +03 [3636] ���������:  ������� �� ������ ��������� �����������]
10:26 LOG: INFO [ done]
10:26 LOG: TRACE[While waiting for server startup]
java.sql.SQLException: connect failed
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:341) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.waitForServerStartup(EmbeddedPostgres.java:315) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.startPostmaster(EmbeddedPostgres.java:275) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.<init>(EmbeddedPostgres.java:162) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres$Builder.start(EmbeddedPostgres.java:580) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.createOrFindPreparer(PreparedDbProvider.java:82) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.<init>(PreparedDbProvider.java:62) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.forPreparer(PreparedDbProvider.java:57) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.junit.PreparedDbRule.before(PreparedDbRule.java:55) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:46) [junit-4.12.jar:4.12]
	at org.junit.rules.RunRules.evaluate(RunRules.java:20) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) [junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190) [spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) [junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) [junit-rt.jar:?]
Caused by: java.net.SocketTimeoutException: connect timed out
	at java.net.PlainSocketImpl.waitForConnect(Native Method) ~[?:?]
	at java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:107) ~[?:?]
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224) ~[?:?]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403) ~[?:?]
	at java.net.Socket.connect(Socket.java:591) ~[?:?]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:339) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	... 17 more
10:26 LOG: INFO [9e43f3b8-2426-497a-8136-955f013d14b0 postmaster startup finished in 00:00:00.810]
10:26 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
10:26 LOG: INFO [Flyway Community Edition 5.2.4 by Boxfuse]
10:26 LOG: INFO [Database: jdbc:postgresql://localhost:50285/template1 (PostgreSQL 10.6)]
10:26 LOG: DEBUG[Driver  : PostgreSQL JDBC Driver 42.2.5]
10:26 LOG: DEBUG[DDL Transactions Supported: true]
10:26 LOG: DEBUG[Schema: public]
10:26 LOG: DEBUG[Scanning for classpath resources at 'classpath:db/migration' ...]
10:26 LOG: DEBUG[Determining location urls for classpath:db/migration using ClassLoader jdk.internal.loader.ClassLoaders$AppClassLoader@6ed3ef1 ...]
10:26 LOG: DEBUG[Scanning URL: file:/C:/Users/valik/IdeaProjects/java-lab-task-1/target/classes/db/migration]
10:26 LOG: DEBUG[JBoss VFS v2 available: false]
10:26 LOG: DEBUG[Scanning starting at classpath root in filesystem: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\]
10:26 LOG: DEBUG[Scanning for resources in path: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\db\migration (db/migration)]
10:26 LOG: DEBUG[Found resource: db/migration/V1_1__init_data.sql]
10:26 LOG: DEBUG[Found resource: db/migration/V1__init_schema.sql]
10:26 LOG: DEBUG[Scanning for classes at classpath:db/migration]
10:26 LOG: DEBUG[Scanning for SQL callbacks ...]
10:26 LOG: DEBUG[Spring Jdbc available: true]
10:26 LOG: DEBUG[Validating migrations ...]
10:26 LOG: DEBUG[Parsing V1_1__init_data.sql ...]
10:26 LOG: DEBUG[Found statement at line 1: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
10:26 LOG: DEBUG[Found statement at line 2: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
10:26 LOG: DEBUG[Found statement at line 3: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
10:26 LOG: DEBUG[Found statement at line 4: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
10:26 LOG: DEBUG[Found statement at line 6: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test1', 4, 'test1', 1, 1, 'security')]
10:26 LOG: DEBUG[Found statement at line 7: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test2', 4, 'test2', 1, 1, 'security')]
10:26 LOG: DEBUG[Found statement at line 8: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test3', 4, 'test3', 1, 1, 'security')]
10:26 LOG: DEBUG[Found statement at line 9: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test4', 4, 'test4', 1, 1, 'security')]
10:26 LOG: DEBUG[Parsing V1__init_schema.sql ...]
10:26 LOG: DEBUG[Found statement at line 1: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
10:26 LOG: DEBUG[Found statement at line 8: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
10:26 LOG: DEBUG[Found statement at line 16: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
10:26 LOG: DEBUG[Found statement at line 24: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
10:26 LOG: DEBUG[Found statement at line 36: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
10:26 LOG: DEBUG[Found statement at line 43: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
10:26 LOG: DEBUG[Found statement at line 59: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
10:26 LOG: DEBUG[Found statement at line 68: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
10:26 LOG: DEBUG[Filtering out resource: db/migration/V1_1__init_data.sql (filename: V1_1__init_data.sql)]
10:26 LOG: DEBUG[Filtering out resource: db/migration/V1__init_schema.sql (filename: V1__init_schema.sql)]
10:26 LOG: INFO [Successfully validated 2 migrations (execution time 00:00.033s)]
10:26 LOG: DEBUG[Schema "public" already exists. Skipping schema creation.]
10:26 LOG: INFO [Creating Schema History table: "public"."flyway_schema_history"]
10:26 LOG: DEBUG[Parsing createMetaDataTable.sql ...]
10:26 LOG: DEBUG[Found statement at line 17: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
10:26 LOG: DEBUG[Found statement at line 29: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
10:26 LOG: DEBUG[Found statement at line 31: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
10:26 LOG: DEBUG[Executing SQL: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
10:26 LOG: DEBUG[Update Count: 0]
10:26 LOG: DEBUG[Executing SQL: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
10:26 LOG: DEBUG[Update Count: 0]
10:26 LOG: DEBUG[Executing SQL: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
10:26 LOG: DEBUG[Update Count: 0]
10:26 LOG: DEBUG[Created Schema History table: "public"."flyway_schema_history"]
10:26 LOG: INFO [Current version of schema "public": << Empty Schema >>]
10:26 LOG: INFO [Migrating schema "public" to version 1 - init schema]
10:26 LOG: DEBUG[Executing SQL: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
10:26 LOG: DEBUG[Update Count: 0]
10:26 LOG: DEBUG[Executing SQL: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
10:26 LOG: DEBUG[Update Count: 0]
10:26 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
10:26 LOG: DEBUG[Update Count: 0]
10:26 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
10:26 LOG: DEBUG[Update Count: 0]
10:26 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
10:26 LOG: DEBUG[Update Count: 0]
10:26 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
10:26 LOG: DEBUG[Update Count: 0]
10:26 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
10:26 LOG: DEBUG[Update Count: 0]
10:26 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
10:26 LOG: DEBUG[Update Count: 0]
10:26 LOG: DEBUG[Successfully completed migration of schema "public" to version 1 - init schema]
10:26 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
10:26 LOG: INFO [Migrating schema "public" to version 1.1 - init data]
10:26 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
10:26 LOG: DEBUG[Update Count: 1]
10:26 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
10:26 LOG: DEBUG[Update Count: 1]
10:26 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
10:26 LOG: DEBUG[Update Count: 1]
10:26 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
10:26 LOG: DEBUG[Update Count: 1]
10:26 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test1', 4, 'test1', 1, 1, 'security')]
10:26 LOG: DEBUG[Update Count: 1]
10:26 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test2', 4, 'test2', 1, 1, 'security')]
10:26 LOG: DEBUG[Update Count: 1]
10:26 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test3', 4, 'test3', 1, 1, 'security')]
10:26 LOG: DEBUG[Update Count: 1]
10:26 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test4', 4, 'test4', 1, 1, 'security')]
10:26 LOG: DEBUG[Update Count: 1]
10:26 LOG: DEBUG[Successfully completed migration of schema "public" to version 1.1 - init data]
10:26 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
10:26 LOG: INFO [Successfully applied 2 migrations to schema "public" (execution time 00:00.169s)]
10:26 LOG: DEBUG[Memory usage: 15 of 126M]
10:26 LOG: TRACE[beforeTestClass(): class [repository.HotelRepositoryTest]]
10:26 LOG: DEBUG[Before test class: context [DefaultTestContext@56e07a08 testClass = HotelRepositoryTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@35d6ca49 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].]
10:26 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [repository.HotelRepositoryTest]]
10:26 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [repository.HotelRepositoryTest]]
10:26 LOG: TRACE[prepareTestInstance(): instance [repository.HotelRepositoryTest@138fe6ec]]
10:26 LOG: DEBUG[Performing dependency injection for test context [[DefaultTestContext@56e07a08 testClass = HotelRepositoryTest, testInstance = repository.HotelRepositoryTest@138fe6ec, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@35d6ca49 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].]
10:26 LOG: DEBUG[Delegating to AnnotationConfigContextLoader to load context from [MergedContextConfiguration@35d6ca49 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].]
10:26 LOG: DEBUG[Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@35d6ca49 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].]
10:26 LOG: DEBUG[Activating profiles []]
10:26 LOG: DEBUG[Registering annotated classes: {class config.TestConfig}]
10:26 LOG: TRACE[Refreshing org.springframework.context.support.GenericApplicationContext@3f093abe, started on Wed Feb 20 10:26:31 MSK 2019]
10:26 LOG: DEBUG[Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor']
10:26 LOG: TRACE[Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor']
10:26 LOG: TRACE[Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references]
10:26 LOG: TRACE[Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor']
10:26 LOG: TRACE[Registering bean definition for @Bean method config.TestConfig.getDataSource()]
10:26 LOG: TRACE[Registering bean definition for @Bean method config.TestConfig.getJdbcTemplate()]
10:26 LOG: TRACE[Registering bean definition for @Bean method config.TestConfig.userRepository()]
10:26 LOG: TRACE[Registering bean definition for @Bean method config.TestConfig.hotelRepository()]
10:26 LOG: TRACE[Registering bean definition for @Bean method config.TestConfig.userDataContext()]
10:26 LOG: TRACE[Registering bean definition for @Bean method config.TestConfig.hotelDataContext()]
10:26 LOG: TRACE[Successfully enhanced config.TestConfig; enhanced class name is: config.TestConfig$$EnhancerBySpringCGLIB$$a83094b2]
10:26 LOG: TRACE[Replacing bean definition 'testConfig' existing class 'config.TestConfig' with enhanced class 'config.TestConfig$$EnhancerBySpringCGLIB$$a83094b2']
10:26 LOG: DEBUG[Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor']
10:26 LOG: TRACE[Creating instance of bean 'org.springframework.context.event.internalEventListenerProcessor']
10:26 LOG: TRACE[Eagerly caching bean 'org.springframework.context.event.internalEventListenerProcessor' to allow for resolving potential circular references]
10:26 LOG: TRACE[Finished creating instance of bean 'org.springframework.context.event.internalEventListenerProcessor']
10:26 LOG: DEBUG[Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory']
10:26 LOG: TRACE[Creating instance of bean 'org.springframework.context.event.internalEventListenerFactory']
10:26 LOG: TRACE[Eagerly caching bean 'org.springframework.context.event.internalEventListenerFactory' to allow for resolving potential circular references]
10:26 LOG: TRACE[Finished creating instance of bean 'org.springframework.context.event.internalEventListenerFactory']
10:26 LOG: DEBUG[Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor']
10:26 LOG: TRACE[Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor']
10:26 LOG: TRACE[Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references]
10:26 LOG: TRACE[Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor']
10:26 LOG: DEBUG[Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor']
10:26 LOG: TRACE[Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor']
10:26 LOG: TRACE[Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references]
10:26 LOG: TRACE[Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor']
10:26 LOG: TRACE[No 'messageSource' bean, using [Empty MessageSource]]
10:26 LOG: TRACE[No 'applicationEventMulticaster' bean, using [SimpleApplicationEventMulticaster]]
10:26 LOG: TRACE[Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@5d332969: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,testConfig,getDataSource,getJdbcTemplate,userRepository,hotelRepository,userDataContext,hotelDataContext]; root of factory hierarchy]
10:26 LOG: TRACE[Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor']
10:26 LOG: TRACE[Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor']
10:26 LOG: TRACE[Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor']
10:26 LOG: TRACE[Returning cached instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor']
10:26 LOG: TRACE[Returning cached instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory']
10:26 LOG: DEBUG[Creating shared instance of singleton bean 'testConfig']
10:26 LOG: TRACE[Creating instance of bean 'testConfig']
10:26 LOG: TRACE[Eagerly caching bean 'testConfig' to allow for resolving potential circular references]
10:26 LOG: TRACE[Finished creating instance of bean 'testConfig']
10:26 LOG: DEBUG[Creating shared instance of singleton bean 'getDataSource']
10:26 LOG: TRACE[Creating instance of bean 'getDataSource']
10:26 LOG: TRACE[Returning cached instance of singleton bean 'testConfig']
10:26 LOG: INFO [Starting embedded database: url='jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa']
10:26 LOG: DEBUG[Fetching JDBC Connection from DataSource]
10:26 LOG: DEBUG[Creating new JDBC Driver Connection to [jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false]]
10:26 LOG: DEBUG[Executing SQL script from class path resource [db/migration/V1__init_schema.sql]]
10:26 LOG: DEBUG[0 returned as update count for SQL: CREATE TYPE TOUR_TYPE AS ENUM ( 'bus', 'sightseeing', 'shore_excursion', 'adventure', 'sporting', 'cruise', 'escorted', 'guided', 'rail', 'extreme' )]
10:26 LOG: DEBUG[0 returned as update count for SQL: CREATE TYPE HOTEL_FEATURE AS ENUM ( 'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning', 'food_delivery', 'pool', 'conference_hall', 'safe' )]
10:26 LOG: DEBUG[0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS "user" ( id SERIAL, login VARCHAR(255) UNIQUE NOT NULL, password VARCHAR(255) NOT NULL, PRIMARY KEY (id) )]
10:26 LOG: DEBUG[0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS "hotel" ( id SERIAL, name VARCHAR(255) NOT NULL, stars SMALLINT NOT NULL, website VARCHAR(255) NOT NULL, latitude DECIMAL(8, 6) NOT NULL, longitude DECIMAL(8, 6) NOT NULL, feature HOTEL_FEATURE NOT NULL, PRIMARY KEY (id) )]
10:26 LOG: DEBUG[0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS "country" ( id SERIAL, name VARCHAR(255), PRIMARY KEY (id) )]
10:26 LOG: DEBUG[0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS "tour" ( id SERIAL, photo VARCHAR(255), date DATE NOT NULL, duration INT NOT NULL, description TEXT NOT NULL, cost DECIMAL(19, 3) NOT NULL, tour_type TOUR_TYPE NOT NULL, hotel_id INT NOT NULL, country_id INT NOT NULL, PRIMARY KEY (id), FOREIGN KEY (hotel_id) REFERENCES "hotel" (id), FOREIGN KEY (country_id) REFERENCES "country" (id) )]
10:26 LOG: DEBUG[0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS "usertour" ( user_id INT UNIQUE NOT NULL, tour_id INT UNIQUE NOT NULL, PRIMARY KEY (user_id, tour_id), FOREIGN KEY (user_id) REFERENCES "user" (id), FOREIGN KEY (tour_id) REFERENCES "tour" (id) )]
10:26 LOG: DEBUG[0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS "review" ( id SERIAL, date DATE NOT NULL, text TEXT NOT NULL, user_id INT NOT NULL, tour_id INT NOT NULL, PRIMARY KEY (id), FOREIGN KEY (user_id) REFERENCES "user" (id), FOREIGN KEY (tour_id) REFERENCES "tour" (id) ) ]
10:26 LOG: DEBUG[Executed SQL script from class path resource [db/migration/V1__init_schema.sql] in 56 ms.]
10:26 LOG: DEBUG[Executing SQL script from class path resource [db/migration/V1_1__init_data.sql]]
10:26 LOG: DEBUG[1 returned as update count for SQL: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
10:26 LOG: DEBUG[1 returned as update count for SQL: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
10:26 LOG: DEBUG[1 returned as update count for SQL: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
10:26 LOG: DEBUG[1 returned as update count for SQL: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
10:26 LOG: DEBUG[1 returned as update count for SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test1', 4, 'test1', 1, 1, 'security')]
10:26 LOG: DEBUG[1 returned as update count for SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test2', 4, 'test2', 1, 1, 'security')]
10:26 LOG: DEBUG[1 returned as update count for SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test3', 4, 'test3', 1, 1, 'security')]
10:26 LOG: DEBUG[1 returned as update count for SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test4', 4, 'test4', 1, 1, 'security')]
10:26 LOG: DEBUG[Executed SQL script from class path resource [db/migration/V1_1__init_data.sql] in 10 ms.]
10:26 LOG: TRACE[Eagerly caching bean 'getDataSource' to allow for resolving potential circular references]
10:26 LOG: TRACE[Finished creating instance of bean 'getDataSource']
10:26 LOG: DEBUG[Creating shared instance of singleton bean 'getJdbcTemplate']
10:26 LOG: TRACE[Creating instance of bean 'getJdbcTemplate']
10:26 LOG: TRACE[Returning cached instance of singleton bean 'testConfig']
10:26 LOG: TRACE[Returning cached instance of singleton bean 'getDataSource']
10:26 LOG: TRACE[Eagerly caching bean 'getJdbcTemplate' to allow for resolving potential circular references]
10:26 LOG: TRACE[Invoking afterPropertiesSet() on bean with name 'getJdbcTemplate']
10:26 LOG: TRACE[Finished creating instance of bean 'getJdbcTemplate']
10:26 LOG: DEBUG[Creating shared instance of singleton bean 'userRepository']
10:26 LOG: TRACE[Creating instance of bean 'userRepository']
10:26 LOG: TRACE[Returning cached instance of singleton bean 'testConfig']
10:26 LOG: TRACE[Loaded [org.springframework.beans.BeanInfoFactory] names: [org.springframework.beans.ExtendedBeanInfoFactory]]
10:26 LOG: TRACE[Getting BeanInfo for class [com.epam.travelagency.repository.UserRepository]]
10:26 LOG: TRACE[Caching PropertyDescriptors for class [com.epam.travelagency.repository.UserRepository]]
10:26 LOG: TRACE[Found bean property 'class' of type [java.lang.Class]]
10:26 LOG: TRACE[Found bean property 'dataContext' of type [com.epam.travelagency.storage.DataContext]]
10:26 LOG: TRACE[Registered injected element on class [com.epam.travelagency.repository.UserRepository]: AutowiredMethodElement for public void com.epam.travelagency.repository.Repository.setDataContext(com.epam.travelagency.storage.DataContext)]
10:26 LOG: TRACE[Eagerly caching bean 'userRepository' to allow for resolving potential circular references]
10:26 LOG: TRACE[Processing injected element of bean 'userRepository': AutowiredMethodElement for public void com.epam.travelagency.repository.Repository.setDataContext(com.epam.travelagency.storage.DataContext)]
10:26 LOG: DEBUG[Creating shared instance of singleton bean 'userDataContext']
10:26 LOG: TRACE[Creating instance of bean 'userDataContext']
10:26 LOG: TRACE[Returning cached instance of singleton bean 'testConfig']
10:26 LOG: TRACE[Returning cached instance of singleton bean 'getJdbcTemplate']
10:26 LOG: TRACE[Eagerly caching bean 'userDataContext' to allow for resolving potential circular references]
10:26 LOG: TRACE[Finished creating instance of bean 'userDataContext']
10:26 LOG: TRACE[Autowiring by type from bean name 'userRepository' to bean named 'userDataContext']
10:26 LOG: TRACE[Finished creating instance of bean 'userRepository']
10:26 LOG: DEBUG[Creating shared instance of singleton bean 'hotelRepository']
10:26 LOG: TRACE[Creating instance of bean 'hotelRepository']
10:26 LOG: TRACE[Returning cached instance of singleton bean 'testConfig']
10:26 LOG: TRACE[Getting BeanInfo for class [com.epam.travelagency.repository.HotelRepository]]
10:26 LOG: TRACE[Caching PropertyDescriptors for class [com.epam.travelagency.repository.HotelRepository]]
10:26 LOG: TRACE[Found bean property 'class' of type [java.lang.Class]]
10:26 LOG: TRACE[Found bean property 'dataContext' of type [com.epam.travelagency.storage.DataContext]]
10:26 LOG: TRACE[Registered injected element on class [com.epam.travelagency.repository.HotelRepository]: AutowiredMethodElement for public void com.epam.travelagency.repository.Repository.setDataContext(com.epam.travelagency.storage.DataContext)]
10:26 LOG: TRACE[Eagerly caching bean 'hotelRepository' to allow for resolving potential circular references]
10:26 LOG: TRACE[Processing injected element of bean 'hotelRepository': AutowiredMethodElement for public void com.epam.travelagency.repository.Repository.setDataContext(com.epam.travelagency.storage.DataContext)]
10:26 LOG: DEBUG[Creating shared instance of singleton bean 'hotelDataContext']
10:26 LOG: TRACE[Creating instance of bean 'hotelDataContext']
10:26 LOG: TRACE[Returning cached instance of singleton bean 'testConfig']
10:26 LOG: TRACE[Returning cached instance of singleton bean 'getJdbcTemplate']
10:26 LOG: TRACE[Eagerly caching bean 'hotelDataContext' to allow for resolving potential circular references]
10:26 LOG: TRACE[Finished creating instance of bean 'hotelDataContext']
10:26 LOG: TRACE[Autowiring by type from bean name 'hotelRepository' to bean named 'hotelDataContext']
10:26 LOG: TRACE[Finished creating instance of bean 'hotelRepository']
10:26 LOG: TRACE[Returning cached instance of singleton bean 'userDataContext']
10:26 LOG: TRACE[Returning cached instance of singleton bean 'hotelDataContext']
10:26 LOG: TRACE[No @EventListener annotations found on bean class: config.TestConfig$$EnhancerBySpringCGLIB$$a83094b2]
10:26 LOG: TRACE[No @EventListener annotations found on bean class: com.epam.travelagency.repository.UserRepository]
10:26 LOG: TRACE[No @EventListener annotations found on bean class: com.epam.travelagency.repository.HotelRepository]
10:26 LOG: TRACE[No @EventListener annotations found on bean class: com.epam.travelagency.storage.posgresql.UserDataContext]
10:26 LOG: TRACE[No @EventListener annotations found on bean class: com.epam.travelagency.storage.posgresql.HotelDataContext]
10:26 LOG: TRACE[No @EventListener annotations found on bean class: java.util.Properties]
10:26 LOG: TRACE[No @EventListener annotations found on bean class: java.util.Collections$UnmodifiableMap]
10:26 LOG: TRACE[No 'lifecycleProcessor' bean, using [DefaultLifecycleProcessor]]
10:26 LOG: TRACE[Returning cached instance of singleton bean 'lifecycleProcessor']
10:26 LOG: TRACE[Searching for key 'spring.liveBeansView.mbeanDomain' in PropertySource 'systemProperties']
10:26 LOG: TRACE[Searching for key 'spring.liveBeansView.mbeanDomain' in PropertySource 'systemEnvironment']
10:26 LOG: TRACE[Could not find key 'spring.liveBeansView.mbeanDomain' in any property source]
10:26 LOG: DEBUG[Storing ApplicationContext in cache under key [[MergedContextConfiguration@35d6ca49 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]]
10:26 LOG: DEBUG[Spring test ApplicationContext cache statistics: [DefaultContextCache@351e414e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 0, missCount = 1]]
10:26 LOG: TRACE[beforeTestMethod(): instance [repository.HotelRepositoryTest@138fe6ec], method [public void repository.HotelRepositoryTest.shouldBeReadCorrectly()]]
10:26 LOG: DEBUG[Before test method: context [DefaultTestContext@56e07a08 testClass = HotelRepositoryTest, testInstance = repository.HotelRepositoryTest@138fe6ec, testMethod = shouldBeReadCorrectly@HotelRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@35d6ca49 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].]
10:26 LOG: TRACE[beforeTestExecution(): instance [repository.HotelRepositoryTest@138fe6ec], method [public void repository.HotelRepositoryTest.shouldBeReadCorrectly()]]
10:26 LOG: DEBUG[Executing prepared SQL query]
10:26 LOG: DEBUG[Executing prepared SQL statement [SELECT id, name, stars, website, latitude, longitude, feature FROM hotel WHERE id=?]]
10:26 LOG: DEBUG[Fetching JDBC Connection from DataSource]
10:26 LOG: TRACE[Setting SQL statement parameter value: column index 1, parameter value [1], value class [java.lang.Integer], SQL type unknown]
10:26 LOG: TRACE[afterTestExecution(): instance [repository.HotelRepositoryTest@138fe6ec], method [public void repository.HotelRepositoryTest.shouldBeReadCorrectly()], exception [null]]
10:26 LOG: TRACE[afterTestMethod(): instance [repository.HotelRepositoryTest@138fe6ec], method [public void repository.HotelRepositoryTest.shouldBeReadCorrectly()], exception [null]]
10:26 LOG: DEBUG[After test method: context [DefaultTestContext@56e07a08 testClass = HotelRepositoryTest, testInstance = repository.HotelRepositoryTest@138fe6ec, testMethod = shouldBeReadCorrectly@HotelRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@35d6ca49 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].]
10:26 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [repository.HotelRepositoryTest]]
10:26 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [repository.HotelRepositoryTest]]
10:26 LOG: TRACE[prepareTestInstance(): instance [repository.HotelRepositoryTest@363f0ba0]]
10:26 LOG: DEBUG[Performing dependency injection for test context [[DefaultTestContext@56e07a08 testClass = HotelRepositoryTest, testInstance = repository.HotelRepositoryTest@363f0ba0, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@35d6ca49 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].]
10:26 LOG: DEBUG[Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@35d6ca49 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]]
10:26 LOG: DEBUG[Spring test ApplicationContext cache statistics: [DefaultContextCache@351e414e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 1, missCount = 1]]
10:26 LOG: TRACE[beforeTestMethod(): instance [repository.HotelRepositoryTest@363f0ba0], method [public void repository.HotelRepositoryTest.shouldReadAllEntries()]]
10:26 LOG: DEBUG[Before test method: context [DefaultTestContext@56e07a08 testClass = HotelRepositoryTest, testInstance = repository.HotelRepositoryTest@363f0ba0, testMethod = shouldReadAllEntries@HotelRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@35d6ca49 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].]
10:26 LOG: TRACE[beforeTestExecution(): instance [repository.HotelRepositoryTest@363f0ba0], method [public void repository.HotelRepositoryTest.shouldReadAllEntries()]]
10:26 LOG: DEBUG[Executing SQL query [SELECT id, name, stars, website, latitude, longitude, feature FROM hotel]]
10:26 LOG: DEBUG[Fetching JDBC Connection from DataSource]
10:26 LOG: TRACE[afterTestExecution(): instance [repository.HotelRepositoryTest@363f0ba0], method [public void repository.HotelRepositoryTest.shouldReadAllEntries()], exception [null]]
10:26 LOG: TRACE[afterTestMethod(): instance [repository.HotelRepositoryTest@363f0ba0], method [public void repository.HotelRepositoryTest.shouldReadAllEntries()], exception [null]]
10:26 LOG: DEBUG[After test method: context [DefaultTestContext@56e07a08 testClass = HotelRepositoryTest, testInstance = repository.HotelRepositoryTest@363f0ba0, testMethod = shouldReadAllEntries@HotelRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@35d6ca49 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].]
10:26 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [repository.HotelRepositoryTest]]
10:26 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [repository.HotelRepositoryTest]]
10:26 LOG: TRACE[prepareTestInstance(): instance [repository.HotelRepositoryTest@50acf55d]]
10:26 LOG: DEBUG[Performing dependency injection for test context [[DefaultTestContext@56e07a08 testClass = HotelRepositoryTest, testInstance = repository.HotelRepositoryTest@50acf55d, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@35d6ca49 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].]
10:26 LOG: DEBUG[Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@35d6ca49 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]]
10:26 LOG: DEBUG[Spring test ApplicationContext cache statistics: [DefaultContextCache@351e414e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 2, missCount = 1]]
10:26 LOG: TRACE[beforeTestMethod(): instance [repository.HotelRepositoryTest@50acf55d], method [public void repository.HotelRepositoryTest.shouldBeCreated()]]
10:26 LOG: DEBUG[Before test method: context [DefaultTestContext@56e07a08 testClass = HotelRepositoryTest, testInstance = repository.HotelRepositoryTest@50acf55d, testMethod = shouldBeCreated@HotelRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@35d6ca49 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].]
10:26 LOG: TRACE[beforeTestExecution(): instance [repository.HotelRepositoryTest@50acf55d], method [public void repository.HotelRepositoryTest.shouldBeCreated()]]
10:26 LOG: DEBUG[Executing prepared SQL update]
10:26 LOG: DEBUG[Executing prepared SQL statement [INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES (?,?,?,?,?,?::hotel_feature)]]
10:26 LOG: DEBUG[Fetching JDBC Connection from DataSource]
10:26 LOG: TRACE[SQL update affected 1 rows]
10:26 LOG: DEBUG[Executing prepared SQL query]
10:26 LOG: DEBUG[Executing prepared SQL statement [SELECT id, name, stars, website, latitude, longitude, feature FROM hotel WHERE id=?]]
10:26 LOG: DEBUG[Fetching JDBC Connection from DataSource]
10:26 LOG: TRACE[Setting SQL statement parameter value: column index 1, parameter value [5], value class [java.lang.Integer], SQL type unknown]
10:26 LOG: TRACE[afterTestExecution(): instance [repository.HotelRepositoryTest@50acf55d], method [public void repository.HotelRepositoryTest.shouldBeCreated()], exception [null]]
10:26 LOG: TRACE[afterTestMethod(): instance [repository.HotelRepositoryTest@50acf55d], method [public void repository.HotelRepositoryTest.shouldBeCreated()], exception [null]]
10:26 LOG: DEBUG[After test method: context [DefaultTestContext@56e07a08 testClass = HotelRepositoryTest, testInstance = repository.HotelRepositoryTest@50acf55d, testMethod = shouldBeCreated@HotelRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@35d6ca49 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].]
10:26 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [repository.HotelRepositoryTest]]
10:26 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [repository.HotelRepositoryTest]]
10:26 LOG: TRACE[prepareTestInstance(): instance [repository.HotelRepositoryTest@7a22a3c2]]
10:26 LOG: DEBUG[Performing dependency injection for test context [[DefaultTestContext@56e07a08 testClass = HotelRepositoryTest, testInstance = repository.HotelRepositoryTest@7a22a3c2, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@35d6ca49 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].]
10:26 LOG: DEBUG[Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@35d6ca49 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]]
10:26 LOG: DEBUG[Spring test ApplicationContext cache statistics: [DefaultContextCache@351e414e size = 1, maxSize = 32, parentContextCount = 0, hitCount = 3, missCount = 1]]
10:26 LOG: TRACE[beforeTestMethod(): instance [repository.HotelRepositoryTest@7a22a3c2], method [public void repository.HotelRepositoryTest.shouldBeDeleted()]]
10:26 LOG: DEBUG[Before test method: context [DefaultTestContext@56e07a08 testClass = HotelRepositoryTest, testInstance = repository.HotelRepositoryTest@7a22a3c2, testMethod = shouldBeDeleted@HotelRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@35d6ca49 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].]
10:26 LOG: TRACE[beforeTestExecution(): instance [repository.HotelRepositoryTest@7a22a3c2], method [public void repository.HotelRepositoryTest.shouldBeDeleted()]]
10:26 LOG: DEBUG[Executing prepared SQL update]
10:26 LOG: DEBUG[Executing prepared SQL statement [DELETE FROM hotel where id=?]]
10:26 LOG: DEBUG[Fetching JDBC Connection from DataSource]
10:26 LOG: TRACE[Setting SQL statement parameter value: column index 1, parameter value [1], value class [java.lang.Integer], SQL type unknown]
10:26 LOG: TRACE[SQL update affected 1 rows]
10:26 LOG: DEBUG[Executing prepared SQL query]
10:26 LOG: DEBUG[Executing prepared SQL statement [SELECT id, name, stars, website, latitude, longitude, feature FROM hotel WHERE id=?]]
10:26 LOG: DEBUG[Fetching JDBC Connection from DataSource]
10:26 LOG: TRACE[Setting SQL statement parameter value: column index 1, parameter value [1], value class [java.lang.Integer], SQL type unknown]
10:26 LOG: TRACE[afterTestExecution(): instance [repository.HotelRepositoryTest@7a22a3c2], method [public void repository.HotelRepositoryTest.shouldBeDeleted()], exception [org.springframework.dao.EmptyResultDataAccessException: Incorrect result size: expected 1, actual 0]]
10:26 LOG: TRACE[afterTestMethod(): instance [repository.HotelRepositoryTest@7a22a3c2], method [public void repository.HotelRepositoryTest.shouldBeDeleted()], exception [null]]
10:26 LOG: DEBUG[After test method: context [DefaultTestContext@56e07a08 testClass = HotelRepositoryTest, testInstance = repository.HotelRepositoryTest@7a22a3c2, testMethod = shouldBeDeleted@HotelRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@35d6ca49 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].]
10:26 LOG: TRACE[afterTestClass(): class [repository.HotelRepositoryTest]]
10:26 LOG: DEBUG[After test class: context [DefaultTestContext@56e07a08 testClass = HotelRepositoryTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@35d6ca49 testClass = HotelRepositoryTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].]
10:26 LOG: DEBUG[Closing org.springframework.context.support.GenericApplicationContext@3f093abe, started on Wed Feb 20 10:26:31 MSK 2019]
10:26 LOG: TRACE[Returning cached instance of singleton bean 'lifecycleProcessor']
10:26 LOG: TRACE[Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@5d332969: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,testConfig,getDataSource,getJdbcTemplate,userRepository,hotelRepository,userDataContext,hotelDataContext]; root of factory hierarchy]
10:45 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
10:45 LOG: INFO [Detected a Windows x86_64 system]
10:45 LOG: INFO [Postgres binaries at C:\Users\valik\AppData\Local\Temp\embedded-pg\PG-91c1fa33789b0c913345bf0253da6836]
10:45 LOG: TRACE[40420d0a-4237-4100-8b52-4bba1769c085 postgres data directory is C:\Users\valik\AppData\Local\Temp\epg2018838620341425718]
10:45 LOG: INFO [The files belonging to this database system will be owned by user "valik".]
10:45 LOG: INFO [This user must also own the server process.]
10:45 LOG: INFO []
10:45 LOG: INFO [The database cluster will be initialized with locale "Russian_Belarus.1251".]
10:45 LOG: INFO [The default text search configuration will be set to "russian".]
10:45 LOG: INFO []
10:45 LOG: INFO [Data page checksums are disabled.]
10:45 LOG: INFO []
10:45 LOG: INFO [fixing permissions on existing directory C:/Users/valik/AppData/Local/Temp/epg2018838620341425718 ... ok]
10:45 LOG: INFO [creating subdirectories ... ok]
10:45 LOG: INFO [selecting default max_connections ... 100]
10:45 LOG: INFO [selecting default shared_buffers ... 128MB]
10:45 LOG: INFO [selecting dynamic shared memory implementation ... windows]
10:45 LOG: INFO [creating configuration files ... ok]
10:45 LOG: INFO [running bootstrap script ... ok]
10:45 LOG: INFO [performing post-bootstrap initialization ... ok]
10:45 LOG: INFO [syncing data to disk ... ok]
10:45 LOG: INFO []
10:45 LOG: INFO [Success. You can now start the database server using:]
10:45 LOG: INFO []
10:45 LOG: INFO [    C:/Users/valik/AppData/Local/Temp/embedded-pg/PG-91c1fa33789b0c913345bf0253da6836/bin/pg_ctl -D ^"C^:^\Users^\valik^\AppData^\Local^\Temp^\epg2018838620341425718^" -l logfile start]
10:45 LOG: INFO []
10:45 LOG: INFO [40420d0a-4237-4100-8b52-4bba1769c085 initdb completed in 00:00:08.048]
10:45 LOG: INFO [40420d0a-4237-4100-8b52-4bba1769c085 postmaster started as Process[pid=11340, exitValue="not exited"] on port 50644.  Waiting up to PT10S for server startup to finish.]
10:45 LOG: INFO [waiting for server to start....2019-02-20 10:45:10.456 +03 [7044] ���������:  ��� ����� ����������� �� ������ IPv6 "::1" ������ ���� 50644]
10:45 LOG: INFO [2019-02-20 10:45:10.456 +03 [7044] ���������:  ��� ����� ����������� �� ������ IPv4 "127.0.0.1" ������ ���� 50644]
10:45 LOG: INFO [2019-02-20 10:45:10.676 +03 [4904] ���������:  ������� �� ���� ���������: 2019-02-20 10:45:09 +03]
10:45 LOG: INFO [2019-02-20 10:45:10.783 +03 [7044] ���������:  ������� �� ������ ��������� �����������]
10:45 LOG: TRACE[While waiting for server startup]
java.sql.SQLException: connect failed
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:341) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.waitForServerStartup(EmbeddedPostgres.java:315) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.startPostmaster(EmbeddedPostgres.java:275) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.<init>(EmbeddedPostgres.java:162) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres$Builder.start(EmbeddedPostgres.java:580) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.createOrFindPreparer(PreparedDbProvider.java:82) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.<init>(PreparedDbProvider.java:62) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.forPreparer(PreparedDbProvider.java:57) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.junit.PreparedDbRule.before(PreparedDbRule.java:55) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:46) [junit-4.12.jar:4.12]
	at org.junit.rules.RunRules.evaluate(RunRules.java:20) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) [junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) [junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) [junit-rt.jar:?]
Caused by: java.net.SocketTimeoutException: connect timed out
	at java.net.PlainSocketImpl.waitForConnect(Native Method) ~[?:?]
	at java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:107) ~[?:?]
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224) ~[?:?]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403) ~[?:?]
	at java.net.Socket.connect(Socket.java:591) ~[?:?]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:339) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	... 16 more
10:45 LOG: INFO [ done]
10:45 LOG: INFO [server started]
10:45 LOG: INFO [40420d0a-4237-4100-8b52-4bba1769c085 postmaster startup finished in 00:00:00.775]
10:45 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
10:45 LOG: INFO [Flyway Community Edition 5.2.4 by Boxfuse]
10:45 LOG: INFO [Database: jdbc:postgresql://localhost:50644/template1 (PostgreSQL 10.6)]
10:45 LOG: DEBUG[Driver  : PostgreSQL JDBC Driver 42.2.5]
10:45 LOG: DEBUG[DDL Transactions Supported: true]
10:45 LOG: DEBUG[Schema: public]
10:45 LOG: DEBUG[Scanning for classpath resources at 'classpath:db/migration' ...]
10:45 LOG: DEBUG[Determining location urls for classpath:db/migration using ClassLoader jdk.internal.loader.ClassLoaders$AppClassLoader@6ed3ef1 ...]
10:45 LOG: DEBUG[Scanning URL: file:/C:/Users/valik/IdeaProjects/java-lab-task-1/target/classes/db/migration]
10:45 LOG: DEBUG[JBoss VFS v2 available: false]
10:45 LOG: DEBUG[Scanning starting at classpath root in filesystem: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\]
10:45 LOG: DEBUG[Scanning for resources in path: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\db\migration (db/migration)]
10:45 LOG: DEBUG[Found resource: db/migration/V1_1__init_data.sql]
10:45 LOG: DEBUG[Found resource: db/migration/V1__init_schema.sql]
10:45 LOG: DEBUG[Scanning for classes at classpath:db/migration]
10:45 LOG: DEBUG[Scanning for SQL callbacks ...]
10:45 LOG: DEBUG[Spring Jdbc available: true]
10:45 LOG: DEBUG[Validating migrations ...]
10:45 LOG: DEBUG[Parsing V1_1__init_data.sql ...]
10:45 LOG: DEBUG[Found statement at line 1: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
10:45 LOG: DEBUG[Found statement at line 2: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
10:45 LOG: DEBUG[Found statement at line 3: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
10:45 LOG: DEBUG[Found statement at line 4: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
10:45 LOG: DEBUG[Found statement at line 6: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test1', 4, 'test1', 1, 1, 'security')]
10:45 LOG: DEBUG[Found statement at line 7: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test2', 4, 'test2', 1, 1, 'security')]
10:45 LOG: DEBUG[Found statement at line 8: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test3', 4, 'test3', 1, 1, 'security')]
10:45 LOG: DEBUG[Found statement at line 9: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test4', 4, 'test4', 1, 1, 'security')]
10:45 LOG: DEBUG[Parsing V1__init_schema.sql ...]
10:45 LOG: DEBUG[Found statement at line 1: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
10:45 LOG: DEBUG[Found statement at line 8: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
10:45 LOG: DEBUG[Found statement at line 16: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
10:45 LOG: DEBUG[Found statement at line 24: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
10:45 LOG: DEBUG[Found statement at line 36: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
10:45 LOG: DEBUG[Found statement at line 43: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
10:45 LOG: DEBUG[Found statement at line 59: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
10:45 LOG: DEBUG[Found statement at line 68: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
10:45 LOG: DEBUG[Filtering out resource: db/migration/V1_1__init_data.sql (filename: V1_1__init_data.sql)]
10:45 LOG: DEBUG[Filtering out resource: db/migration/V1__init_schema.sql (filename: V1__init_schema.sql)]
10:45 LOG: INFO [Successfully validated 2 migrations (execution time 00:00.024s)]
10:45 LOG: DEBUG[Schema "public" already exists. Skipping schema creation.]
10:45 LOG: INFO [Creating Schema History table: "public"."flyway_schema_history"]
10:45 LOG: DEBUG[Parsing createMetaDataTable.sql ...]
10:45 LOG: DEBUG[Found statement at line 17: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
10:45 LOG: DEBUG[Found statement at line 29: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
10:45 LOG: DEBUG[Found statement at line 31: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
10:45 LOG: DEBUG[Executing SQL: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
10:45 LOG: DEBUG[Update Count: 0]
10:45 LOG: DEBUG[Executing SQL: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
10:45 LOG: DEBUG[Update Count: 0]
10:45 LOG: DEBUG[Executing SQL: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
10:45 LOG: DEBUG[Update Count: 0]
10:45 LOG: DEBUG[Created Schema History table: "public"."flyway_schema_history"]
10:45 LOG: INFO [Current version of schema "public": << Empty Schema >>]
10:45 LOG: INFO [Migrating schema "public" to version 1 - init schema]
10:45 LOG: DEBUG[Executing SQL: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
10:45 LOG: DEBUG[Update Count: 0]
10:45 LOG: DEBUG[Executing SQL: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
10:45 LOG: DEBUG[Update Count: 0]
10:45 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
10:45 LOG: DEBUG[Update Count: 0]
10:45 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
10:45 LOG: DEBUG[Update Count: 0]
10:45 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
10:45 LOG: DEBUG[Update Count: 0]
10:45 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
10:45 LOG: DEBUG[Update Count: 0]
10:45 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
10:45 LOG: DEBUG[Update Count: 0]
10:45 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
10:45 LOG: DEBUG[Update Count: 0]
10:45 LOG: DEBUG[Successfully completed migration of schema "public" to version 1 - init schema]
10:45 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
10:45 LOG: INFO [Migrating schema "public" to version 1.1 - init data]
10:45 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
10:45 LOG: DEBUG[Update Count: 1]
10:45 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
10:45 LOG: DEBUG[Update Count: 1]
10:45 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
10:45 LOG: DEBUG[Update Count: 1]
10:45 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
10:45 LOG: DEBUG[Update Count: 1]
10:45 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test1', 4, 'test1', 1, 1, 'security')]
10:45 LOG: DEBUG[Update Count: 1]
10:45 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test2', 4, 'test2', 1, 1, 'security')]
10:45 LOG: DEBUG[Update Count: 1]
10:45 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test3', 4, 'test3', 1, 1, 'security')]
10:45 LOG: DEBUG[Update Count: 1]
10:45 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test4', 4, 'test4', 1, 1, 'security')]
10:45 LOG: DEBUG[Update Count: 1]
10:45 LOG: DEBUG[Successfully completed migration of schema "public" to version 1.1 - init data]
10:45 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
10:45 LOG: INFO [Successfully applied 2 migrations to schema "public" (execution time 00:00.183s)]
10:45 LOG: DEBUG[Memory usage: 12 of 126M]
10:45 LOG: DEBUG[Executing prepared SQL query]
10:45 LOG: DEBUG[Executing prepared SQL statement [SELECT id, name, stars, website, latitude, longitude, feature FROM hotel WHERE id=?]]
10:45 LOG: DEBUG[Fetching JDBC Connection from DataSource]
10:45 LOG: TRACE[Setting SQL statement parameter value: column index 1, parameter value [1], value class [java.lang.Integer], SQL type unknown]
10:45 LOG: DEBUG[Executing SQL query [SELECT id, name, stars, website, latitude, longitude, feature FROM hotel]]
10:45 LOG: DEBUG[Fetching JDBC Connection from DataSource]
10:45 LOG: DEBUG[Executing prepared SQL update]
10:45 LOG: DEBUG[Executing prepared SQL statement [INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES (?,?,?,?,?,?::hotel_feature)]]
10:45 LOG: DEBUG[Fetching JDBC Connection from DataSource]
10:45 LOG: TRACE[SQL update affected 1 rows]
10:45 LOG: DEBUG[Executing prepared SQL query]
10:45 LOG: DEBUG[Executing prepared SQL statement [SELECT id, name, stars, website, latitude, longitude, feature FROM hotel WHERE id=?]]
10:45 LOG: DEBUG[Fetching JDBC Connection from DataSource]
10:45 LOG: TRACE[Setting SQL statement parameter value: column index 1, parameter value [5], value class [java.lang.Integer], SQL type unknown]
10:45 LOG: DEBUG[Executing prepared SQL update]
10:45 LOG: DEBUG[Executing prepared SQL statement [DELETE FROM hotel where id=?]]
10:45 LOG: DEBUG[Fetching JDBC Connection from DataSource]
10:45 LOG: TRACE[Setting SQL statement parameter value: column index 1, parameter value [1], value class [java.lang.Integer], SQL type unknown]
10:45 LOG: TRACE[SQL update affected 1 rows]
10:45 LOG: DEBUG[Executing prepared SQL query]
10:45 LOG: DEBUG[Executing prepared SQL statement [SELECT id, name, stars, website, latitude, longitude, feature FROM hotel WHERE id=?]]
10:45 LOG: DEBUG[Fetching JDBC Connection from DataSource]
10:45 LOG: TRACE[Setting SQL statement parameter value: column index 1, parameter value [1], value class [java.lang.Integer], SQL type unknown]
11:20 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
11:20 LOG: INFO [Detected a Windows x86_64 system]
11:20 LOG: INFO [Postgres binaries at C:\Users\valik\AppData\Local\Temp\embedded-pg\PG-91c1fa33789b0c913345bf0253da6836]
11:20 LOG: TRACE[9e367320-8a46-46ca-adc5-eb268e8bcdfc postgres data directory is C:\Users\valik\AppData\Local\Temp\epg16895007922086676046]
11:20 LOG: INFO [The files belonging to this database system will be owned by user "valik".]
11:20 LOG: INFO [This user must also own the server process.]
11:20 LOG: INFO []
11:20 LOG: INFO [The database cluster will be initialized with locale "Russian_Belarus.1251".]
11:20 LOG: INFO [The default text search configuration will be set to "russian".]
11:20 LOG: INFO []
11:20 LOG: INFO [Data page checksums are disabled.]
11:20 LOG: INFO []
11:20 LOG: INFO [fixing permissions on existing directory C:/Users/valik/AppData/Local/Temp/epg16895007922086676046 ... ok]
11:20 LOG: INFO [creating subdirectories ... ok]
11:20 LOG: INFO [selecting default max_connections ... 100]
11:20 LOG: INFO [selecting default shared_buffers ... 128MB]
11:20 LOG: INFO [selecting dynamic shared memory implementation ... windows]
11:20 LOG: INFO [creating configuration files ... ok]
11:20 LOG: INFO [running bootstrap script ... ok]
11:21 LOG: INFO [performing post-bootstrap initialization ... ok]
11:21 LOG: INFO [syncing data to disk ... ok]
11:21 LOG: INFO []
11:21 LOG: INFO [Success. You can now start the database server using:]
11:21 LOG: INFO []
11:21 LOG: INFO [    C:/Users/valik/AppData/Local/Temp/embedded-pg/PG-91c1fa33789b0c913345bf0253da6836/bin/pg_ctl -D ^"C^:^\Users^\valik^\AppData^\Local^\Temp^\epg16895007922086676046^" -l logfile start]
11:21 LOG: INFO []
11:21 LOG: INFO [9e367320-8a46-46ca-adc5-eb268e8bcdfc initdb completed in 00:00:09.313]
11:21 LOG: INFO [9e367320-8a46-46ca-adc5-eb268e8bcdfc postmaster started as Process[pid=16420, exitValue="not exited"] on port 50981.  Waiting up to PT10S for server startup to finish.]
11:21 LOG: INFO [waiting for server to start....2019-02-20 11:21:03.994 +03 [908] ���������:  ��� ����� ����������� �� ������ IPv6 "::1" ������ ���� 50981]
11:21 LOG: INFO [2019-02-20 11:21:03.994 +03 [908] ���������:  ��� ����� ����������� �� ������ IPv4 "127.0.0.1" ������ ���� 50981]
11:21 LOG: INFO [2019-02-20 11:21:04.127 +03 [18052] ���������:  ������� �� ���� ���������: 2019-02-20 11:21:02 +03]
11:21 LOG: INFO [2019-02-20 11:21:04.202 +03 [908] ���������:  ������� �� ������ ��������� �����������]
11:21 LOG: INFO [ done]
11:21 LOG: TRACE[While waiting for server startup]
java.sql.SQLException: connect failed
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:341) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.waitForServerStartup(EmbeddedPostgres.java:315) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.startPostmaster(EmbeddedPostgres.java:275) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.<init>(EmbeddedPostgres.java:162) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres$Builder.start(EmbeddedPostgres.java:580) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.createOrFindPreparer(PreparedDbProvider.java:82) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.<init>(PreparedDbProvider.java:62) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.forPreparer(PreparedDbProvider.java:57) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.junit.PreparedDbRule.before(PreparedDbRule.java:55) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:46) [junit-4.12.jar:4.12]
	at org.junit.rules.RunRules.evaluate(RunRules.java:20) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) [junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) [junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) [junit-rt.jar:?]
Caused by: java.net.SocketTimeoutException: connect timed out
	at java.net.PlainSocketImpl.waitForConnect(Native Method) ~[?:?]
	at java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:107) ~[?:?]
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224) ~[?:?]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403) ~[?:?]
	at java.net.Socket.connect(Socket.java:591) ~[?:?]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:339) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	... 16 more
11:21 LOG: INFO [9e367320-8a46-46ca-adc5-eb268e8bcdfc postmaster startup finished in 00:00:00.856]
11:21 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
11:21 LOG: INFO [Flyway Community Edition 5.2.4 by Boxfuse]
11:21 LOG: INFO [Database: jdbc:postgresql://localhost:50981/template1 (PostgreSQL 10.6)]
11:21 LOG: DEBUG[Driver  : PostgreSQL JDBC Driver 42.2.5]
11:21 LOG: DEBUG[DDL Transactions Supported: true]
11:21 LOG: DEBUG[Schema: public]
11:21 LOG: DEBUG[Scanning for classpath resources at 'classpath:db/migration' ...]
11:21 LOG: DEBUG[Determining location urls for classpath:db/migration using ClassLoader jdk.internal.loader.ClassLoaders$AppClassLoader@6ed3ef1 ...]
11:21 LOG: DEBUG[Scanning URL: file:/C:/Users/valik/IdeaProjects/java-lab-task-1/target/classes/db/migration]
11:21 LOG: DEBUG[JBoss VFS v2 available: false]
11:21 LOG: DEBUG[Scanning starting at classpath root in filesystem: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\]
11:21 LOG: DEBUG[Scanning for resources in path: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\db\migration (db/migration)]
11:21 LOG: DEBUG[Found resource: db/migration/V1_1__init_data.sql]
11:21 LOG: DEBUG[Found resource: db/migration/V1__init_schema.sql]
11:21 LOG: DEBUG[Scanning for classes at classpath:db/migration]
11:21 LOG: DEBUG[Scanning for SQL callbacks ...]
11:21 LOG: DEBUG[Spring Jdbc available: true]
11:21 LOG: DEBUG[Validating migrations ...]
11:21 LOG: DEBUG[Parsing V1_1__init_data.sql ...]
11:21 LOG: DEBUG[Found statement at line 1: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
11:21 LOG: DEBUG[Found statement at line 2: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
11:21 LOG: DEBUG[Found statement at line 3: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
11:21 LOG: DEBUG[Found statement at line 4: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
11:21 LOG: DEBUG[Found statement at line 6: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test1', 4, 'test1', 1, 1, 'security')]
11:21 LOG: DEBUG[Found statement at line 7: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test2', 4, 'test2', 1, 1, 'security')]
11:21 LOG: DEBUG[Found statement at line 8: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test3', 4, 'test3', 1, 1, 'security')]
11:21 LOG: DEBUG[Found statement at line 9: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test4', 4, 'test4', 1, 1, 'security')]
11:21 LOG: DEBUG[Parsing V1__init_schema.sql ...]
11:21 LOG: DEBUG[Found statement at line 1: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
11:21 LOG: DEBUG[Found statement at line 8: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
11:21 LOG: DEBUG[Found statement at line 16: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
11:21 LOG: DEBUG[Found statement at line 24: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
11:21 LOG: DEBUG[Found statement at line 36: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
11:21 LOG: DEBUG[Found statement at line 43: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
11:21 LOG: DEBUG[Found statement at line 59: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
11:21 LOG: DEBUG[Found statement at line 68: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
11:21 LOG: DEBUG[Filtering out resource: db/migration/V1_1__init_data.sql (filename: V1_1__init_data.sql)]
11:21 LOG: DEBUG[Filtering out resource: db/migration/V1__init_schema.sql (filename: V1__init_schema.sql)]
11:21 LOG: INFO [Successfully validated 2 migrations (execution time 00:00.025s)]
11:21 LOG: DEBUG[Schema "public" already exists. Skipping schema creation.]
11:21 LOG: INFO [Creating Schema History table: "public"."flyway_schema_history"]
11:21 LOG: DEBUG[Parsing createMetaDataTable.sql ...]
11:21 LOG: DEBUG[Found statement at line 17: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
11:21 LOG: DEBUG[Found statement at line 29: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
11:21 LOG: DEBUG[Found statement at line 31: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
11:21 LOG: DEBUG[Executing SQL: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
11:21 LOG: DEBUG[Update Count: 0]
11:21 LOG: DEBUG[Executing SQL: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
11:21 LOG: DEBUG[Update Count: 0]
11:21 LOG: DEBUG[Executing SQL: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
11:21 LOG: DEBUG[Update Count: 0]
11:21 LOG: DEBUG[Created Schema History table: "public"."flyway_schema_history"]
11:21 LOG: INFO [Current version of schema "public": << Empty Schema >>]
11:21 LOG: INFO [Migrating schema "public" to version 1 - init schema]
11:21 LOG: DEBUG[Executing SQL: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
11:21 LOG: DEBUG[Update Count: 0]
11:21 LOG: DEBUG[Executing SQL: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
11:21 LOG: DEBUG[Update Count: 0]
11:21 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
11:21 LOG: DEBUG[Update Count: 0]
11:21 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
11:21 LOG: DEBUG[Update Count: 0]
11:21 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
11:21 LOG: DEBUG[Update Count: 0]
11:21 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
11:21 LOG: DEBUG[Update Count: 0]
11:21 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
11:21 LOG: DEBUG[Update Count: 0]
11:21 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
11:21 LOG: DEBUG[Update Count: 0]
11:21 LOG: DEBUG[Successfully completed migration of schema "public" to version 1 - init schema]
11:21 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
11:21 LOG: INFO [Migrating schema "public" to version 1.1 - init data]
11:21 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
11:21 LOG: DEBUG[Update Count: 1]
11:21 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
11:21 LOG: DEBUG[Update Count: 1]
11:21 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
11:21 LOG: DEBUG[Update Count: 1]
11:21 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
11:21 LOG: DEBUG[Update Count: 1]
11:21 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test1', 4, 'test1', 1, 1, 'security')]
11:21 LOG: DEBUG[Update Count: 1]
11:21 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test2', 4, 'test2', 1, 1, 'security')]
11:21 LOG: DEBUG[Update Count: 1]
11:21 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test3', 4, 'test3', 1, 1, 'security')]
11:21 LOG: DEBUG[Update Count: 1]
11:21 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test4', 4, 'test4', 1, 1, 'security')]
11:21 LOG: DEBUG[Update Count: 1]
11:21 LOG: DEBUG[Successfully completed migration of schema "public" to version 1.1 - init data]
11:21 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
11:21 LOG: INFO [Successfully applied 2 migrations to schema "public" (execution time 00:00.187s)]
11:21 LOG: DEBUG[Memory usage: 12 of 126M]
11:21 LOG: DEBUG[Executing prepared SQL query]
11:21 LOG: DEBUG[Executing prepared SQL statement [SELECT id, name, stars, website, latitude, longitude, feature FROM hotel WHERE id=?]]
11:21 LOG: DEBUG[Fetching JDBC Connection from DataSource]
11:21 LOG: TRACE[Setting SQL statement parameter value: column index 1, parameter value [1], value class [java.lang.Integer], SQL type unknown]
11:21 LOG: DEBUG[Executing SQL query [SELECT id, name, stars, website, latitude, longitude, feature FROM hotel]]
11:21 LOG: DEBUG[Fetching JDBC Connection from DataSource]
11:21 LOG: DEBUG[Executing prepared SQL update]
11:21 LOG: DEBUG[Executing prepared SQL statement [INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES (?,?,?,?,?,?::hotel_feature)]]
11:21 LOG: DEBUG[Fetching JDBC Connection from DataSource]
11:21 LOG: TRACE[SQL update affected 1 rows]
11:21 LOG: DEBUG[Executing prepared SQL query]
11:21 LOG: DEBUG[Executing prepared SQL statement [SELECT id, name, stars, website, latitude, longitude, feature FROM hotel WHERE id=?]]
11:21 LOG: DEBUG[Fetching JDBC Connection from DataSource]
11:21 LOG: TRACE[Setting SQL statement parameter value: column index 1, parameter value [5], value class [java.lang.Integer], SQL type unknown]
11:21 LOG: DEBUG[Executing prepared SQL update]
11:21 LOG: DEBUG[Executing prepared SQL statement [DELETE FROM hotel where id=?]]
11:21 LOG: DEBUG[Fetching JDBC Connection from DataSource]
11:21 LOG: TRACE[Setting SQL statement parameter value: column index 1, parameter value [1], value class [java.lang.Integer], SQL type unknown]
11:21 LOG: TRACE[SQL update affected 1 rows]
11:21 LOG: DEBUG[Executing prepared SQL query]
11:21 LOG: DEBUG[Executing prepared SQL statement [SELECT id, name, stars, website, latitude, longitude, feature FROM hotel WHERE id=?]]
11:21 LOG: DEBUG[Fetching JDBC Connection from DataSource]
11:21 LOG: TRACE[Setting SQL statement parameter value: column index 1, parameter value [1], value class [java.lang.Integer], SQL type unknown]
11:42 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
11:42 LOG: INFO [Detected a Windows x86_64 system]
11:42 LOG: INFO [Postgres binaries at C:\Users\valik\AppData\Local\Temp\embedded-pg\PG-91c1fa33789b0c913345bf0253da6836]
11:42 LOG: TRACE[3f5a83d4-e0c0-4a32-9ba0-e5994f2bc6a9 postgres data directory is C:\Users\valik\AppData\Local\Temp\epg16440026102866374219]
11:42 LOG: INFO [The files belonging to this database system will be owned by user "valik".]
11:42 LOG: INFO [This user must also own the server process.]
11:42 LOG: INFO []
11:42 LOG: INFO [The database cluster will be initialized with locale "Russian_Belarus.1251".]
11:42 LOG: INFO [The default text search configuration will be set to "russian".]
11:42 LOG: INFO []
11:42 LOG: INFO [Data page checksums are disabled.]
11:42 LOG: INFO []
11:42 LOG: INFO [fixing permissions on existing directory C:/Users/valik/AppData/Local/Temp/epg16440026102866374219 ... ok]
11:42 LOG: INFO [creating subdirectories ... ok]
11:42 LOG: INFO [selecting default max_connections ... 100]
11:42 LOG: INFO [selecting default shared_buffers ... 128MB]
11:42 LOG: INFO [selecting dynamic shared memory implementation ... windows]
11:42 LOG: INFO [creating configuration files ... ok]
11:42 LOG: INFO [running bootstrap script ... ok]
11:42 LOG: INFO [performing post-bootstrap initialization ... ok]
11:42 LOG: INFO [syncing data to disk ... ok]
11:42 LOG: INFO []
11:42 LOG: INFO [Success. You can now start the database server using:]
11:42 LOG: INFO []
11:42 LOG: INFO [    C:/Users/valik/AppData/Local/Temp/embedded-pg/PG-91c1fa33789b0c913345bf0253da6836/bin/pg_ctl -D ^"C^:^\Users^\valik^\AppData^\Local^\Temp^\epg16440026102866374219^" -l logfile start]
11:42 LOG: INFO []
11:42 LOG: INFO [3f5a83d4-e0c0-4a32-9ba0-e5994f2bc6a9 initdb completed in 00:00:07.691]
11:42 LOG: INFO [3f5a83d4-e0c0-4a32-9ba0-e5994f2bc6a9 postmaster started as Process[pid=16344, exitValue="not exited"] on port 51203.  Waiting up to PT10S for server startup to finish.]
11:42 LOG: INFO [waiting for server to start....2019-02-20 11:42:41.975 +03 [7092] ���������:  ��� ����� ����������� �� ������ IPv6 "::1" ������ ���� 51203]
11:42 LOG: INFO [2019-02-20 11:42:41.976 +03 [7092] ���������:  ��� ����� ����������� �� ������ IPv4 "127.0.0.1" ������ ���� 51203]
11:42 LOG: INFO [2019-02-20 11:42:42.053 +03 [3180] ���������:  ������� �� ���� ���������: 2019-02-20 11:42:40 +03]
11:42 LOG: INFO [2019-02-20 11:42:42.105 +03 [7092] ���������:  ������� �� ������ ��������� �����������]
11:42 LOG: INFO [ done]
11:42 LOG: TRACE[While waiting for server startup]
java.sql.SQLException: connect failed
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:341) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.waitForServerStartup(EmbeddedPostgres.java:315) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.startPostmaster(EmbeddedPostgres.java:275) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.<init>(EmbeddedPostgres.java:162) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres$Builder.start(EmbeddedPostgres.java:580) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.createOrFindPreparer(PreparedDbProvider.java:82) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.<init>(PreparedDbProvider.java:62) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.forPreparer(PreparedDbProvider.java:57) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.junit.PreparedDbRule.before(PreparedDbRule.java:55) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:46) [junit-4.12.jar:4.12]
	at org.junit.rules.RunRules.evaluate(RunRules.java:20) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) [junit-4.12.jar:4.12]
	at org.mockito.internal.runners.DefaultInternalRunner$1.run(DefaultInternalRunner.java:79) [mockito-core-2.24.5.jar:?]
	at org.mockito.internal.runners.DefaultInternalRunner.run(DefaultInternalRunner.java:85) [mockito-core-2.24.5.jar:?]
	at org.mockito.internal.runners.StrictRunner.run(StrictRunner.java:39) [mockito-core-2.24.5.jar:?]
	at org.mockito.junit.MockitoJUnitRunner.run(MockitoJUnitRunner.java:163) [mockito-core-2.24.5.jar:?]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) [junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) [junit-rt.jar:?]
Caused by: java.net.SocketTimeoutException: connect timed out
	at java.net.PlainSocketImpl.waitForConnect(Native Method) ~[?:?]
	at java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:107) ~[?:?]
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224) ~[?:?]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403) ~[?:?]
	at java.net.Socket.connect(Socket.java:591) ~[?:?]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:339) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	... 20 more
11:42 LOG: INFO [3f5a83d4-e0c0-4a32-9ba0-e5994f2bc6a9 postmaster startup finished in 00:00:00.803]
11:42 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
11:42 LOG: INFO [Flyway Community Edition 5.2.4 by Boxfuse]
11:42 LOG: INFO [Database: jdbc:postgresql://localhost:51203/template1 (PostgreSQL 10.6)]
11:42 LOG: DEBUG[Driver  : PostgreSQL JDBC Driver 42.2.5]
11:42 LOG: DEBUG[DDL Transactions Supported: true]
11:42 LOG: DEBUG[Schema: public]
11:42 LOG: DEBUG[Scanning for classpath resources at 'classpath:db/migration' ...]
11:42 LOG: DEBUG[Determining location urls for classpath:db/migration using ClassLoader jdk.internal.loader.ClassLoaders$AppClassLoader@6ed3ef1 ...]
11:42 LOG: DEBUG[Scanning URL: file:/C:/Users/valik/IdeaProjects/java-lab-task-1/target/classes/db/migration]
11:42 LOG: DEBUG[JBoss VFS v2 available: false]
11:42 LOG: DEBUG[Scanning starting at classpath root in filesystem: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\]
11:42 LOG: DEBUG[Scanning for resources in path: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\db\migration (db/migration)]
11:42 LOG: DEBUG[Found resource: db/migration/V1_1__init_data.sql]
11:42 LOG: DEBUG[Found resource: db/migration/V1__init_schema.sql]
11:42 LOG: DEBUG[Scanning for classes at classpath:db/migration]
11:42 LOG: DEBUG[Scanning for SQL callbacks ...]
11:42 LOG: DEBUG[Spring Jdbc available: true]
11:42 LOG: DEBUG[Validating migrations ...]
11:42 LOG: DEBUG[Parsing V1_1__init_data.sql ...]
11:42 LOG: DEBUG[Found statement at line 1: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
11:42 LOG: DEBUG[Found statement at line 2: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
11:42 LOG: DEBUG[Found statement at line 3: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
11:42 LOG: DEBUG[Found statement at line 4: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
11:42 LOG: DEBUG[Found statement at line 6: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test1', 4, 'test1', 1, 1, 'security')]
11:42 LOG: DEBUG[Found statement at line 7: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test2', 4, 'test2', 1, 1, 'security')]
11:42 LOG: DEBUG[Found statement at line 8: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test3', 4, 'test3', 1, 1, 'security')]
11:42 LOG: DEBUG[Found statement at line 9: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test4', 4, 'test4', 1, 1, 'security')]
11:42 LOG: DEBUG[Parsing V1__init_schema.sql ...]
11:42 LOG: DEBUG[Found statement at line 1: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
11:42 LOG: DEBUG[Found statement at line 8: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
11:42 LOG: DEBUG[Found statement at line 16: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
11:42 LOG: DEBUG[Found statement at line 24: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
11:42 LOG: DEBUG[Found statement at line 36: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
11:42 LOG: DEBUG[Found statement at line 43: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
11:42 LOG: DEBUG[Found statement at line 59: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
11:42 LOG: DEBUG[Found statement at line 68: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
11:42 LOG: DEBUG[Filtering out resource: db/migration/V1_1__init_data.sql (filename: V1_1__init_data.sql)]
11:42 LOG: DEBUG[Filtering out resource: db/migration/V1__init_schema.sql (filename: V1__init_schema.sql)]
11:42 LOG: INFO [Successfully validated 2 migrations (execution time 00:00.026s)]
11:42 LOG: DEBUG[Schema "public" already exists. Skipping schema creation.]
11:42 LOG: INFO [Creating Schema History table: "public"."flyway_schema_history"]
11:42 LOG: DEBUG[Parsing createMetaDataTable.sql ...]
11:42 LOG: DEBUG[Found statement at line 17: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
11:42 LOG: DEBUG[Found statement at line 29: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
11:42 LOG: DEBUG[Found statement at line 31: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
11:42 LOG: DEBUG[Executing SQL: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
11:42 LOG: DEBUG[Update Count: 0]
11:42 LOG: DEBUG[Executing SQL: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
11:42 LOG: DEBUG[Update Count: 0]
11:42 LOG: DEBUG[Executing SQL: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
11:42 LOG: DEBUG[Update Count: 0]
11:42 LOG: DEBUG[Created Schema History table: "public"."flyway_schema_history"]
11:42 LOG: INFO [Current version of schema "public": << Empty Schema >>]
11:42 LOG: INFO [Migrating schema "public" to version 1 - init schema]
11:42 LOG: DEBUG[Executing SQL: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
11:42 LOG: DEBUG[Update Count: 0]
11:42 LOG: DEBUG[Executing SQL: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
11:42 LOG: DEBUG[Update Count: 0]
11:42 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
11:42 LOG: DEBUG[Update Count: 0]
11:42 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
11:42 LOG: DEBUG[Update Count: 0]
11:42 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
11:42 LOG: DEBUG[Update Count: 0]
11:42 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
11:42 LOG: DEBUG[Update Count: 0]
11:42 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
11:42 LOG: DEBUG[Update Count: 0]
11:42 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
11:42 LOG: DEBUG[Update Count: 0]
11:42 LOG: DEBUG[Successfully completed migration of schema "public" to version 1 - init schema]
11:42 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
11:42 LOG: INFO [Migrating schema "public" to version 1.1 - init data]
11:42 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
11:42 LOG: DEBUG[Update Count: 1]
11:42 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
11:42 LOG: DEBUG[Update Count: 1]
11:42 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
11:42 LOG: DEBUG[Update Count: 1]
11:42 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
11:42 LOG: DEBUG[Update Count: 1]
11:42 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test1', 4, 'test1', 1, 1, 'security')]
11:42 LOG: DEBUG[Update Count: 1]
11:42 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test2', 4, 'test2', 1, 1, 'security')]
11:42 LOG: DEBUG[Update Count: 1]
11:42 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test3', 4, 'test3', 1, 1, 'security')]
11:42 LOG: DEBUG[Update Count: 1]
11:42 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test4', 4, 'test4', 1, 1, 'security')]
11:42 LOG: DEBUG[Update Count: 1]
11:42 LOG: DEBUG[Successfully completed migration of schema "public" to version 1.1 - init data]
11:42 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
11:42 LOG: INFO [Successfully applied 2 migrations to schema "public" (execution time 00:00.179s)]
11:42 LOG: DEBUG[Memory usage: 13 of 126M]
11:42 LOG: DEBUG[Executing prepared SQL update]
11:42 LOG: DEBUG[Executing prepared SQL statement [INSERT INTO tour (photo, date, duration, description, cost, tour_type, hotel_id, country_id) VALUES (?,?::date,?,?,?,?::tour_type,?,?)]]
11:42 LOG: DEBUG[Fetching JDBC Connection from DataSource]
11:42 LOG: TRACE[Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]]
11:42 LOG: TRACE[Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]]
11:42 LOG: TRACE[Trying to resolve XML entity with public ID [-//SPRING//DTD BEAN 2.0//EN] and system ID [http://www.springframework.org/dtd/spring-beans-2.0.dtd]]
11:42 LOG: TRACE[Trying to locate [spring-beans.dtd] in Spring jar on classpath]
11:42 LOG: TRACE[Found beans DTD [http://www.springframework.org/dtd/spring-beans-2.0.dtd] in classpath: spring-beans.dtd]
11:42 LOG: TRACE[Alias definition 'Db2' registered for name 'DB2']
11:42 LOG: TRACE[Alias definition 'Hana' registered for name 'HDB']
11:42 LOG: TRACE[Alias definition 'Hsql' registered for name 'HSQL']
11:42 LOG: TRACE[Alias definition 'SqlServer' registered for name 'MS-SQL']
11:42 LOG: TRACE[Alias definition 'Postgres' registered for name 'PostgreSQL']
11:42 LOG: DEBUG[Loaded 11 bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]]
11:42 LOG: DEBUG[Creating shared instance of singleton bean 'DB2']
11:42 LOG: TRACE[Creating instance of bean 'DB2']
11:42 LOG: TRACE[Eagerly caching bean 'DB2' to allow for resolving potential circular references]
11:42 LOG: TRACE[Loaded [org.springframework.beans.BeanInfoFactory] names: [org.springframework.beans.ExtendedBeanInfoFactory]]
11:42 LOG: TRACE[Getting BeanInfo for class [org.springframework.jdbc.support.SQLErrorCodes]]
11:42 LOG: TRACE[Caching PropertyDescriptors for class [org.springframework.jdbc.support.SQLErrorCodes]]
11:42 LOG: TRACE[Found bean property 'badSqlGrammarCodes' of type [[Ljava.lang.String;]]
11:42 LOG: TRACE[Found bean property 'cannotAcquireLockCodes' of type [[Ljava.lang.String;]]
11:42 LOG: TRACE[Found bean property 'cannotSerializeTransactionCodes' of type [[Ljava.lang.String;]]
11:42 LOG: TRACE[Found bean property 'class' of type [java.lang.Class]]
11:42 LOG: TRACE[Found bean property 'customSqlExceptionTranslator' of type [org.springframework.jdbc.support.SQLExceptionTranslator]]
11:42 LOG: TRACE[Found bean property 'customSqlExceptionTranslatorClass' of type [java.lang.Class]]
11:42 LOG: TRACE[Found bean property 'customTranslations' of type [[Lorg.springframework.jdbc.support.CustomSQLErrorCodesTranslation;]]
11:42 LOG: TRACE[Found bean property 'dataAccessResourceFailureCodes' of type [[Ljava.lang.String;]]
11:42 LOG: TRACE[Found bean property 'dataIntegrityViolationCodes' of type [[Ljava.lang.String;]]
11:42 LOG: TRACE[Found bean property 'databaseProductName' of type [java.lang.String]]
11:42 LOG: TRACE[Found bean property 'databaseProductNames' of type [[Ljava.lang.String;]]
11:42 LOG: TRACE[Found bean property 'deadlockLoserCodes' of type [[Ljava.lang.String;]]
11:42 LOG: TRACE[Found bean property 'duplicateKeyCodes' of type [[Ljava.lang.String;]]
11:42 LOG: TRACE[Found bean property 'invalidResultSetAccessCodes' of type [[Ljava.lang.String;]]
11:42 LOG: TRACE[Found bean property 'permissionDeniedCodes' of type [[Ljava.lang.String;]]
11:42 LOG: TRACE[Found bean property 'transientDataAccessResourceCodes' of type [[Ljava.lang.String;]]
11:42 LOG: TRACE[Found bean property 'useSqlStateForTranslation' of type [boolean]]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@8f2098e]]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@8f2098e]]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@8f2098e]]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@8f2098e]]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@8f2098e]]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@8f2098e]]
11:42 LOG: TRACE[Finished creating instance of bean 'DB2']
11:42 LOG: DEBUG[Creating shared instance of singleton bean 'Derby']
11:42 LOG: TRACE[Creating instance of bean 'Derby']
11:42 LOG: TRACE[Eagerly caching bean 'Derby' to allow for resolving potential circular references]
11:42 LOG: TRACE[Converting String to [boolean] using property editor [org.springframework.beans.propertyeditors.CustomBooleanEditor@481e91b6]]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@7c8f9c2e]]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@7c8f9c2e]]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@7c8f9c2e]]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@7c8f9c2e]]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@7c8f9c2e]]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@7c8f9c2e]]
11:42 LOG: TRACE[Finished creating instance of bean 'Derby']
11:42 LOG: DEBUG[Creating shared instance of singleton bean 'H2']
11:42 LOG: TRACE[Creating instance of bean 'H2']
11:42 LOG: TRACE[Eagerly caching bean 'H2' to allow for resolving potential circular references]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@140d1230]]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@140d1230]]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@140d1230]]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@140d1230]]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@140d1230]]
11:42 LOG: TRACE[Finished creating instance of bean 'H2']
11:42 LOG: DEBUG[Creating shared instance of singleton bean 'HDB']
11:42 LOG: TRACE[Creating instance of bean 'HDB']
11:42 LOG: TRACE[Eagerly caching bean 'HDB' to allow for resolving potential circular references]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@7c1e32c9]]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@7c1e32c9]]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@7c1e32c9]]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@7c1e32c9]]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@7c1e32c9]]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@7c1e32c9]]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@7c1e32c9]]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@7c1e32c9]]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@7c1e32c9]]
11:42 LOG: TRACE[Finished creating instance of bean 'HDB']
11:42 LOG: DEBUG[Creating shared instance of singleton bean 'HSQL']
11:42 LOG: TRACE[Creating instance of bean 'HSQL']
11:42 LOG: TRACE[Eagerly caching bean 'HSQL' to allow for resolving potential circular references]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@383864d5]]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@383864d5]]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@383864d5]]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@383864d5]]
11:42 LOG: TRACE[Finished creating instance of bean 'HSQL']
11:42 LOG: DEBUG[Creating shared instance of singleton bean 'Informix']
11:42 LOG: TRACE[Creating instance of bean 'Informix']
11:42 LOG: TRACE[Eagerly caching bean 'Informix' to allow for resolving potential circular references]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@3dd818e8]]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@3dd818e8]]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@3dd818e8]]
11:42 LOG: TRACE[Finished creating instance of bean 'Informix']
11:42 LOG: DEBUG[Creating shared instance of singleton bean 'MS-SQL']
11:42 LOG: TRACE[Creating instance of bean 'MS-SQL']
11:42 LOG: TRACE[Eagerly caching bean 'MS-SQL' to allow for resolving potential circular references]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@4cb40e3b]]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@4cb40e3b]]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@4cb40e3b]]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@4cb40e3b]]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@4cb40e3b]]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@4cb40e3b]]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@4cb40e3b]]
11:42 LOG: TRACE[Finished creating instance of bean 'MS-SQL']
11:42 LOG: DEBUG[Creating shared instance of singleton bean 'MySQL']
11:42 LOG: TRACE[Creating instance of bean 'MySQL']
11:42 LOG: TRACE[Eagerly caching bean 'MySQL' to allow for resolving potential circular references]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@41b1f51e]]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@41b1f51e]]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@41b1f51e]]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@41b1f51e]]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@41b1f51e]]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@41b1f51e]]
11:42 LOG: TRACE[Finished creating instance of bean 'MySQL']
11:42 LOG: DEBUG[Creating shared instance of singleton bean 'Oracle']
11:42 LOG: TRACE[Creating instance of bean 'Oracle']
11:42 LOG: TRACE[Eagerly caching bean 'Oracle' to allow for resolving potential circular references]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@3a543f31]]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@3a543f31]]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@3a543f31]]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@3a543f31]]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@3a543f31]]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@3a543f31]]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@3a543f31]]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@3a543f31]]
11:42 LOG: TRACE[Finished creating instance of bean 'Oracle']
11:42 LOG: DEBUG[Creating shared instance of singleton bean 'PostgreSQL']
11:42 LOG: TRACE[Creating instance of bean 'PostgreSQL']
11:42 LOG: TRACE[Eagerly caching bean 'PostgreSQL' to allow for resolving potential circular references]
11:42 LOG: TRACE[Converting String to [boolean] using property editor [org.springframework.beans.propertyeditors.CustomBooleanEditor@47b67fcb]]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@2b9f74d0]]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@2b9f74d0]]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@2b9f74d0]]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@2b9f74d0]]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@2b9f74d0]]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@2b9f74d0]]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@2b9f74d0]]
11:42 LOG: TRACE[Finished creating instance of bean 'PostgreSQL']
11:42 LOG: DEBUG[Creating shared instance of singleton bean 'Sybase']
11:42 LOG: TRACE[Creating instance of bean 'Sybase']
11:42 LOG: TRACE[Eagerly caching bean 'Sybase' to allow for resolving potential circular references]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@65c86db8]]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@65c86db8]]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@65c86db8]]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@65c86db8]]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@65c86db8]]
11:42 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@65c86db8]]
11:42 LOG: TRACE[Finished creating instance of bean 'Sybase']
11:42 LOG: TRACE[SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]]
11:42 LOG: DEBUG[Looking up default SQLErrorCodes for DataSource [org.postgresql.ds.PGSimpleDataSource@7efe7b87]]
11:42 LOG: DEBUG[Fetching JDBC Connection from DataSource]
11:42 LOG: DEBUG[SQL error codes for 'PostgreSQL' found]
11:42 LOG: DEBUG[Caching SQL error codes for DataSource [org.postgresql.ds.PGSimpleDataSource@7efe7b87]: database product name is 'PostgreSQL']
11:42 LOG: DEBUG[Unable to translate SQLException with SQL state '07006', error code '0, will now try the fallback translator]
11:42 LOG: DEBUG[Extracted SQL state class '07' from value '07006']
11:46 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
11:46 LOG: INFO [Detected a Windows x86_64 system]
11:46 LOG: INFO [Postgres binaries at C:\Users\valik\AppData\Local\Temp\embedded-pg\PG-91c1fa33789b0c913345bf0253da6836]
11:46 LOG: TRACE[7b4e63ec-ab71-4be5-a18c-216703f82686 postgres data directory is C:\Users\valik\AppData\Local\Temp\epg15995880986706921912]
11:46 LOG: INFO [The files belonging to this database system will be owned by user "valik".]
11:46 LOG: INFO [This user must also own the server process.]
11:46 LOG: INFO []
11:46 LOG: INFO [The database cluster will be initialized with locale "Russian_Belarus.1251".]
11:46 LOG: INFO [The default text search configuration will be set to "russian".]
11:46 LOG: INFO []
11:46 LOG: INFO [Data page checksums are disabled.]
11:46 LOG: INFO []
11:46 LOG: INFO [fixing permissions on existing directory C:/Users/valik/AppData/Local/Temp/epg15995880986706921912 ... ok]
11:46 LOG: INFO [creating subdirectories ... ok]
11:46 LOG: INFO [selecting default max_connections ... 100]
11:46 LOG: INFO [selecting default shared_buffers ... 128MB]
11:46 LOG: INFO [selecting dynamic shared memory implementation ... windows]
11:46 LOG: INFO [creating configuration files ... ok]
11:46 LOG: INFO [running bootstrap script ... ok]
11:46 LOG: INFO [performing post-bootstrap initialization ... ok]
11:46 LOG: INFO [syncing data to disk ... ok]
11:46 LOG: INFO []
11:46 LOG: INFO [Success. You can now start the database server using:]
11:46 LOG: INFO []
11:46 LOG: INFO [    C:/Users/valik/AppData/Local/Temp/embedded-pg/PG-91c1fa33789b0c913345bf0253da6836/bin/pg_ctl -D ^"C^:^\Users^\valik^\AppData^\Local^\Temp^\epg15995880986706921912^" -l logfile start]
11:46 LOG: INFO []
11:46 LOG: INFO [7b4e63ec-ab71-4be5-a18c-216703f82686 initdb completed in 00:00:07.420]
11:46 LOG: INFO [7b4e63ec-ab71-4be5-a18c-216703f82686 postmaster started as Process[pid=16428, exitValue="not exited"] on port 51254.  Waiting up to PT10S for server startup to finish.]
11:46 LOG: INFO [waiting for server to start....2019-02-20 11:46:11.037 +03 [12396] ���������:  ��� ����� ����������� �� ������ IPv6 "::1" ������ ���� 51254]
11:46 LOG: INFO [2019-02-20 11:46:11.038 +03 [12396] ���������:  ��� ����� ����������� �� ������ IPv4 "127.0.0.1" ������ ���� 51254]
11:46 LOG: INFO [2019-02-20 11:46:11.116 +03 [14872] ���������:  ������� �� ���� ���������: 2019-02-20 11:46:09 +03]
11:46 LOG: INFO [2019-02-20 11:46:11.168 +03 [12396] ���������:  ������� �� ������ ��������� �����������]
11:46 LOG: INFO [ done]
11:46 LOG: INFO [server started]
11:46 LOG: TRACE[While waiting for server startup]
java.sql.SQLException: connect failed
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:341) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.waitForServerStartup(EmbeddedPostgres.java:315) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.startPostmaster(EmbeddedPostgres.java:275) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.<init>(EmbeddedPostgres.java:162) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres$Builder.start(EmbeddedPostgres.java:580) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.createOrFindPreparer(PreparedDbProvider.java:82) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.<init>(PreparedDbProvider.java:62) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.forPreparer(PreparedDbProvider.java:57) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.junit.PreparedDbRule.before(PreparedDbRule.java:55) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:46) [junit-4.12.jar:4.12]
	at org.junit.rules.RunRules.evaluate(RunRules.java:20) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) [junit-4.12.jar:4.12]
	at org.mockito.internal.runners.DefaultInternalRunner$1.run(DefaultInternalRunner.java:79) [mockito-core-2.24.5.jar:?]
	at org.mockito.internal.runners.DefaultInternalRunner.run(DefaultInternalRunner.java:85) [mockito-core-2.24.5.jar:?]
	at org.mockito.internal.runners.StrictRunner.run(StrictRunner.java:39) [mockito-core-2.24.5.jar:?]
	at org.mockito.junit.MockitoJUnitRunner.run(MockitoJUnitRunner.java:163) [mockito-core-2.24.5.jar:?]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) [junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) [junit-rt.jar:?]
Caused by: java.net.SocketTimeoutException: connect timed out
	at java.net.PlainSocketImpl.waitForConnect(Native Method) ~[?:?]
	at java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:107) ~[?:?]
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224) ~[?:?]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403) ~[?:?]
	at java.net.Socket.connect(Socket.java:591) ~[?:?]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:339) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	... 20 more
11:46 LOG: INFO [7b4e63ec-ab71-4be5-a18c-216703f82686 postmaster startup finished in 00:00:00.795]
11:46 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
11:46 LOG: INFO [Flyway Community Edition 5.2.4 by Boxfuse]
11:46 LOG: INFO [Database: jdbc:postgresql://localhost:51254/template1 (PostgreSQL 10.6)]
11:46 LOG: DEBUG[Driver  : PostgreSQL JDBC Driver 42.2.5]
11:46 LOG: DEBUG[DDL Transactions Supported: true]
11:46 LOG: DEBUG[Schema: public]
11:46 LOG: DEBUG[Scanning for classpath resources at 'classpath:db/migration' ...]
11:46 LOG: DEBUG[Determining location urls for classpath:db/migration using ClassLoader jdk.internal.loader.ClassLoaders$AppClassLoader@6ed3ef1 ...]
11:46 LOG: DEBUG[Scanning URL: file:/C:/Users/valik/IdeaProjects/java-lab-task-1/target/classes/db/migration]
11:46 LOG: DEBUG[JBoss VFS v2 available: false]
11:46 LOG: DEBUG[Scanning starting at classpath root in filesystem: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\]
11:46 LOG: DEBUG[Scanning for resources in path: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\db\migration (db/migration)]
11:46 LOG: DEBUG[Found resource: db/migration/V1_1__init_data.sql]
11:46 LOG: DEBUG[Found resource: db/migration/V1__init_schema.sql]
11:46 LOG: DEBUG[Scanning for classes at classpath:db/migration]
11:46 LOG: DEBUG[Scanning for SQL callbacks ...]
11:46 LOG: DEBUG[Spring Jdbc available: true]
11:46 LOG: DEBUG[Validating migrations ...]
11:46 LOG: DEBUG[Parsing V1_1__init_data.sql ...]
11:46 LOG: DEBUG[Found statement at line 1: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
11:46 LOG: DEBUG[Found statement at line 2: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
11:46 LOG: DEBUG[Found statement at line 3: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
11:46 LOG: DEBUG[Found statement at line 4: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
11:46 LOG: DEBUG[Found statement at line 6: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test1', 4, 'test1', 1, 1, 'security')]
11:46 LOG: DEBUG[Found statement at line 7: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test2', 4, 'test2', 1, 1, 'security')]
11:46 LOG: DEBUG[Found statement at line 8: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test3', 4, 'test3', 1, 1, 'security')]
11:46 LOG: DEBUG[Found statement at line 9: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test4', 4, 'test4', 1, 1, 'security')]
11:46 LOG: DEBUG[Parsing V1__init_schema.sql ...]
11:46 LOG: DEBUG[Found statement at line 1: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
11:46 LOG: DEBUG[Found statement at line 8: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
11:46 LOG: DEBUG[Found statement at line 16: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
11:46 LOG: DEBUG[Found statement at line 24: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
11:46 LOG: DEBUG[Found statement at line 36: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
11:46 LOG: DEBUG[Found statement at line 43: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
11:46 LOG: DEBUG[Found statement at line 59: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
11:46 LOG: DEBUG[Found statement at line 68: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
11:46 LOG: DEBUG[Filtering out resource: db/migration/V1_1__init_data.sql (filename: V1_1__init_data.sql)]
11:46 LOG: DEBUG[Filtering out resource: db/migration/V1__init_schema.sql (filename: V1__init_schema.sql)]
11:46 LOG: INFO [Successfully validated 2 migrations (execution time 00:00.026s)]
11:46 LOG: DEBUG[Schema "public" already exists. Skipping schema creation.]
11:46 LOG: INFO [Creating Schema History table: "public"."flyway_schema_history"]
11:46 LOG: DEBUG[Parsing createMetaDataTable.sql ...]
11:46 LOG: DEBUG[Found statement at line 17: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
11:46 LOG: DEBUG[Found statement at line 29: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
11:46 LOG: DEBUG[Found statement at line 31: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
11:46 LOG: DEBUG[Executing SQL: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
11:46 LOG: DEBUG[Update Count: 0]
11:46 LOG: DEBUG[Executing SQL: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
11:46 LOG: DEBUG[Update Count: 0]
11:46 LOG: DEBUG[Executing SQL: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
11:46 LOG: DEBUG[Update Count: 0]
11:46 LOG: DEBUG[Created Schema History table: "public"."flyway_schema_history"]
11:46 LOG: INFO [Current version of schema "public": << Empty Schema >>]
11:46 LOG: INFO [Migrating schema "public" to version 1 - init schema]
11:46 LOG: DEBUG[Executing SQL: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
11:46 LOG: DEBUG[Update Count: 0]
11:46 LOG: DEBUG[Executing SQL: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
11:46 LOG: DEBUG[Update Count: 0]
11:46 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
11:46 LOG: DEBUG[Update Count: 0]
11:46 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
11:46 LOG: DEBUG[Update Count: 0]
11:46 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
11:46 LOG: DEBUG[Update Count: 0]
11:46 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
11:46 LOG: DEBUG[Update Count: 0]
11:46 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
11:46 LOG: DEBUG[Update Count: 0]
11:46 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
11:46 LOG: DEBUG[Update Count: 0]
11:46 LOG: DEBUG[Successfully completed migration of schema "public" to version 1 - init schema]
11:46 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
11:46 LOG: INFO [Migrating schema "public" to version 1.1 - init data]
11:46 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
11:46 LOG: DEBUG[Update Count: 1]
11:46 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
11:46 LOG: DEBUG[Update Count: 1]
11:46 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
11:46 LOG: DEBUG[Update Count: 1]
11:46 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
11:46 LOG: DEBUG[Update Count: 1]
11:46 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test1', 4, 'test1', 1, 1, 'security')]
11:46 LOG: DEBUG[Update Count: 1]
11:46 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test2', 4, 'test2', 1, 1, 'security')]
11:46 LOG: DEBUG[Update Count: 1]
11:46 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test3', 4, 'test3', 1, 1, 'security')]
11:46 LOG: DEBUG[Update Count: 1]
11:46 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test4', 4, 'test4', 1, 1, 'security')]
11:46 LOG: DEBUG[Update Count: 1]
11:46 LOG: DEBUG[Successfully completed migration of schema "public" to version 1.1 - init data]
11:46 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
11:46 LOG: INFO [Successfully applied 2 migrations to schema "public" (execution time 00:00.186s)]
11:46 LOG: DEBUG[Memory usage: 13 of 126M]
11:46 LOG: DEBUG[Executing prepared SQL update]
11:46 LOG: DEBUG[Executing prepared SQL statement [INSERT INTO tour (photo, date, duration, description, cost, tour_type, hotel_id, country_id) VALUES (?,?,?,?,?,?::tour_type,?,?)]]
11:46 LOG: DEBUG[Fetching JDBC Connection from DataSource]
11:48 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
11:48 LOG: INFO [Detected a Windows x86_64 system]
11:48 LOG: INFO [Postgres binaries at C:\Users\valik\AppData\Local\Temp\embedded-pg\PG-91c1fa33789b0c913345bf0253da6836]
11:48 LOG: TRACE[6faf37f9-b95d-4f46-a8c5-2461eef47fe2 postgres data directory is C:\Users\valik\AppData\Local\Temp\epg10816133736929273904]
11:48 LOG: INFO [The files belonging to this database system will be owned by user "valik".]
11:48 LOG: INFO [This user must also own the server process.]
11:48 LOG: INFO []
11:48 LOG: INFO [The database cluster will be initialized with locale "Russian_Belarus.1251".]
11:48 LOG: INFO [The default text search configuration will be set to "russian".]
11:48 LOG: INFO []
11:48 LOG: INFO [Data page checksums are disabled.]
11:48 LOG: INFO []
11:48 LOG: INFO [fixing permissions on existing directory C:/Users/valik/AppData/Local/Temp/epg10816133736929273904 ... ok]
11:48 LOG: INFO [creating subdirectories ... ok]
11:48 LOG: INFO [selecting default max_connections ... 100]
11:48 LOG: INFO [selecting default shared_buffers ... 128MB]
11:48 LOG: INFO [selecting dynamic shared memory implementation ... windows]
11:48 LOG: INFO [creating configuration files ... ok]
11:48 LOG: INFO [running bootstrap script ... ok]
11:48 LOG: INFO [performing post-bootstrap initialization ... ok]
11:48 LOG: INFO [syncing data to disk ... ok]
11:48 LOG: INFO []
11:48 LOG: INFO [Success. You can now start the database server using:]
11:48 LOG: INFO []
11:48 LOG: INFO [    C:/Users/valik/AppData/Local/Temp/embedded-pg/PG-91c1fa33789b0c913345bf0253da6836/bin/pg_ctl -D ^"C^:^\Users^\valik^\AppData^\Local^\Temp^\epg10816133736929273904^" -l logfile start]
11:48 LOG: INFO []
11:48 LOG: INFO [6faf37f9-b95d-4f46-a8c5-2461eef47fe2 initdb completed in 00:00:07.304]
11:48 LOG: INFO [6faf37f9-b95d-4f46-a8c5-2461eef47fe2 postmaster started as Process[pid=16972, exitValue="not exited"] on port 51286.  Waiting up to PT10S for server startup to finish.]
11:48 LOG: INFO [waiting for server to start....2019-02-20 11:48:56.974 +03 [15308] ���������:  ��� ����� ����������� �� ������ IPv6 "::1" ������ ���� 51286]
11:48 LOG: INFO [2019-02-20 11:48:56.975 +03 [15308] ���������:  ��� ����� ����������� �� ������ IPv4 "127.0.0.1" ������ ���� 51286]
11:48 LOG: INFO [2019-02-20 11:48:57.052 +03 [3092] ���������:  ������� �� ���� ���������: 2019-02-20 11:48:55 +03]
11:48 LOG: INFO [2019-02-20 11:48:57.106 +03 [15308] ���������:  ������� �� ������ ��������� �����������]
11:48 LOG: INFO [ done]
11:48 LOG: INFO [server started]
11:48 LOG: TRACE[While waiting for server startup]
java.sql.SQLException: connect failed
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:341) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.waitForServerStartup(EmbeddedPostgres.java:315) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.startPostmaster(EmbeddedPostgres.java:275) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.<init>(EmbeddedPostgres.java:162) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres$Builder.start(EmbeddedPostgres.java:580) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.createOrFindPreparer(PreparedDbProvider.java:82) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.<init>(PreparedDbProvider.java:62) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.forPreparer(PreparedDbProvider.java:57) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.junit.PreparedDbRule.before(PreparedDbRule.java:55) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:46) [junit-4.12.jar:4.12]
	at org.junit.rules.RunRules.evaluate(RunRules.java:20) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) [junit-4.12.jar:4.12]
	at org.mockito.internal.runners.DefaultInternalRunner$1.run(DefaultInternalRunner.java:79) [mockito-core-2.24.5.jar:?]
	at org.mockito.internal.runners.DefaultInternalRunner.run(DefaultInternalRunner.java:85) [mockito-core-2.24.5.jar:?]
	at org.mockito.internal.runners.StrictRunner.run(StrictRunner.java:39) [mockito-core-2.24.5.jar:?]
	at org.mockito.junit.MockitoJUnitRunner.run(MockitoJUnitRunner.java:163) [mockito-core-2.24.5.jar:?]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) [junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) [junit-rt.jar:?]
Caused by: java.net.SocketTimeoutException: connect timed out
	at java.net.PlainSocketImpl.waitForConnect(Native Method) ~[?:?]
	at java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:107) ~[?:?]
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224) ~[?:?]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403) ~[?:?]
	at java.net.Socket.connect(Socket.java:591) ~[?:?]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:339) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	... 20 more
11:48 LOG: INFO [2019-02-20 11:48:57.600 +03 [2576] ���������:  �������� ��������� �����]
11:48 LOG: INFO [6faf37f9-b95d-4f46-a8c5-2461eef47fe2 postmaster startup finished in 00:00:00.998]
11:48 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
11:48 LOG: INFO [Flyway Community Edition 5.2.4 by Boxfuse]
11:48 LOG: INFO [Database: jdbc:postgresql://localhost:51286/template1 (PostgreSQL 10.6)]
11:48 LOG: DEBUG[Driver  : PostgreSQL JDBC Driver 42.2.5]
11:48 LOG: DEBUG[DDL Transactions Supported: true]
11:48 LOG: DEBUG[Schema: public]
11:48 LOG: DEBUG[Scanning for classpath resources at 'classpath:db/migration' ...]
11:48 LOG: DEBUG[Determining location urls for classpath:db/migration using ClassLoader jdk.internal.loader.ClassLoaders$AppClassLoader@6ed3ef1 ...]
11:48 LOG: DEBUG[Scanning URL: file:/C:/Users/valik/IdeaProjects/java-lab-task-1/target/classes/db/migration]
11:48 LOG: DEBUG[JBoss VFS v2 available: false]
11:48 LOG: DEBUG[Scanning starting at classpath root in filesystem: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\]
11:48 LOG: DEBUG[Scanning for resources in path: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\db\migration (db/migration)]
11:48 LOG: DEBUG[Found resource: db/migration/V1_1__init_data.sql]
11:48 LOG: DEBUG[Found resource: db/migration/V1__init_schema.sql]
11:48 LOG: DEBUG[Scanning for classes at classpath:db/migration]
11:48 LOG: DEBUG[Scanning for SQL callbacks ...]
11:48 LOG: DEBUG[Spring Jdbc available: true]
11:48 LOG: DEBUG[Validating migrations ...]
11:48 LOG: DEBUG[Parsing V1_1__init_data.sql ...]
11:48 LOG: DEBUG[Found statement at line 1: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
11:48 LOG: DEBUG[Found statement at line 2: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
11:48 LOG: DEBUG[Found statement at line 3: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
11:48 LOG: DEBUG[Found statement at line 4: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
11:48 LOG: DEBUG[Found statement at line 6: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test1', 4, 'test1', 1, 1, 'security')]
11:48 LOG: DEBUG[Found statement at line 7: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test2', 4, 'test2', 1, 1, 'security')]
11:48 LOG: DEBUG[Found statement at line 8: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test3', 4, 'test3', 1, 1, 'security')]
11:48 LOG: DEBUG[Found statement at line 9: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test4', 4, 'test4', 1, 1, 'security')]
11:48 LOG: DEBUG[Parsing V1__init_schema.sql ...]
11:48 LOG: DEBUG[Found statement at line 1: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
11:48 LOG: DEBUG[Found statement at line 8: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
11:48 LOG: DEBUG[Found statement at line 16: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
11:48 LOG: DEBUG[Found statement at line 24: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
11:48 LOG: DEBUG[Found statement at line 36: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
11:48 LOG: DEBUG[Found statement at line 43: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
11:48 LOG: DEBUG[Found statement at line 59: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
11:48 LOG: DEBUG[Found statement at line 68: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
11:48 LOG: DEBUG[Filtering out resource: db/migration/V1_1__init_data.sql (filename: V1_1__init_data.sql)]
11:48 LOG: DEBUG[Filtering out resource: db/migration/V1__init_schema.sql (filename: V1__init_schema.sql)]
11:48 LOG: INFO [Successfully validated 2 migrations (execution time 00:00.047s)]
11:48 LOG: DEBUG[Schema "public" already exists. Skipping schema creation.]
11:48 LOG: INFO [Creating Schema History table: "public"."flyway_schema_history"]
11:48 LOG: DEBUG[Parsing createMetaDataTable.sql ...]
11:48 LOG: DEBUG[Found statement at line 17: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
11:48 LOG: DEBUG[Found statement at line 29: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
11:48 LOG: DEBUG[Found statement at line 31: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
11:48 LOG: DEBUG[Executing SQL: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
11:48 LOG: DEBUG[Update Count: 0]
11:48 LOG: DEBUG[Executing SQL: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
11:48 LOG: DEBUG[Update Count: 0]
11:48 LOG: DEBUG[Executing SQL: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
11:48 LOG: DEBUG[Update Count: 0]
11:48 LOG: DEBUG[Created Schema History table: "public"."flyway_schema_history"]
11:48 LOG: INFO [Current version of schema "public": << Empty Schema >>]
11:48 LOG: INFO [Migrating schema "public" to version 1 - init schema]
11:48 LOG: DEBUG[Executing SQL: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
11:48 LOG: DEBUG[Update Count: 0]
11:48 LOG: DEBUG[Executing SQL: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
11:48 LOG: DEBUG[Update Count: 0]
11:48 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
11:48 LOG: DEBUG[Update Count: 0]
11:48 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
11:48 LOG: DEBUG[Update Count: 0]
11:48 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
11:48 LOG: DEBUG[Update Count: 0]
11:48 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
11:48 LOG: DEBUG[Update Count: 0]
11:48 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
11:48 LOG: DEBUG[Update Count: 0]
11:48 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
11:48 LOG: DEBUG[Update Count: 0]
11:48 LOG: DEBUG[Successfully completed migration of schema "public" to version 1 - init schema]
11:48 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
11:48 LOG: INFO [Migrating schema "public" to version 1.1 - init data]
11:48 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
11:48 LOG: DEBUG[Update Count: 1]
11:48 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
11:48 LOG: DEBUG[Update Count: 1]
11:48 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
11:48 LOG: DEBUG[Update Count: 1]
11:48 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
11:48 LOG: DEBUG[Update Count: 1]
11:48 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test1', 4, 'test1', 1, 1, 'security')]
11:48 LOG: DEBUG[Update Count: 1]
11:48 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test2', 4, 'test2', 1, 1, 'security')]
11:48 LOG: DEBUG[Update Count: 1]
11:48 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test3', 4, 'test3', 1, 1, 'security')]
11:48 LOG: DEBUG[Update Count: 1]
11:48 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test4', 4, 'test4', 1, 1, 'security')]
11:48 LOG: DEBUG[Update Count: 1]
11:48 LOG: DEBUG[Successfully completed migration of schema "public" to version 1.1 - init data]
11:48 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
11:48 LOG: INFO [Successfully applied 2 migrations to schema "public" (execution time 00:00.205s)]
11:48 LOG: DEBUG[Memory usage: 14 of 126M]
11:49 LOG: DEBUG[Executing prepared SQL update]
11:49 LOG: DEBUG[Executing prepared SQL statement [INSERT INTO tour (photo, date, duration, description, cost, tour_type, hotel_id, country_id) VALUES (?,?,?,?,?,?::tour_type,?,?)]]
11:49 LOG: DEBUG[Fetching JDBC Connection from DataSource]
11:50 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
11:50 LOG: INFO [Detected a Windows x86_64 system]
11:50 LOG: INFO [Postgres binaries at C:\Users\valik\AppData\Local\Temp\embedded-pg\PG-91c1fa33789b0c913345bf0253da6836]
11:50 LOG: TRACE[a29d252b-8ec5-4709-b80a-8e112d68d305 postgres data directory is C:\Users\valik\AppData\Local\Temp\epg7002637571448283314]
11:50 LOG: INFO [The files belonging to this database system will be owned by user "valik".]
11:50 LOG: INFO [This user must also own the server process.]
11:50 LOG: INFO []
11:50 LOG: INFO [The database cluster will be initialized with locale "Russian_Belarus.1251".]
11:50 LOG: INFO [The default text search configuration will be set to "russian".]
11:50 LOG: INFO []
11:50 LOG: INFO [Data page checksums are disabled.]
11:50 LOG: INFO []
11:50 LOG: INFO [fixing permissions on existing directory C:/Users/valik/AppData/Local/Temp/epg7002637571448283314 ... ok]
11:50 LOG: INFO [creating subdirectories ... ok]
11:50 LOG: INFO [selecting default max_connections ... 100]
11:50 LOG: INFO [selecting default shared_buffers ... 128MB]
11:50 LOG: INFO [selecting dynamic shared memory implementation ... windows]
11:50 LOG: INFO [creating configuration files ... ok]
11:50 LOG: INFO [running bootstrap script ... ok]
11:50 LOG: INFO [performing post-bootstrap initialization ... ok]
11:50 LOG: INFO [syncing data to disk ... ok]
11:50 LOG: INFO []
11:50 LOG: INFO [Success. You can now start the database server using:]
11:50 LOG: INFO []
11:50 LOG: INFO [    C:/Users/valik/AppData/Local/Temp/embedded-pg/PG-91c1fa33789b0c913345bf0253da6836/bin/pg_ctl -D ^"C^:^\Users^\valik^\AppData^\Local^\Temp^\epg7002637571448283314^" -l logfile start]
11:50 LOG: INFO []
11:50 LOG: INFO [a29d252b-8ec5-4709-b80a-8e112d68d305 initdb completed in 00:00:07.609]
11:50 LOG: INFO [a29d252b-8ec5-4709-b80a-8e112d68d305 postmaster started as Process[pid=1644, exitValue="not exited"] on port 51307.  Waiting up to PT10S for server startup to finish.]
11:50 LOG: INFO [waiting for server to start....2019-02-20 11:50:27.047 +03 [16824] ���������:  ��� ����� ����������� �� ������ IPv6 "::1" ������ ���� 51307]
11:50 LOG: INFO [2019-02-20 11:50:27.047 +03 [16824] ���������:  ��� ����� ����������� �� ������ IPv4 "127.0.0.1" ������ ���� 51307]
11:50 LOG: INFO [2019-02-20 11:50:27.125 +03 [3200] ���������:  ������� �� ���� ���������: 2019-02-20 11:50:25 +03]
11:50 LOG: INFO [2019-02-20 11:50:27.168 +03 [16824] ���������:  ������� �� ������ ��������� �����������]
11:50 LOG: INFO [ done]
11:50 LOG: INFO [server started]
11:50 LOG: TRACE[While waiting for server startup]
java.sql.SQLException: connect failed
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:341) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.waitForServerStartup(EmbeddedPostgres.java:315) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.startPostmaster(EmbeddedPostgres.java:275) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.<init>(EmbeddedPostgres.java:162) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres$Builder.start(EmbeddedPostgres.java:580) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.createOrFindPreparer(PreparedDbProvider.java:82) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.<init>(PreparedDbProvider.java:62) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.forPreparer(PreparedDbProvider.java:57) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.junit.PreparedDbRule.before(PreparedDbRule.java:55) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:46) [junit-4.12.jar:4.12]
	at org.junit.rules.RunRules.evaluate(RunRules.java:20) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) [junit-4.12.jar:4.12]
	at org.mockito.internal.runners.DefaultInternalRunner$1.run(DefaultInternalRunner.java:79) [mockito-core-2.24.5.jar:?]
	at org.mockito.internal.runners.DefaultInternalRunner.run(DefaultInternalRunner.java:85) [mockito-core-2.24.5.jar:?]
	at org.mockito.internal.runners.StrictRunner.run(StrictRunner.java:39) [mockito-core-2.24.5.jar:?]
	at org.mockito.junit.MockitoJUnitRunner.run(MockitoJUnitRunner.java:163) [mockito-core-2.24.5.jar:?]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) [junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) [junit-rt.jar:?]
Caused by: java.net.SocketTimeoutException: connect timed out
	at java.net.PlainSocketImpl.waitForConnect(Native Method) ~[?:?]
	at java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:107) ~[?:?]
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224) ~[?:?]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403) ~[?:?]
	at java.net.Socket.connect(Socket.java:591) ~[?:?]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:339) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	... 20 more
11:50 LOG: INFO [a29d252b-8ec5-4709-b80a-8e112d68d305 postmaster startup finished in 00:00:00.819]
11:50 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
11:50 LOG: INFO [Flyway Community Edition 5.2.4 by Boxfuse]
11:50 LOG: INFO [Database: jdbc:postgresql://localhost:51307/template1 (PostgreSQL 10.6)]
11:50 LOG: DEBUG[Driver  : PostgreSQL JDBC Driver 42.2.5]
11:50 LOG: DEBUG[DDL Transactions Supported: true]
11:50 LOG: DEBUG[Schema: public]
11:50 LOG: DEBUG[Scanning for classpath resources at 'classpath:db/migration' ...]
11:50 LOG: DEBUG[Determining location urls for classpath:db/migration using ClassLoader jdk.internal.loader.ClassLoaders$AppClassLoader@6ed3ef1 ...]
11:50 LOG: DEBUG[Scanning URL: file:/C:/Users/valik/IdeaProjects/java-lab-task-1/target/classes/db/migration]
11:50 LOG: DEBUG[JBoss VFS v2 available: false]
11:50 LOG: DEBUG[Scanning starting at classpath root in filesystem: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\]
11:50 LOG: DEBUG[Scanning for resources in path: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\db\migration (db/migration)]
11:50 LOG: DEBUG[Found resource: db/migration/V1_1__init_data.sql]
11:50 LOG: DEBUG[Found resource: db/migration/V1__init_schema.sql]
11:50 LOG: DEBUG[Scanning for classes at classpath:db/migration]
11:50 LOG: DEBUG[Scanning for SQL callbacks ...]
11:50 LOG: DEBUG[Spring Jdbc available: true]
11:50 LOG: DEBUG[Validating migrations ...]
11:50 LOG: DEBUG[Parsing V1_1__init_data.sql ...]
11:50 LOG: DEBUG[Found statement at line 1: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
11:50 LOG: DEBUG[Found statement at line 2: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
11:50 LOG: DEBUG[Found statement at line 3: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
11:50 LOG: DEBUG[Found statement at line 4: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
11:50 LOG: DEBUG[Found statement at line 6: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test1', 4, 'test1', 1, 1, 'security')]
11:50 LOG: DEBUG[Found statement at line 7: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test2', 4, 'test2', 1, 1, 'security')]
11:50 LOG: DEBUG[Found statement at line 8: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test3', 4, 'test3', 1, 1, 'security')]
11:50 LOG: DEBUG[Found statement at line 9: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test4', 4, 'test4', 1, 1, 'security')]
11:50 LOG: DEBUG[Parsing V1__init_schema.sql ...]
11:50 LOG: DEBUG[Found statement at line 1: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
11:50 LOG: DEBUG[Found statement at line 8: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
11:50 LOG: DEBUG[Found statement at line 16: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
11:50 LOG: DEBUG[Found statement at line 24: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
11:50 LOG: DEBUG[Found statement at line 36: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
11:50 LOG: DEBUG[Found statement at line 43: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
11:50 LOG: DEBUG[Found statement at line 59: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
11:50 LOG: DEBUG[Found statement at line 68: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
11:50 LOG: DEBUG[Filtering out resource: db/migration/V1_1__init_data.sql (filename: V1_1__init_data.sql)]
11:50 LOG: DEBUG[Filtering out resource: db/migration/V1__init_schema.sql (filename: V1__init_schema.sql)]
11:50 LOG: INFO [Successfully validated 2 migrations (execution time 00:00.024s)]
11:50 LOG: DEBUG[Schema "public" already exists. Skipping schema creation.]
11:50 LOG: INFO [Creating Schema History table: "public"."flyway_schema_history"]
11:50 LOG: DEBUG[Parsing createMetaDataTable.sql ...]
11:50 LOG: DEBUG[Found statement at line 17: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
11:50 LOG: DEBUG[Found statement at line 29: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
11:50 LOG: DEBUG[Found statement at line 31: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
11:50 LOG: DEBUG[Executing SQL: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
11:50 LOG: DEBUG[Update Count: 0]
11:50 LOG: DEBUG[Executing SQL: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
11:50 LOG: DEBUG[Update Count: 0]
11:50 LOG: DEBUG[Executing SQL: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
11:50 LOG: DEBUG[Update Count: 0]
11:50 LOG: DEBUG[Created Schema History table: "public"."flyway_schema_history"]
11:50 LOG: INFO [Current version of schema "public": << Empty Schema >>]
11:50 LOG: INFO [Migrating schema "public" to version 1 - init schema]
11:50 LOG: DEBUG[Executing SQL: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
11:50 LOG: DEBUG[Update Count: 0]
11:50 LOG: DEBUG[Executing SQL: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
11:50 LOG: DEBUG[Update Count: 0]
11:50 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
11:50 LOG: DEBUG[Update Count: 0]
11:50 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
11:50 LOG: DEBUG[Update Count: 0]
11:50 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
11:50 LOG: DEBUG[Update Count: 0]
11:50 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
11:50 LOG: DEBUG[Update Count: 0]
11:50 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
11:50 LOG: DEBUG[Update Count: 0]
11:50 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
11:50 LOG: DEBUG[Update Count: 0]
11:50 LOG: DEBUG[Successfully completed migration of schema "public" to version 1 - init schema]
11:50 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
11:50 LOG: INFO [Migrating schema "public" to version 1.1 - init data]
11:50 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
11:50 LOG: DEBUG[Update Count: 1]
11:50 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
11:50 LOG: DEBUG[Update Count: 1]
11:50 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
11:50 LOG: DEBUG[Update Count: 1]
11:50 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
11:50 LOG: DEBUG[Update Count: 1]
11:50 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test1', 4, 'test1', 1, 1, 'security')]
11:50 LOG: DEBUG[Update Count: 1]
11:50 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test2', 4, 'test2', 1, 1, 'security')]
11:50 LOG: DEBUG[Update Count: 1]
11:50 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test3', 4, 'test3', 1, 1, 'security')]
11:50 LOG: DEBUG[Update Count: 1]
11:50 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test4', 4, 'test4', 1, 1, 'security')]
11:50 LOG: DEBUG[Update Count: 1]
11:50 LOG: DEBUG[Successfully completed migration of schema "public" to version 1.1 - init data]
11:50 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
11:50 LOG: INFO [Successfully applied 2 migrations to schema "public" (execution time 00:00.173s)]
11:50 LOG: DEBUG[Memory usage: 13 of 126M]
11:50 LOG: DEBUG[Executing prepared SQL update]
11:50 LOG: DEBUG[Executing prepared SQL statement [INSERT INTO tour (photo, date, duration, description, cost, tour_type, hotel_id, country_id) VALUES (?,?,?,?,?,?::tour_type,?,?)]]
11:50 LOG: DEBUG[Fetching JDBC Connection from DataSource]
11:50 LOG: TRACE[Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]]
11:50 LOG: TRACE[Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]]
11:50 LOG: TRACE[Trying to resolve XML entity with public ID [-//SPRING//DTD BEAN 2.0//EN] and system ID [http://www.springframework.org/dtd/spring-beans-2.0.dtd]]
11:50 LOG: TRACE[Trying to locate [spring-beans.dtd] in Spring jar on classpath]
11:50 LOG: TRACE[Found beans DTD [http://www.springframework.org/dtd/spring-beans-2.0.dtd] in classpath: spring-beans.dtd]
11:50 LOG: TRACE[Alias definition 'Db2' registered for name 'DB2']
11:50 LOG: TRACE[Alias definition 'Hana' registered for name 'HDB']
11:50 LOG: TRACE[Alias definition 'Hsql' registered for name 'HSQL']
11:50 LOG: TRACE[Alias definition 'SqlServer' registered for name 'MS-SQL']
11:50 LOG: TRACE[Alias definition 'Postgres' registered for name 'PostgreSQL']
11:50 LOG: DEBUG[Loaded 11 bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]]
11:50 LOG: DEBUG[Creating shared instance of singleton bean 'DB2']
11:50 LOG: TRACE[Creating instance of bean 'DB2']
11:50 LOG: TRACE[Eagerly caching bean 'DB2' to allow for resolving potential circular references]
11:50 LOG: TRACE[Loaded [org.springframework.beans.BeanInfoFactory] names: [org.springframework.beans.ExtendedBeanInfoFactory]]
11:50 LOG: TRACE[Getting BeanInfo for class [org.springframework.jdbc.support.SQLErrorCodes]]
11:50 LOG: TRACE[Caching PropertyDescriptors for class [org.springframework.jdbc.support.SQLErrorCodes]]
11:50 LOG: TRACE[Found bean property 'badSqlGrammarCodes' of type [[Ljava.lang.String;]]
11:50 LOG: TRACE[Found bean property 'cannotAcquireLockCodes' of type [[Ljava.lang.String;]]
11:50 LOG: TRACE[Found bean property 'cannotSerializeTransactionCodes' of type [[Ljava.lang.String;]]
11:50 LOG: TRACE[Found bean property 'class' of type [java.lang.Class]]
11:50 LOG: TRACE[Found bean property 'customSqlExceptionTranslator' of type [org.springframework.jdbc.support.SQLExceptionTranslator]]
11:50 LOG: TRACE[Found bean property 'customSqlExceptionTranslatorClass' of type [java.lang.Class]]
11:50 LOG: TRACE[Found bean property 'customTranslations' of type [[Lorg.springframework.jdbc.support.CustomSQLErrorCodesTranslation;]]
11:50 LOG: TRACE[Found bean property 'dataAccessResourceFailureCodes' of type [[Ljava.lang.String;]]
11:50 LOG: TRACE[Found bean property 'dataIntegrityViolationCodes' of type [[Ljava.lang.String;]]
11:50 LOG: TRACE[Found bean property 'databaseProductName' of type [java.lang.String]]
11:50 LOG: TRACE[Found bean property 'databaseProductNames' of type [[Ljava.lang.String;]]
11:50 LOG: TRACE[Found bean property 'deadlockLoserCodes' of type [[Ljava.lang.String;]]
11:50 LOG: TRACE[Found bean property 'duplicateKeyCodes' of type [[Ljava.lang.String;]]
11:50 LOG: TRACE[Found bean property 'invalidResultSetAccessCodes' of type [[Ljava.lang.String;]]
11:50 LOG: TRACE[Found bean property 'permissionDeniedCodes' of type [[Ljava.lang.String;]]
11:50 LOG: TRACE[Found bean property 'transientDataAccessResourceCodes' of type [[Ljava.lang.String;]]
11:50 LOG: TRACE[Found bean property 'useSqlStateForTranslation' of type [boolean]]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@2b22a1cc]]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@2b22a1cc]]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@2b22a1cc]]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@2b22a1cc]]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@2b22a1cc]]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@2b22a1cc]]
11:50 LOG: TRACE[Finished creating instance of bean 'DB2']
11:50 LOG: DEBUG[Creating shared instance of singleton bean 'Derby']
11:50 LOG: TRACE[Creating instance of bean 'Derby']
11:50 LOG: TRACE[Eagerly caching bean 'Derby' to allow for resolving potential circular references]
11:50 LOG: TRACE[Converting String to [boolean] using property editor [org.springframework.beans.propertyeditors.CustomBooleanEditor@3936df72]]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@e8e0dec]]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@e8e0dec]]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@e8e0dec]]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@e8e0dec]]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@e8e0dec]]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@e8e0dec]]
11:50 LOG: TRACE[Finished creating instance of bean 'Derby']
11:50 LOG: DEBUG[Creating shared instance of singleton bean 'H2']
11:50 LOG: TRACE[Creating instance of bean 'H2']
11:50 LOG: TRACE[Eagerly caching bean 'H2' to allow for resolving potential circular references]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@12d1f1d4]]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@12d1f1d4]]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@12d1f1d4]]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@12d1f1d4]]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@12d1f1d4]]
11:50 LOG: TRACE[Finished creating instance of bean 'H2']
11:50 LOG: DEBUG[Creating shared instance of singleton bean 'HDB']
11:50 LOG: TRACE[Creating instance of bean 'HDB']
11:50 LOG: TRACE[Eagerly caching bean 'HDB' to allow for resolving potential circular references]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@19650aa6]]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@19650aa6]]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@19650aa6]]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@19650aa6]]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@19650aa6]]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@19650aa6]]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@19650aa6]]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@19650aa6]]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@19650aa6]]
11:50 LOG: TRACE[Finished creating instance of bean 'HDB']
11:50 LOG: DEBUG[Creating shared instance of singleton bean 'HSQL']
11:50 LOG: TRACE[Creating instance of bean 'HSQL']
11:50 LOG: TRACE[Eagerly caching bean 'HSQL' to allow for resolving potential circular references]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@3ce53f6a]]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@3ce53f6a]]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@3ce53f6a]]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@3ce53f6a]]
11:50 LOG: TRACE[Finished creating instance of bean 'HSQL']
11:50 LOG: DEBUG[Creating shared instance of singleton bean 'Informix']
11:50 LOG: TRACE[Creating instance of bean 'Informix']
11:50 LOG: TRACE[Eagerly caching bean 'Informix' to allow for resolving potential circular references]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@2d82408]]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@2d82408]]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@2d82408]]
11:50 LOG: TRACE[Finished creating instance of bean 'Informix']
11:50 LOG: DEBUG[Creating shared instance of singleton bean 'MS-SQL']
11:50 LOG: TRACE[Creating instance of bean 'MS-SQL']
11:50 LOG: TRACE[Eagerly caching bean 'MS-SQL' to allow for resolving potential circular references]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@3ee69ad8]]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@3ee69ad8]]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@3ee69ad8]]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@3ee69ad8]]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@3ee69ad8]]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@3ee69ad8]]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@3ee69ad8]]
11:50 LOG: TRACE[Finished creating instance of bean 'MS-SQL']
11:50 LOG: DEBUG[Creating shared instance of singleton bean 'MySQL']
11:50 LOG: TRACE[Creating instance of bean 'MySQL']
11:50 LOG: TRACE[Eagerly caching bean 'MySQL' to allow for resolving potential circular references]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@f679798]]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@f679798]]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@f679798]]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@f679798]]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@f679798]]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@f679798]]
11:50 LOG: TRACE[Finished creating instance of bean 'MySQL']
11:50 LOG: DEBUG[Creating shared instance of singleton bean 'Oracle']
11:50 LOG: TRACE[Creating instance of bean 'Oracle']
11:50 LOG: TRACE[Eagerly caching bean 'Oracle' to allow for resolving potential circular references]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@1a6cf771]]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@1a6cf771]]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@1a6cf771]]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@1a6cf771]]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@1a6cf771]]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@1a6cf771]]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@1a6cf771]]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@1a6cf771]]
11:50 LOG: TRACE[Finished creating instance of bean 'Oracle']
11:50 LOG: DEBUG[Creating shared instance of singleton bean 'PostgreSQL']
11:50 LOG: TRACE[Creating instance of bean 'PostgreSQL']
11:50 LOG: TRACE[Eagerly caching bean 'PostgreSQL' to allow for resolving potential circular references]
11:50 LOG: TRACE[Converting String to [boolean] using property editor [org.springframework.beans.propertyeditors.CustomBooleanEditor@59d77850]]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@53ed09e8]]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@53ed09e8]]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@53ed09e8]]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@53ed09e8]]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@53ed09e8]]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@53ed09e8]]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@53ed09e8]]
11:50 LOG: TRACE[Finished creating instance of bean 'PostgreSQL']
11:50 LOG: DEBUG[Creating shared instance of singleton bean 'Sybase']
11:50 LOG: TRACE[Creating instance of bean 'Sybase']
11:50 LOG: TRACE[Eagerly caching bean 'Sybase' to allow for resolving potential circular references]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@60859f5a]]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@60859f5a]]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@60859f5a]]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@60859f5a]]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@60859f5a]]
11:50 LOG: TRACE[Converting String to [class [Ljava.lang.String;] using property editor [org.springframework.beans.propertyeditors.StringArrayPropertyEditor@60859f5a]]
11:50 LOG: TRACE[Finished creating instance of bean 'Sybase']
11:50 LOG: TRACE[SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]]
11:50 LOG: DEBUG[Looking up default SQLErrorCodes for DataSource [org.postgresql.ds.PGSimpleDataSource@1daf3b44]]
11:50 LOG: DEBUG[Fetching JDBC Connection from DataSource]
11:50 LOG: DEBUG[SQL error codes for 'PostgreSQL' found]
11:50 LOG: DEBUG[Caching SQL error codes for DataSource [org.postgresql.ds.PGSimpleDataSource@1daf3b44]: database product name is 'PostgreSQL']
11:50 LOG: DEBUG[Translating SQLException with SQL state '23503', error code '0', message [ОШИБКА: INSERT или UPDATE в таблице "tour" нарушает ограничение внешнего ключа "tour_country_id_fkey"
  Подробности: Ключ (country_id)=(1) отсутствует в таблице "country".]; SQL was [INSERT INTO tour (photo, date, duration, description, cost, tour_type, hotel_id, country_id) VALUES (?,?,?,?,?,?::tour_type,?,?)] for task [PreparedStatementCallback]]
11:51 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
11:51 LOG: INFO [Detected a Windows x86_64 system]
11:51 LOG: INFO [Postgres binaries at C:\Users\valik\AppData\Local\Temp\embedded-pg\PG-91c1fa33789b0c913345bf0253da6836]
11:51 LOG: TRACE[91ab1c5d-6238-4b6e-84b2-dcee7d938b3a postgres data directory is C:\Users\valik\AppData\Local\Temp\epg1335077262058618217]
11:51 LOG: INFO [The files belonging to this database system will be owned by user "valik".]
11:51 LOG: INFO [This user must also own the server process.]
11:51 LOG: INFO []
11:51 LOG: INFO [The database cluster will be initialized with locale "Russian_Belarus.1251".]
11:51 LOG: INFO [The default text search configuration will be set to "russian".]
11:51 LOG: INFO []
11:51 LOG: INFO [Data page checksums are disabled.]
11:51 LOG: INFO []
11:51 LOG: INFO [fixing permissions on existing directory C:/Users/valik/AppData/Local/Temp/epg1335077262058618217 ... ok]
11:51 LOG: INFO [creating subdirectories ... ok]
11:51 LOG: INFO [selecting default max_connections ... 100]
11:51 LOG: INFO [selecting default shared_buffers ... 128MB]
11:51 LOG: INFO [selecting dynamic shared memory implementation ... windows]
11:51 LOG: INFO [creating configuration files ... ok]
11:51 LOG: INFO [running bootstrap script ... ok]
11:51 LOG: INFO [performing post-bootstrap initialization ... ok]
11:51 LOG: INFO [syncing data to disk ... ok]
11:51 LOG: INFO []
11:51 LOG: INFO [Success. You can now start the database server using:]
11:51 LOG: INFO []
11:51 LOG: INFO [    C:/Users/valik/AppData/Local/Temp/embedded-pg/PG-91c1fa33789b0c913345bf0253da6836/bin/pg_ctl -D ^"C^:^\Users^\valik^\AppData^\Local^\Temp^\epg1335077262058618217^" -l logfile start]
11:51 LOG: INFO []
11:51 LOG: INFO [91ab1c5d-6238-4b6e-84b2-dcee7d938b3a initdb completed in 00:00:07.507]
11:51 LOG: INFO [91ab1c5d-6238-4b6e-84b2-dcee7d938b3a postmaster started as Process[pid=360, exitValue="not exited"] on port 51331.  Waiting up to PT10S for server startup to finish.]
11:51 LOG: INFO [waiting for server to start....2019-02-20 11:51:41.658 +03 [11000] ���������:  ��� ����� ����������� �� ������ IPv6 "::1" ������ ���� 51331]
11:51 LOG: INFO [2019-02-20 11:51:41.658 +03 [11000] ���������:  ��� ����� ����������� �� ������ IPv4 "127.0.0.1" ������ ���� 51331]
11:51 LOG: INFO [2019-02-20 11:51:41.742 +03 [6464] ���������:  ������� �� ���� ���������: 2019-02-20 11:51:40 +03]
11:51 LOG: INFO [2019-02-20 11:51:41.794 +03 [11000] ���������:  ������� �� ������ ��������� �����������]
11:51 LOG: INFO [ done]
11:51 LOG: TRACE[While waiting for server startup]
java.sql.SQLException: connect failed
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:341) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.waitForServerStartup(EmbeddedPostgres.java:315) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.startPostmaster(EmbeddedPostgres.java:275) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.<init>(EmbeddedPostgres.java:162) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres$Builder.start(EmbeddedPostgres.java:580) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.createOrFindPreparer(PreparedDbProvider.java:82) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.<init>(PreparedDbProvider.java:62) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.forPreparer(PreparedDbProvider.java:57) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.junit.PreparedDbRule.before(PreparedDbRule.java:55) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:46) [junit-4.12.jar:4.12]
	at org.junit.rules.RunRules.evaluate(RunRules.java:20) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) [junit-4.12.jar:4.12]
	at org.mockito.internal.runners.DefaultInternalRunner$1.run(DefaultInternalRunner.java:79) [mockito-core-2.24.5.jar:?]
	at org.mockito.internal.runners.DefaultInternalRunner.run(DefaultInternalRunner.java:85) [mockito-core-2.24.5.jar:?]
	at org.mockito.internal.runners.StrictRunner.run(StrictRunner.java:39) [mockito-core-2.24.5.jar:?]
	at org.mockito.junit.MockitoJUnitRunner.run(MockitoJUnitRunner.java:163) [mockito-core-2.24.5.jar:?]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) [junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) [junit-rt.jar:?]
Caused by: java.net.SocketTimeoutException: connect timed out
	at java.net.PlainSocketImpl.waitForConnect(Native Method) ~[?:?]
	at java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:107) ~[?:?]
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224) ~[?:?]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403) ~[?:?]
	at java.net.Socket.connect(Socket.java:591) ~[?:?]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:339) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	... 20 more
11:51 LOG: INFO [91ab1c5d-6238-4b6e-84b2-dcee7d938b3a postmaster startup finished in 00:00:00.821]
11:51 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
11:51 LOG: INFO [Flyway Community Edition 5.2.4 by Boxfuse]
11:51 LOG: INFO [Database: jdbc:postgresql://localhost:51331/template1 (PostgreSQL 10.6)]
11:51 LOG: DEBUG[Driver  : PostgreSQL JDBC Driver 42.2.5]
11:51 LOG: DEBUG[DDL Transactions Supported: true]
11:51 LOG: DEBUG[Schema: public]
11:51 LOG: DEBUG[Scanning for classpath resources at 'classpath:db/migration' ...]
11:51 LOG: DEBUG[Determining location urls for classpath:db/migration using ClassLoader jdk.internal.loader.ClassLoaders$AppClassLoader@6ed3ef1 ...]
11:51 LOG: DEBUG[Scanning URL: file:/C:/Users/valik/IdeaProjects/java-lab-task-1/target/classes/db/migration]
11:51 LOG: DEBUG[JBoss VFS v2 available: false]
11:51 LOG: DEBUG[Scanning starting at classpath root in filesystem: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\]
11:51 LOG: DEBUG[Scanning for resources in path: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\db\migration (db/migration)]
11:51 LOG: DEBUG[Found resource: db/migration/V1_1__init_data.sql]
11:51 LOG: DEBUG[Found resource: db/migration/V1__init_schema.sql]
11:51 LOG: DEBUG[Scanning for classes at classpath:db/migration]
11:51 LOG: DEBUG[Scanning for SQL callbacks ...]
11:51 LOG: DEBUG[Spring Jdbc available: true]
11:51 LOG: DEBUG[Validating migrations ...]
11:51 LOG: DEBUG[Parsing V1_1__init_data.sql ...]
11:51 LOG: DEBUG[Found statement at line 1: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
11:51 LOG: DEBUG[Found statement at line 2: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
11:51 LOG: DEBUG[Found statement at line 3: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
11:51 LOG: DEBUG[Found statement at line 4: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
11:51 LOG: DEBUG[Found statement at line 6: INSERT INTO "country" (name) VALUES ('testCountry')]
11:51 LOG: DEBUG[Found statement at line 8: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test1', 4, 'test1', 1, 1, 'security')]
11:51 LOG: DEBUG[Found statement at line 9: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test2', 4, 'test2', 1, 1, 'security')]
11:51 LOG: DEBUG[Found statement at line 10: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test3', 4, 'test3', 1, 1, 'security')]
11:51 LOG: DEBUG[Found statement at line 11: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test4', 4, 'test4', 1, 1, 'security')]
11:51 LOG: DEBUG[Parsing V1__init_schema.sql ...]
11:51 LOG: DEBUG[Found statement at line 1: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
11:51 LOG: DEBUG[Found statement at line 8: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
11:51 LOG: DEBUG[Found statement at line 16: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
11:51 LOG: DEBUG[Found statement at line 24: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
11:51 LOG: DEBUG[Found statement at line 36: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
11:51 LOG: DEBUG[Found statement at line 43: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
11:51 LOG: DEBUG[Found statement at line 59: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
11:51 LOG: DEBUG[Found statement at line 68: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
11:51 LOG: DEBUG[Filtering out resource: db/migration/V1_1__init_data.sql (filename: V1_1__init_data.sql)]
11:51 LOG: DEBUG[Filtering out resource: db/migration/V1__init_schema.sql (filename: V1__init_schema.sql)]
11:51 LOG: INFO [Successfully validated 2 migrations (execution time 00:00.027s)]
11:51 LOG: DEBUG[Schema "public" already exists. Skipping schema creation.]
11:51 LOG: INFO [Creating Schema History table: "public"."flyway_schema_history"]
11:51 LOG: DEBUG[Parsing createMetaDataTable.sql ...]
11:51 LOG: DEBUG[Found statement at line 17: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
11:51 LOG: DEBUG[Found statement at line 29: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
11:51 LOG: DEBUG[Found statement at line 31: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
11:51 LOG: DEBUG[Executing SQL: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
11:51 LOG: DEBUG[Update Count: 0]
11:51 LOG: DEBUG[Executing SQL: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
11:51 LOG: DEBUG[Update Count: 0]
11:51 LOG: DEBUG[Executing SQL: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
11:51 LOG: DEBUG[Update Count: 0]
11:51 LOG: DEBUG[Created Schema History table: "public"."flyway_schema_history"]
11:51 LOG: INFO [Current version of schema "public": << Empty Schema >>]
11:51 LOG: INFO [Migrating schema "public" to version 1 - init schema]
11:51 LOG: DEBUG[Executing SQL: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
11:51 LOG: DEBUG[Update Count: 0]
11:51 LOG: DEBUG[Executing SQL: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
11:51 LOG: DEBUG[Update Count: 0]
11:51 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
11:51 LOG: DEBUG[Update Count: 0]
11:51 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
11:51 LOG: DEBUG[Update Count: 0]
11:51 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
11:51 LOG: DEBUG[Update Count: 0]
11:51 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
11:51 LOG: DEBUG[Update Count: 0]
11:51 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
11:51 LOG: DEBUG[Update Count: 0]
11:51 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
11:51 LOG: DEBUG[Update Count: 0]
11:51 LOG: DEBUG[Successfully completed migration of schema "public" to version 1 - init schema]
11:51 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
11:51 LOG: INFO [Migrating schema "public" to version 1.1 - init data]
11:51 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
11:51 LOG: DEBUG[Update Count: 1]
11:51 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
11:51 LOG: DEBUG[Update Count: 1]
11:51 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
11:51 LOG: DEBUG[Update Count: 1]
11:51 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
11:51 LOG: DEBUG[Update Count: 1]
11:51 LOG: DEBUG[Executing SQL: INSERT INTO "country" (name) VALUES ('testCountry')]
11:51 LOG: DEBUG[Update Count: 1]
11:51 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test1', 4, 'test1', 1, 1, 'security')]
11:51 LOG: DEBUG[Update Count: 1]
11:51 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test2', 4, 'test2', 1, 1, 'security')]
11:51 LOG: DEBUG[Update Count: 1]
11:51 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test3', 4, 'test3', 1, 1, 'security')]
11:51 LOG: DEBUG[Update Count: 1]
11:51 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test4', 4, 'test4', 1, 1, 'security')]
11:51 LOG: DEBUG[Update Count: 1]
11:51 LOG: DEBUG[Successfully completed migration of schema "public" to version 1.1 - init data]
11:51 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
11:51 LOG: INFO [Successfully applied 2 migrations to schema "public" (execution time 00:00.177s)]
11:51 LOG: DEBUG[Memory usage: 13 of 126M]
11:51 LOG: DEBUG[Executing prepared SQL update]
11:51 LOG: DEBUG[Executing prepared SQL statement [INSERT INTO tour (photo, date, duration, description, cost, tour_type, hotel_id, country_id) VALUES (?,?,?,?,?,?::tour_type,?,?)]]
11:51 LOG: DEBUG[Fetching JDBC Connection from DataSource]
11:51 LOG: TRACE[SQL update affected 1 rows]
11:52 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
11:52 LOG: INFO [Detected a Windows x86_64 system]
11:52 LOG: INFO [Postgres binaries at C:\Users\valik\AppData\Local\Temp\embedded-pg\PG-91c1fa33789b0c913345bf0253da6836]
11:52 LOG: TRACE[a92cc9e0-51dc-463c-b275-3ae19740df63 postgres data directory is C:\Users\valik\AppData\Local\Temp\epg18067402008518279494]
11:52 LOG: INFO [The files belonging to this database system will be owned by user "valik".]
11:52 LOG: INFO [This user must also own the server process.]
11:52 LOG: INFO []
11:52 LOG: INFO [The database cluster will be initialized with locale "Russian_Belarus.1251".]
11:52 LOG: INFO [The default text search configuration will be set to "russian".]
11:52 LOG: INFO []
11:52 LOG: INFO [Data page checksums are disabled.]
11:52 LOG: INFO []
11:52 LOG: INFO [fixing permissions on existing directory C:/Users/valik/AppData/Local/Temp/epg18067402008518279494 ... ok]
11:52 LOG: INFO [creating subdirectories ... ok]
11:52 LOG: INFO [selecting default max_connections ... 100]
11:52 LOG: INFO [selecting default shared_buffers ... 128MB]
11:52 LOG: INFO [selecting dynamic shared memory implementation ... windows]
11:52 LOG: INFO [creating configuration files ... ok]
11:52 LOG: INFO [running bootstrap script ... ok]
11:52 LOG: INFO [performing post-bootstrap initialization ... ok]
11:52 LOG: INFO [syncing data to disk ... ok]
11:52 LOG: INFO []
11:52 LOG: INFO [Success. You can now start the database server using:]
11:52 LOG: INFO []
11:52 LOG: INFO [    C:/Users/valik/AppData/Local/Temp/embedded-pg/PG-91c1fa33789b0c913345bf0253da6836/bin/pg_ctl -D ^"C^:^\Users^\valik^\AppData^\Local^\Temp^\epg18067402008518279494^" -l logfile start]
11:52 LOG: INFO []
11:52 LOG: INFO [a92cc9e0-51dc-463c-b275-3ae19740df63 initdb completed in 00:00:07.422]
11:52 LOG: INFO [a92cc9e0-51dc-463c-b275-3ae19740df63 postmaster started as Process[pid=9580, exitValue="not exited"] on port 51353.  Waiting up to PT10S for server startup to finish.]
11:52 LOG: INFO [waiting for server to start....2019-02-20 11:52:37.319 +03 [1912] ���������:  ��� ����� ����������� �� ������ IPv6 "::1" ������ ���� 51353]
11:52 LOG: INFO [2019-02-20 11:52:37.319 +03 [1912] ���������:  ��� ����� ����������� �� ������ IPv4 "127.0.0.1" ������ ���� 51353]
11:52 LOG: INFO [2019-02-20 11:52:37.394 +03 [3860] ���������:  ������� �� ���� ���������: 2019-02-20 11:52:36 +03]
11:52 LOG: INFO [2019-02-20 11:52:37.440 +03 [1912] ���������:  ������� �� ������ ��������� �����������]
11:52 LOG: INFO [ done]
11:52 LOG: TRACE[While waiting for server startup]
java.sql.SQLException: connect failed
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:341) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.waitForServerStartup(EmbeddedPostgres.java:315) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.startPostmaster(EmbeddedPostgres.java:275) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.<init>(EmbeddedPostgres.java:162) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres$Builder.start(EmbeddedPostgres.java:580) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.createOrFindPreparer(PreparedDbProvider.java:82) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.<init>(PreparedDbProvider.java:62) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.forPreparer(PreparedDbProvider.java:57) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.junit.PreparedDbRule.before(PreparedDbRule.java:55) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:46) [junit-4.12.jar:4.12]
	at org.junit.rules.RunRules.evaluate(RunRules.java:20) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) [junit-4.12.jar:4.12]
	at org.mockito.internal.runners.DefaultInternalRunner$1.run(DefaultInternalRunner.java:79) [mockito-core-2.24.5.jar:?]
	at org.mockito.internal.runners.DefaultInternalRunner.run(DefaultInternalRunner.java:85) [mockito-core-2.24.5.jar:?]
	at org.mockito.internal.runners.StrictRunner.run(StrictRunner.java:39) [mockito-core-2.24.5.jar:?]
	at org.mockito.junit.MockitoJUnitRunner.run(MockitoJUnitRunner.java:163) [mockito-core-2.24.5.jar:?]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) [junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) [junit-rt.jar:?]
Caused by: java.net.SocketTimeoutException: connect timed out
	at java.net.PlainSocketImpl.waitForConnect(Native Method) ~[?:?]
	at java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:107) ~[?:?]
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224) ~[?:?]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403) ~[?:?]
	at java.net.Socket.connect(Socket.java:591) ~[?:?]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:339) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	... 20 more
11:52 LOG: INFO [a92cc9e0-51dc-463c-b275-3ae19740df63 postmaster startup finished in 00:00:00.969]
11:52 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
11:52 LOG: INFO [Flyway Community Edition 5.2.4 by Boxfuse]
11:52 LOG: INFO [Database: jdbc:postgresql://localhost:51353/template1 (PostgreSQL 10.6)]
11:52 LOG: DEBUG[Driver  : PostgreSQL JDBC Driver 42.2.5]
11:52 LOG: DEBUG[DDL Transactions Supported: true]
11:52 LOG: DEBUG[Schema: public]
11:52 LOG: DEBUG[Scanning for classpath resources at 'classpath:db/migration' ...]
11:52 LOG: DEBUG[Determining location urls for classpath:db/migration using ClassLoader jdk.internal.loader.ClassLoaders$AppClassLoader@6ed3ef1 ...]
11:52 LOG: DEBUG[Scanning URL: file:/C:/Users/valik/IdeaProjects/java-lab-task-1/target/classes/db/migration]
11:52 LOG: DEBUG[JBoss VFS v2 available: false]
11:52 LOG: DEBUG[Scanning starting at classpath root in filesystem: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\]
11:52 LOG: DEBUG[Scanning for resources in path: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\db\migration (db/migration)]
11:52 LOG: DEBUG[Found resource: db/migration/V1_1__init_data.sql]
11:52 LOG: DEBUG[Found resource: db/migration/V1__init_schema.sql]
11:52 LOG: DEBUG[Scanning for classes at classpath:db/migration]
11:52 LOG: DEBUG[Scanning for SQL callbacks ...]
11:52 LOG: DEBUG[Spring Jdbc available: true]
11:52 LOG: DEBUG[Validating migrations ...]
11:52 LOG: DEBUG[Parsing V1_1__init_data.sql ...]
11:52 LOG: DEBUG[Found statement at line 1: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
11:52 LOG: DEBUG[Found statement at line 2: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
11:52 LOG: DEBUG[Found statement at line 3: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
11:52 LOG: DEBUG[Found statement at line 4: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
11:52 LOG: DEBUG[Found statement at line 6: INSERT INTO "country" (name) VALUES ('testCountry')]
11:52 LOG: DEBUG[Found statement at line 8: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test1', 4, 'test1', 1, 1, 'security')]
11:52 LOG: DEBUG[Found statement at line 9: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test2', 4, 'test2', 1, 1, 'security')]
11:52 LOG: DEBUG[Found statement at line 10: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test3', 4, 'test3', 1, 1, 'security')]
11:52 LOG: DEBUG[Found statement at line 11: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test4', 4, 'test4', 1, 1, 'security')]
11:52 LOG: DEBUG[Parsing V1__init_schema.sql ...]
11:52 LOG: DEBUG[Found statement at line 1: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
11:52 LOG: DEBUG[Found statement at line 8: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
11:52 LOG: DEBUG[Found statement at line 16: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
11:52 LOG: DEBUG[Found statement at line 24: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
11:52 LOG: DEBUG[Found statement at line 36: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
11:52 LOG: DEBUG[Found statement at line 43: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
11:52 LOG: DEBUG[Found statement at line 59: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
11:52 LOG: DEBUG[Found statement at line 68: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
11:52 LOG: DEBUG[Filtering out resource: db/migration/V1_1__init_data.sql (filename: V1_1__init_data.sql)]
11:52 LOG: DEBUG[Filtering out resource: db/migration/V1__init_schema.sql (filename: V1__init_schema.sql)]
11:52 LOG: INFO [Successfully validated 2 migrations (execution time 00:00.052s)]
11:52 LOG: DEBUG[Schema "public" already exists. Skipping schema creation.]
11:52 LOG: INFO [Creating Schema History table: "public"."flyway_schema_history"]
11:52 LOG: DEBUG[Parsing createMetaDataTable.sql ...]
11:52 LOG: DEBUG[Found statement at line 17: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
11:52 LOG: DEBUG[Found statement at line 29: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
11:52 LOG: DEBUG[Found statement at line 31: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
11:52 LOG: DEBUG[Executing SQL: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
11:52 LOG: DEBUG[Update Count: 0]
11:52 LOG: DEBUG[Executing SQL: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
11:52 LOG: DEBUG[Update Count: 0]
11:52 LOG: DEBUG[Executing SQL: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
11:52 LOG: DEBUG[Update Count: 0]
11:52 LOG: DEBUG[Created Schema History table: "public"."flyway_schema_history"]
11:52 LOG: INFO [Current version of schema "public": << Empty Schema >>]
11:52 LOG: INFO [Migrating schema "public" to version 1 - init schema]
11:52 LOG: DEBUG[Executing SQL: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
11:52 LOG: DEBUG[Update Count: 0]
11:52 LOG: DEBUG[Executing SQL: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
11:52 LOG: DEBUG[Update Count: 0]
11:52 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
11:52 LOG: DEBUG[Update Count: 0]
11:52 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
11:52 LOG: DEBUG[Update Count: 0]
11:52 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
11:52 LOG: DEBUG[Update Count: 0]
11:52 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
11:52 LOG: DEBUG[Update Count: 0]
11:52 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
11:52 LOG: DEBUG[Update Count: 0]
11:52 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
11:52 LOG: DEBUG[Update Count: 0]
11:52 LOG: DEBUG[Successfully completed migration of schema "public" to version 1 - init schema]
11:52 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
11:52 LOG: INFO [Migrating schema "public" to version 1.1 - init data]
11:52 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
11:52 LOG: DEBUG[Update Count: 1]
11:52 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
11:52 LOG: DEBUG[Update Count: 1]
11:52 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
11:52 LOG: DEBUG[Update Count: 1]
11:52 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
11:52 LOG: DEBUG[Update Count: 1]
11:52 LOG: DEBUG[Executing SQL: INSERT INTO "country" (name) VALUES ('testCountry')]
11:52 LOG: DEBUG[Update Count: 1]
11:52 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test1', 4, 'test1', 1, 1, 'security')]
11:52 LOG: DEBUG[Update Count: 1]
11:52 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test2', 4, 'test2', 1, 1, 'security')]
11:52 LOG: DEBUG[Update Count: 1]
11:52 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test3', 4, 'test3', 1, 1, 'security')]
11:52 LOG: DEBUG[Update Count: 1]
11:52 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test4', 4, 'test4', 1, 1, 'security')]
11:52 LOG: DEBUG[Update Count: 1]
11:52 LOG: DEBUG[Successfully completed migration of schema "public" to version 1.1 - init data]
11:52 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
11:52 LOG: INFO [Successfully applied 2 migrations to schema "public" (execution time 00:00.189s)]
11:52 LOG: DEBUG[Memory usage: 14 of 126M]
11:54 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
11:54 LOG: INFO [Detected a Windows x86_64 system]
11:54 LOG: INFO [Postgres binaries at C:\Users\valik\AppData\Local\Temp\embedded-pg\PG-91c1fa33789b0c913345bf0253da6836]
11:54 LOG: TRACE[7e0b5600-9641-42d9-8038-5233a8d05450 postgres data directory is C:\Users\valik\AppData\Local\Temp\epg12575234681930189379]
11:54 LOG: INFO [The files belonging to this database system will be owned by user "valik".]
11:54 LOG: INFO [This user must also own the server process.]
11:54 LOG: INFO []
11:54 LOG: INFO [The database cluster will be initialized with locale "Russian_Belarus.1251".]
11:54 LOG: INFO [The default text search configuration will be set to "russian".]
11:54 LOG: INFO []
11:54 LOG: INFO [Data page checksums are disabled.]
11:54 LOG: INFO []
11:54 LOG: INFO [fixing permissions on existing directory C:/Users/valik/AppData/Local/Temp/epg12575234681930189379 ... ok]
11:54 LOG: INFO [creating subdirectories ... ok]
11:54 LOG: INFO [selecting default max_connections ... 100]
11:54 LOG: INFO [selecting default shared_buffers ... 128MB]
11:54 LOG: INFO [selecting dynamic shared memory implementation ... windows]
11:54 LOG: INFO [creating configuration files ... ok]
11:54 LOG: INFO [running bootstrap script ... ok]
11:54 LOG: INFO [performing post-bootstrap initialization ... ok]
11:54 LOG: INFO [syncing data to disk ... ok]
11:54 LOG: INFO []
11:54 LOG: INFO [Success. You can now start the database server using:]
11:54 LOG: INFO []
11:54 LOG: INFO [    C:/Users/valik/AppData/Local/Temp/embedded-pg/PG-91c1fa33789b0c913345bf0253da6836/bin/pg_ctl -D ^"C^:^\Users^\valik^\AppData^\Local^\Temp^\epg12575234681930189379^" -l logfile start]
11:54 LOG: INFO []
11:54 LOG: INFO [7e0b5600-9641-42d9-8038-5233a8d05450 initdb completed in 00:00:07.334]
11:54 LOG: INFO [7e0b5600-9641-42d9-8038-5233a8d05450 postmaster started as Process[pid=7224, exitValue="not exited"] on port 51375.  Waiting up to PT10S for server startup to finish.]
11:54 LOG: INFO [waiting for server to start....2019-02-20 11:54:10.881 +03 [3056] ���������:  ��� ����� ����������� �� ������ IPv6 "::1" ������ ���� 51375]
11:54 LOG: INFO [2019-02-20 11:54:10.881 +03 [3056] ���������:  ��� ����� ����������� �� ������ IPv4 "127.0.0.1" ������ ���� 51375]
11:54 LOG: INFO [2019-02-20 11:54:10.959 +03 [9928] ���������:  ������� �� ���� ���������: 2019-02-20 11:54:09 +03]
11:54 LOG: INFO [2019-02-20 11:54:11.016 +03 [3056] ���������:  ������� �� ������ ��������� �����������]
11:54 LOG: INFO [ done]
11:54 LOG: TRACE[While waiting for server startup]
java.sql.SQLException: connect failed
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:341) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.waitForServerStartup(EmbeddedPostgres.java:315) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.startPostmaster(EmbeddedPostgres.java:275) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.<init>(EmbeddedPostgres.java:162) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres$Builder.start(EmbeddedPostgres.java:580) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.createOrFindPreparer(PreparedDbProvider.java:82) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.<init>(PreparedDbProvider.java:62) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.forPreparer(PreparedDbProvider.java:57) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.junit.PreparedDbRule.before(PreparedDbRule.java:55) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:46) [junit-4.12.jar:4.12]
	at org.junit.rules.RunRules.evaluate(RunRules.java:20) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) [junit-4.12.jar:4.12]
	at org.mockito.internal.runners.DefaultInternalRunner$1.run(DefaultInternalRunner.java:79) [mockito-core-2.24.5.jar:?]
	at org.mockito.internal.runners.DefaultInternalRunner.run(DefaultInternalRunner.java:85) [mockito-core-2.24.5.jar:?]
	at org.mockito.internal.runners.StrictRunner.run(StrictRunner.java:39) [mockito-core-2.24.5.jar:?]
	at org.mockito.junit.MockitoJUnitRunner.run(MockitoJUnitRunner.java:163) [mockito-core-2.24.5.jar:?]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) [junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) [junit-rt.jar:?]
Caused by: java.net.SocketTimeoutException: connect timed out
	at java.net.PlainSocketImpl.waitForConnect(Native Method) ~[?:?]
	at java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:107) ~[?:?]
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224) ~[?:?]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403) ~[?:?]
	at java.net.Socket.connect(Socket.java:591) ~[?:?]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:339) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	... 20 more
11:54 LOG: INFO [7e0b5600-9641-42d9-8038-5233a8d05450 postmaster startup finished in 00:00:00.959]
11:54 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
11:54 LOG: INFO [Flyway Community Edition 5.2.4 by Boxfuse]
11:54 LOG: INFO [Database: jdbc:postgresql://localhost:51375/template1 (PostgreSQL 10.6)]
11:54 LOG: DEBUG[Driver  : PostgreSQL JDBC Driver 42.2.5]
11:54 LOG: DEBUG[DDL Transactions Supported: true]
11:54 LOG: DEBUG[Schema: public]
11:54 LOG: DEBUG[Scanning for classpath resources at 'classpath:db/migration' ...]
11:54 LOG: DEBUG[Determining location urls for classpath:db/migration using ClassLoader jdk.internal.loader.ClassLoaders$AppClassLoader@6ed3ef1 ...]
11:54 LOG: DEBUG[Scanning URL: file:/C:/Users/valik/IdeaProjects/java-lab-task-1/target/classes/db/migration]
11:54 LOG: DEBUG[JBoss VFS v2 available: false]
11:54 LOG: DEBUG[Scanning starting at classpath root in filesystem: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\]
11:54 LOG: DEBUG[Scanning for resources in path: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\db\migration (db/migration)]
11:54 LOG: DEBUG[Found resource: db/migration/V1_1__init_data.sql]
11:54 LOG: DEBUG[Found resource: db/migration/V1__init_schema.sql]
11:54 LOG: DEBUG[Scanning for classes at classpath:db/migration]
11:54 LOG: DEBUG[Scanning for SQL callbacks ...]
11:54 LOG: DEBUG[Spring Jdbc available: true]
11:54 LOG: DEBUG[Validating migrations ...]
11:54 LOG: DEBUG[Parsing V1_1__init_data.sql ...]
11:54 LOG: DEBUG[Found statement at line 1: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
11:54 LOG: DEBUG[Found statement at line 2: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
11:54 LOG: DEBUG[Found statement at line 3: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
11:54 LOG: DEBUG[Found statement at line 4: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
11:54 LOG: DEBUG[Found statement at line 6: INSERT INTO "country" (name) VALUES ('testCountry')]
11:54 LOG: DEBUG[Found statement at line 8: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test1', 4, 'test1', 1, 1, 'security')]
11:54 LOG: DEBUG[Found statement at line 9: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test2', 4, 'test2', 1, 1, 'security')]
11:54 LOG: DEBUG[Found statement at line 10: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test3', 4, 'test3', 1, 1, 'security')]
11:54 LOG: DEBUG[Found statement at line 11: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test4', 4, 'test4', 1, 1, 'security')]
11:54 LOG: DEBUG[Parsing V1__init_schema.sql ...]
11:54 LOG: DEBUG[Found statement at line 1: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
11:54 LOG: DEBUG[Found statement at line 8: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
11:54 LOG: DEBUG[Found statement at line 16: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
11:54 LOG: DEBUG[Found statement at line 24: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
11:54 LOG: DEBUG[Found statement at line 36: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
11:54 LOG: DEBUG[Found statement at line 43: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
11:54 LOG: DEBUG[Found statement at line 59: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
11:54 LOG: DEBUG[Found statement at line 68: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
11:54 LOG: DEBUG[Filtering out resource: db/migration/V1_1__init_data.sql (filename: V1_1__init_data.sql)]
11:54 LOG: DEBUG[Filtering out resource: db/migration/V1__init_schema.sql (filename: V1__init_schema.sql)]
11:54 LOG: INFO [Successfully validated 2 migrations (execution time 00:00.055s)]
11:54 LOG: DEBUG[Schema "public" already exists. Skipping schema creation.]
11:54 LOG: INFO [Creating Schema History table: "public"."flyway_schema_history"]
11:54 LOG: DEBUG[Parsing createMetaDataTable.sql ...]
11:54 LOG: DEBUG[Found statement at line 17: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
11:54 LOG: DEBUG[Found statement at line 29: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
11:54 LOG: DEBUG[Found statement at line 31: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
11:54 LOG: DEBUG[Executing SQL: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
11:54 LOG: DEBUG[Update Count: 0]
11:54 LOG: DEBUG[Executing SQL: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
11:54 LOG: DEBUG[Update Count: 0]
11:54 LOG: DEBUG[Executing SQL: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
11:54 LOG: DEBUG[Update Count: 0]
11:54 LOG: DEBUG[Created Schema History table: "public"."flyway_schema_history"]
11:54 LOG: INFO [Current version of schema "public": << Empty Schema >>]
11:54 LOG: INFO [Migrating schema "public" to version 1 - init schema]
11:54 LOG: DEBUG[Executing SQL: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
11:54 LOG: DEBUG[Update Count: 0]
11:54 LOG: DEBUG[Executing SQL: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
11:54 LOG: DEBUG[Update Count: 0]
11:54 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
11:54 LOG: DEBUG[Update Count: 0]
11:54 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
11:54 LOG: DEBUG[Update Count: 0]
11:54 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
11:54 LOG: DEBUG[Update Count: 0]
11:54 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
11:54 LOG: DEBUG[Update Count: 0]
11:54 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
11:54 LOG: DEBUG[Update Count: 0]
11:54 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
11:54 LOG: DEBUG[Update Count: 0]
11:54 LOG: DEBUG[Successfully completed migration of schema "public" to version 1 - init schema]
11:54 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
11:54 LOG: INFO [Migrating schema "public" to version 1.1 - init data]
11:54 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
11:54 LOG: DEBUG[Update Count: 1]
11:54 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
11:54 LOG: DEBUG[Update Count: 1]
11:54 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
11:54 LOG: DEBUG[Update Count: 1]
11:54 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
11:54 LOG: DEBUG[Update Count: 1]
11:54 LOG: DEBUG[Executing SQL: INSERT INTO "country" (name) VALUES ('testCountry')]
11:54 LOG: DEBUG[Update Count: 1]
11:54 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test1', 4, 'test1', 1, 1, 'security')]
11:54 LOG: DEBUG[Update Count: 1]
11:54 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test2', 4, 'test2', 1, 1, 'security')]
11:54 LOG: DEBUG[Update Count: 1]
11:54 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test3', 4, 'test3', 1, 1, 'security')]
11:54 LOG: DEBUG[Update Count: 1]
11:54 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test4', 4, 'test4', 1, 1, 'security')]
11:54 LOG: DEBUG[Update Count: 1]
11:54 LOG: DEBUG[Successfully completed migration of schema "public" to version 1.1 - init data]
11:54 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
11:54 LOG: INFO [Successfully applied 2 migrations to schema "public" (execution time 00:00.186s)]
11:54 LOG: DEBUG[Memory usage: 14 of 126M]
11:55 LOG: DEBUG[Executing prepared SQL update]
11:55 LOG: DEBUG[Executing prepared SQL statement [INSERT INTO tour (photo, date, duration, description, cost, tour_type, hotel_id, country_id) VALUES (?,?,?,?,?,?::tour_type,?,?)]]
11:55 LOG: DEBUG[Fetching JDBC Connection from DataSource]
11:55 LOG: TRACE[SQL update affected 1 rows]
11:56 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
11:56 LOG: INFO [Detected a Windows x86_64 system]
11:56 LOG: INFO [Postgres binaries at C:\Users\valik\AppData\Local\Temp\embedded-pg\PG-91c1fa33789b0c913345bf0253da6836]
11:56 LOG: TRACE[e804d15c-e833-42e6-b79a-4a1767fe7ec2 postgres data directory is C:\Users\valik\AppData\Local\Temp\epg16088059632317655853]
11:56 LOG: INFO [The files belonging to this database system will be owned by user "valik".]
11:56 LOG: INFO [This user must also own the server process.]
11:56 LOG: INFO []
11:56 LOG: INFO [The database cluster will be initialized with locale "Russian_Belarus.1251".]
11:56 LOG: INFO [The default text search configuration will be set to "russian".]
11:56 LOG: INFO []
11:56 LOG: INFO [Data page checksums are disabled.]
11:56 LOG: INFO []
11:56 LOG: INFO [fixing permissions on existing directory C:/Users/valik/AppData/Local/Temp/epg16088059632317655853 ... ok]
11:56 LOG: INFO [creating subdirectories ... ok]
11:56 LOG: INFO [selecting default max_connections ... 100]
11:56 LOG: INFO [selecting default shared_buffers ... 128MB]
11:56 LOG: INFO [selecting dynamic shared memory implementation ... windows]
11:56 LOG: INFO [creating configuration files ... ok]
11:56 LOG: INFO [running bootstrap script ... ok]
11:56 LOG: INFO [performing post-bootstrap initialization ... ok]
11:56 LOG: INFO [syncing data to disk ... ok]
11:56 LOG: INFO []
11:56 LOG: INFO [Success. You can now start the database server using:]
11:56 LOG: INFO []
11:56 LOG: INFO [    C:/Users/valik/AppData/Local/Temp/embedded-pg/PG-91c1fa33789b0c913345bf0253da6836/bin/pg_ctl -D ^"C^:^\Users^\valik^\AppData^\Local^\Temp^\epg16088059632317655853^" -l logfile start]
11:56 LOG: INFO []
11:56 LOG: INFO [e804d15c-e833-42e6-b79a-4a1767fe7ec2 initdb completed in 00:00:07.492]
11:56 LOG: INFO [e804d15c-e833-42e6-b79a-4a1767fe7ec2 postmaster started as Process[pid=2036, exitValue="not exited"] on port 51405.  Waiting up to PT10S for server startup to finish.]
11:56 LOG: INFO [waiting for server to start....2019-02-20 11:56:27.418 +03 [8812] ���������:  ��� ����� ����������� �� ������ IPv6 "::1" ������ ���� 51405]
11:56 LOG: INFO [2019-02-20 11:56:27.419 +03 [8812] ���������:  ��� ����� ����������� �� ������ IPv4 "127.0.0.1" ������ ���� 51405]
11:56 LOG: INFO [2019-02-20 11:56:27.494 +03 [14780] ���������:  ������� �� ���� ���������: 2019-02-20 11:56:26 +03]
11:56 LOG: INFO [2019-02-20 11:56:27.563 +03 [8812] ���������:  ������� �� ������ ��������� �����������]
11:56 LOG: INFO [ done]
11:56 LOG: TRACE[While waiting for server startup]
java.sql.SQLException: connect failed
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:341) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.waitForServerStartup(EmbeddedPostgres.java:315) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.startPostmaster(EmbeddedPostgres.java:275) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.<init>(EmbeddedPostgres.java:162) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres$Builder.start(EmbeddedPostgres.java:580) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.createOrFindPreparer(PreparedDbProvider.java:82) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.<init>(PreparedDbProvider.java:62) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.forPreparer(PreparedDbProvider.java:57) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.junit.PreparedDbRule.before(PreparedDbRule.java:55) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:46) [junit-4.12.jar:4.12]
	at org.junit.rules.RunRules.evaluate(RunRules.java:20) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) [junit-4.12.jar:4.12]
	at org.mockito.internal.runners.DefaultInternalRunner$1.run(DefaultInternalRunner.java:79) [mockito-core-2.24.5.jar:?]
	at org.mockito.internal.runners.DefaultInternalRunner.run(DefaultInternalRunner.java:85) [mockito-core-2.24.5.jar:?]
	at org.mockito.internal.runners.StrictRunner.run(StrictRunner.java:39) [mockito-core-2.24.5.jar:?]
	at org.mockito.junit.MockitoJUnitRunner.run(MockitoJUnitRunner.java:163) [mockito-core-2.24.5.jar:?]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) [junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) [junit-rt.jar:?]
Caused by: java.net.SocketTimeoutException: connect timed out
	at java.net.PlainSocketImpl.waitForConnect(Native Method) ~[?:?]
	at java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:107) ~[?:?]
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224) ~[?:?]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403) ~[?:?]
	at java.net.Socket.connect(Socket.java:591) ~[?:?]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:339) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	... 20 more
11:56 LOG: INFO [e804d15c-e833-42e6-b79a-4a1767fe7ec2 postmaster startup finished in 00:00:00.816]
11:56 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
11:56 LOG: INFO [Flyway Community Edition 5.2.4 by Boxfuse]
11:56 LOG: INFO [Database: jdbc:postgresql://localhost:51405/template1 (PostgreSQL 10.6)]
11:56 LOG: DEBUG[Driver  : PostgreSQL JDBC Driver 42.2.5]
11:56 LOG: DEBUG[DDL Transactions Supported: true]
11:56 LOG: DEBUG[Schema: public]
11:56 LOG: DEBUG[Scanning for classpath resources at 'classpath:db/migration' ...]
11:56 LOG: DEBUG[Determining location urls for classpath:db/migration using ClassLoader jdk.internal.loader.ClassLoaders$AppClassLoader@6ed3ef1 ...]
11:56 LOG: DEBUG[Scanning URL: file:/C:/Users/valik/IdeaProjects/java-lab-task-1/target/classes/db/migration]
11:56 LOG: DEBUG[JBoss VFS v2 available: false]
11:56 LOG: DEBUG[Scanning starting at classpath root in filesystem: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\]
11:56 LOG: DEBUG[Scanning for resources in path: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\db\migration (db/migration)]
11:56 LOG: DEBUG[Found resource: db/migration/V1_1__init_data.sql]
11:56 LOG: DEBUG[Found resource: db/migration/V1__init_schema.sql]
11:56 LOG: DEBUG[Scanning for classes at classpath:db/migration]
11:56 LOG: DEBUG[Scanning for SQL callbacks ...]
11:56 LOG: DEBUG[Spring Jdbc available: true]
11:56 LOG: DEBUG[Validating migrations ...]
11:56 LOG: DEBUG[Parsing V1_1__init_data.sql ...]
11:56 LOG: DEBUG[Found statement at line 1: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
11:56 LOG: DEBUG[Found statement at line 2: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
11:56 LOG: DEBUG[Found statement at line 3: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
11:56 LOG: DEBUG[Found statement at line 4: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
11:56 LOG: DEBUG[Found statement at line 6: INSERT INTO "country" (name) VALUES ('testCountry')]
11:56 LOG: DEBUG[Found statement at line 8: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test1', 4, 'test1', 1, 1, 'security')]
11:56 LOG: DEBUG[Found statement at line 9: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test2', 4, 'test2', 1, 1, 'security')]
11:56 LOG: DEBUG[Found statement at line 10: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test3', 4, 'test3', 1, 1, 'security')]
11:56 LOG: DEBUG[Found statement at line 11: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test4', 4, 'test4', 1, 1, 'security')]
11:56 LOG: DEBUG[Parsing V1__init_schema.sql ...]
11:56 LOG: DEBUG[Found statement at line 1: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
11:56 LOG: DEBUG[Found statement at line 8: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
11:56 LOG: DEBUG[Found statement at line 16: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
11:56 LOG: DEBUG[Found statement at line 24: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
11:56 LOG: DEBUG[Found statement at line 36: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
11:56 LOG: DEBUG[Found statement at line 43: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
11:56 LOG: DEBUG[Found statement at line 59: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
11:56 LOG: DEBUG[Found statement at line 68: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
11:56 LOG: DEBUG[Filtering out resource: db/migration/V1_1__init_data.sql (filename: V1_1__init_data.sql)]
11:56 LOG: DEBUG[Filtering out resource: db/migration/V1__init_schema.sql (filename: V1__init_schema.sql)]
11:56 LOG: INFO [Successfully validated 2 migrations (execution time 00:00.024s)]
11:56 LOG: DEBUG[Schema "public" already exists. Skipping schema creation.]
11:56 LOG: INFO [Creating Schema History table: "public"."flyway_schema_history"]
11:56 LOG: DEBUG[Parsing createMetaDataTable.sql ...]
11:56 LOG: DEBUG[Found statement at line 17: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
11:56 LOG: DEBUG[Found statement at line 29: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
11:56 LOG: DEBUG[Found statement at line 31: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
11:56 LOG: DEBUG[Executing SQL: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
11:56 LOG: DEBUG[Update Count: 0]
11:56 LOG: DEBUG[Executing SQL: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
11:56 LOG: DEBUG[Update Count: 0]
11:56 LOG: DEBUG[Executing SQL: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
11:56 LOG: DEBUG[Update Count: 0]
11:56 LOG: DEBUG[Created Schema History table: "public"."flyway_schema_history"]
11:56 LOG: INFO [Current version of schema "public": << Empty Schema >>]
11:56 LOG: INFO [Migrating schema "public" to version 1 - init schema]
11:56 LOG: DEBUG[Executing SQL: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
11:56 LOG: DEBUG[Update Count: 0]
11:56 LOG: DEBUG[Executing SQL: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
11:56 LOG: DEBUG[Update Count: 0]
11:56 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
11:56 LOG: DEBUG[Update Count: 0]
11:56 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
11:56 LOG: DEBUG[Update Count: 0]
11:56 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
11:56 LOG: DEBUG[Update Count: 0]
11:56 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
11:56 LOG: DEBUG[Update Count: 0]
11:56 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
11:56 LOG: DEBUG[Update Count: 0]
11:56 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
11:56 LOG: DEBUG[Update Count: 0]
11:56 LOG: DEBUG[Successfully completed migration of schema "public" to version 1 - init schema]
11:56 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
11:56 LOG: INFO [Migrating schema "public" to version 1.1 - init data]
11:56 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
11:56 LOG: DEBUG[Update Count: 1]
11:56 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
11:56 LOG: DEBUG[Update Count: 1]
11:56 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
11:56 LOG: DEBUG[Update Count: 1]
11:56 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
11:56 LOG: DEBUG[Update Count: 1]
11:56 LOG: DEBUG[Executing SQL: INSERT INTO "country" (name) VALUES ('testCountry')]
11:56 LOG: DEBUG[Update Count: 1]
11:56 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test1', 4, 'test1', 1, 1, 'security')]
11:56 LOG: DEBUG[Update Count: 1]
11:56 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test2', 4, 'test2', 1, 1, 'security')]
11:56 LOG: DEBUG[Update Count: 1]
11:56 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test3', 4, 'test3', 1, 1, 'security')]
11:56 LOG: DEBUG[Update Count: 1]
11:56 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test4', 4, 'test4', 1, 1, 'security')]
11:56 LOG: DEBUG[Update Count: 1]
11:56 LOG: DEBUG[Successfully completed migration of schema "public" to version 1.1 - init data]
11:56 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
11:56 LOG: INFO [Successfully applied 2 migrations to schema "public" (execution time 00:00.169s)]
11:56 LOG: DEBUG[Memory usage: 13 of 126M]
11:56 LOG: DEBUG[Executing prepared SQL update]
11:56 LOG: DEBUG[Executing prepared SQL statement [INSERT INTO tour (photo, date, duration, description, cost, tour_type, hotel_id, country_id) VALUES (?,?,?,?,?,?::tour_type,?,?)]]
11:56 LOG: DEBUG[Fetching JDBC Connection from DataSource]
11:56 LOG: TRACE[SQL update affected 1 rows]
11:57 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
11:57 LOG: INFO [Detected a Windows x86_64 system]
11:57 LOG: INFO [Postgres binaries at C:\Users\valik\AppData\Local\Temp\embedded-pg\PG-91c1fa33789b0c913345bf0253da6836]
11:57 LOG: TRACE[2c4f9c67-df7b-4f98-be5f-6cb68fe2990c postgres data directory is C:\Users\valik\AppData\Local\Temp\epg14239353669913071088]
11:57 LOG: INFO [The files belonging to this database system will be owned by user "valik".]
11:57 LOG: INFO [This user must also own the server process.]
11:57 LOG: INFO []
11:57 LOG: INFO [The database cluster will be initialized with locale "Russian_Belarus.1251".]
11:57 LOG: INFO [The default text search configuration will be set to "russian".]
11:57 LOG: INFO []
11:57 LOG: INFO [Data page checksums are disabled.]
11:57 LOG: INFO []
11:57 LOG: INFO [fixing permissions on existing directory C:/Users/valik/AppData/Local/Temp/epg14239353669913071088 ... ok]
11:57 LOG: INFO [creating subdirectories ... ok]
11:57 LOG: INFO [selecting default max_connections ... 100]
11:57 LOG: INFO [selecting default shared_buffers ... 128MB]
11:57 LOG: INFO [selecting dynamic shared memory implementation ... windows]
11:57 LOG: INFO [creating configuration files ... ok]
11:57 LOG: INFO [running bootstrap script ... ok]
11:57 LOG: INFO [performing post-bootstrap initialization ... ok]
11:57 LOG: INFO [syncing data to disk ... ok]
11:57 LOG: INFO []
11:57 LOG: INFO [Success. You can now start the database server using:]
11:57 LOG: INFO []
11:57 LOG: INFO [    C:/Users/valik/AppData/Local/Temp/embedded-pg/PG-91c1fa33789b0c913345bf0253da6836/bin/pg_ctl -D ^"C^:^\Users^\valik^\AppData^\Local^\Temp^\epg14239353669913071088^" -l logfile start]
11:57 LOG: INFO []
11:57 LOG: INFO [2c4f9c67-df7b-4f98-be5f-6cb68fe2990c initdb completed in 00:00:07.466]
11:57 LOG: INFO [2c4f9c67-df7b-4f98-be5f-6cb68fe2990c postmaster started as Process[pid=15932, exitValue="not exited"] on port 51424.  Waiting up to PT10S for server startup to finish.]
11:57 LOG: INFO [waiting for server to start....2019-02-20 11:57:28.038 +03 [18200] ���������:  ��� ����� ����������� �� ������ IPv6 "::1" ������ ���� 51424]
11:57 LOG: INFO [2019-02-20 11:57:28.038 +03 [18200] ���������:  ��� ����� ����������� �� ������ IPv4 "127.0.0.1" ������ ���� 51424]
11:57 LOG: INFO [2019-02-20 11:57:28.118 +03 [15088] ���������:  ������� �� ���� ���������: 2019-02-20 11:57:26 +03]
11:57 LOG: INFO [2019-02-20 11:57:28.173 +03 [18200] ���������:  ������� �� ������ ��������� �����������]
11:57 LOG: INFO [ done]
11:57 LOG: TRACE[While waiting for server startup]
java.sql.SQLException: connect failed
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:341) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.waitForServerStartup(EmbeddedPostgres.java:315) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.startPostmaster(EmbeddedPostgres.java:275) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.<init>(EmbeddedPostgres.java:162) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres$Builder.start(EmbeddedPostgres.java:580) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.createOrFindPreparer(PreparedDbProvider.java:82) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.<init>(PreparedDbProvider.java:62) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.forPreparer(PreparedDbProvider.java:57) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.junit.PreparedDbRule.before(PreparedDbRule.java:55) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:46) [junit-4.12.jar:4.12]
	at org.junit.rules.RunRules.evaluate(RunRules.java:20) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) [junit-4.12.jar:4.12]
	at org.mockito.internal.runners.DefaultInternalRunner$1.run(DefaultInternalRunner.java:79) [mockito-core-2.24.5.jar:?]
	at org.mockito.internal.runners.DefaultInternalRunner.run(DefaultInternalRunner.java:85) [mockito-core-2.24.5.jar:?]
	at org.mockito.internal.runners.StrictRunner.run(StrictRunner.java:39) [mockito-core-2.24.5.jar:?]
	at org.mockito.junit.MockitoJUnitRunner.run(MockitoJUnitRunner.java:163) [mockito-core-2.24.5.jar:?]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) [junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) [junit-rt.jar:?]
Caused by: java.net.SocketTimeoutException: connect timed out
	at java.net.PlainSocketImpl.waitForConnect(Native Method) ~[?:?]
	at java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:107) ~[?:?]
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224) ~[?:?]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403) ~[?:?]
	at java.net.Socket.connect(Socket.java:591) ~[?:?]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:339) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	... 20 more
11:57 LOG: INFO [2c4f9c67-df7b-4f98-be5f-6cb68fe2990c postmaster startup finished in 00:00:00.807]
11:57 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
11:57 LOG: INFO [Flyway Community Edition 5.2.4 by Boxfuse]
11:57 LOG: INFO [Database: jdbc:postgresql://localhost:51424/template1 (PostgreSQL 10.6)]
11:57 LOG: DEBUG[Driver  : PostgreSQL JDBC Driver 42.2.5]
11:57 LOG: DEBUG[DDL Transactions Supported: true]
11:57 LOG: DEBUG[Schema: public]
11:57 LOG: DEBUG[Scanning for classpath resources at 'classpath:db/migration' ...]
11:57 LOG: DEBUG[Determining location urls for classpath:db/migration using ClassLoader jdk.internal.loader.ClassLoaders$AppClassLoader@6ed3ef1 ...]
11:57 LOG: DEBUG[Scanning URL: file:/C:/Users/valik/IdeaProjects/java-lab-task-1/target/classes/db/migration]
11:57 LOG: DEBUG[JBoss VFS v2 available: false]
11:57 LOG: DEBUG[Scanning starting at classpath root in filesystem: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\]
11:57 LOG: DEBUG[Scanning for resources in path: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\db\migration (db/migration)]
11:57 LOG: DEBUG[Found resource: db/migration/V1_1__init_data.sql]
11:57 LOG: DEBUG[Found resource: db/migration/V1__init_schema.sql]
11:57 LOG: DEBUG[Scanning for classes at classpath:db/migration]
11:57 LOG: DEBUG[Scanning for SQL callbacks ...]
11:57 LOG: DEBUG[Spring Jdbc available: true]
11:57 LOG: DEBUG[Validating migrations ...]
11:57 LOG: DEBUG[Parsing V1_1__init_data.sql ...]
11:57 LOG: DEBUG[Found statement at line 1: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
11:57 LOG: DEBUG[Found statement at line 2: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
11:57 LOG: DEBUG[Found statement at line 3: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
11:57 LOG: DEBUG[Found statement at line 4: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
11:57 LOG: DEBUG[Found statement at line 6: INSERT INTO "country" (name) VALUES ('testCountry')]
11:57 LOG: DEBUG[Found statement at line 8: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test1', 4, 'test1', 1, 1, 'security')]
11:57 LOG: DEBUG[Found statement at line 9: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test2', 4, 'test2', 1, 1, 'security')]
11:57 LOG: DEBUG[Found statement at line 10: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test3', 4, 'test3', 1, 1, 'security')]
11:57 LOG: DEBUG[Found statement at line 11: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test4', 4, 'test4', 1, 1, 'security')]
11:57 LOG: DEBUG[Parsing V1__init_schema.sql ...]
11:57 LOG: DEBUG[Found statement at line 1: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
11:57 LOG: DEBUG[Found statement at line 8: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
11:57 LOG: DEBUG[Found statement at line 16: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
11:57 LOG: DEBUG[Found statement at line 24: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
11:57 LOG: DEBUG[Found statement at line 36: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
11:57 LOG: DEBUG[Found statement at line 43: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
11:57 LOG: DEBUG[Found statement at line 59: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
11:57 LOG: DEBUG[Found statement at line 68: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
11:57 LOG: DEBUG[Filtering out resource: db/migration/V1_1__init_data.sql (filename: V1_1__init_data.sql)]
11:57 LOG: DEBUG[Filtering out resource: db/migration/V1__init_schema.sql (filename: V1__init_schema.sql)]
11:57 LOG: INFO [Successfully validated 2 migrations (execution time 00:00.027s)]
11:57 LOG: DEBUG[Schema "public" already exists. Skipping schema creation.]
11:57 LOG: INFO [Creating Schema History table: "public"."flyway_schema_history"]
11:57 LOG: DEBUG[Parsing createMetaDataTable.sql ...]
11:57 LOG: DEBUG[Found statement at line 17: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
11:57 LOG: DEBUG[Found statement at line 29: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
11:57 LOG: DEBUG[Found statement at line 31: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
11:57 LOG: DEBUG[Executing SQL: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
11:57 LOG: DEBUG[Update Count: 0]
11:57 LOG: DEBUG[Executing SQL: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
11:57 LOG: DEBUG[Update Count: 0]
11:57 LOG: DEBUG[Executing SQL: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
11:57 LOG: DEBUG[Update Count: 0]
11:57 LOG: DEBUG[Created Schema History table: "public"."flyway_schema_history"]
11:57 LOG: INFO [Current version of schema "public": << Empty Schema >>]
11:57 LOG: INFO [Migrating schema "public" to version 1 - init schema]
11:57 LOG: DEBUG[Executing SQL: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
11:57 LOG: DEBUG[Update Count: 0]
11:57 LOG: DEBUG[Executing SQL: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
11:57 LOG: DEBUG[Update Count: 0]
11:57 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
11:57 LOG: DEBUG[Update Count: 0]
11:57 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
11:57 LOG: DEBUG[Update Count: 0]
11:57 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
11:57 LOG: DEBUG[Update Count: 0]
11:57 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
11:57 LOG: DEBUG[Update Count: 0]
11:57 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
11:57 LOG: DEBUG[Update Count: 0]
11:57 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
11:57 LOG: DEBUG[Update Count: 0]
11:57 LOG: DEBUG[Successfully completed migration of schema "public" to version 1 - init schema]
11:57 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
11:57 LOG: INFO [Migrating schema "public" to version 1.1 - init data]
11:57 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
11:57 LOG: DEBUG[Update Count: 1]
11:57 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
11:57 LOG: DEBUG[Update Count: 1]
11:57 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
11:57 LOG: DEBUG[Update Count: 1]
11:57 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
11:57 LOG: DEBUG[Update Count: 1]
11:57 LOG: DEBUG[Executing SQL: INSERT INTO "country" (name) VALUES ('testCountry')]
11:57 LOG: DEBUG[Update Count: 1]
11:57 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test1', 4, 'test1', 1, 1, 'security')]
11:57 LOG: DEBUG[Update Count: 1]
11:57 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test2', 4, 'test2', 1, 1, 'security')]
11:57 LOG: DEBUG[Update Count: 1]
11:57 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test3', 4, 'test3', 1, 1, 'security')]
11:57 LOG: DEBUG[Update Count: 1]
11:57 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test4', 4, 'test4', 1, 1, 'security')]
11:57 LOG: DEBUG[Update Count: 1]
11:57 LOG: DEBUG[Successfully completed migration of schema "public" to version 1.1 - init data]
11:57 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
11:57 LOG: INFO [Successfully applied 2 migrations to schema "public" (execution time 00:00.167s)]
11:57 LOG: DEBUG[Memory usage: 13 of 126M]
11:57 LOG: DEBUG[Executing prepared SQL update]
11:57 LOG: DEBUG[Executing prepared SQL statement [INSERT INTO tour (photo, date, duration, description, cost, tour_type, hotel_id, country_id) VALUES (?,?,?,?,?,?::tour_type,?,?)]]
11:57 LOG: DEBUG[Fetching JDBC Connection from DataSource]
11:57 LOG: TRACE[SQL update affected 1 rows]
12:32 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
12:32 LOG: INFO [Detected a Windows x86_64 system]
12:32 LOG: INFO [Postgres binaries at C:\Users\valik\AppData\Local\Temp\embedded-pg\PG-91c1fa33789b0c913345bf0253da6836]
12:32 LOG: TRACE[0bcff8a0-8b26-4925-aef2-ef30a55e959d postgres data directory is C:\Users\valik\AppData\Local\Temp\epg17851366603197026618]
12:32 LOG: INFO [The files belonging to this database system will be owned by user "valik".]
12:32 LOG: INFO [This user must also own the server process.]
12:32 LOG: INFO []
12:32 LOG: INFO [The database cluster will be initialized with locale "Russian_Belarus.1251".]
12:32 LOG: INFO [The default text search configuration will be set to "russian".]
12:32 LOG: INFO []
12:32 LOG: INFO [Data page checksums are disabled.]
12:32 LOG: INFO []
12:32 LOG: INFO [fixing permissions on existing directory C:/Users/valik/AppData/Local/Temp/epg17851366603197026618 ... ok]
12:32 LOG: INFO [creating subdirectories ... ok]
12:32 LOG: INFO [selecting default max_connections ... 100]
12:32 LOG: INFO [selecting default shared_buffers ... 128MB]
12:32 LOG: INFO [selecting dynamic shared memory implementation ... windows]
12:32 LOG: INFO [creating configuration files ... ok]
12:32 LOG: INFO [running bootstrap script ... ok]
12:32 LOG: INFO [performing post-bootstrap initialization ... ok]
12:32 LOG: INFO [syncing data to disk ... ok]
12:32 LOG: INFO []
12:32 LOG: INFO [Success. You can now start the database server using:]
12:32 LOG: INFO []
12:32 LOG: INFO [    C:/Users/valik/AppData/Local/Temp/embedded-pg/PG-91c1fa33789b0c913345bf0253da6836/bin/pg_ctl -D ^"C^:^\Users^\valik^\AppData^\Local^\Temp^\epg17851366603197026618^" -l logfile start]
12:32 LOG: INFO []
12:32 LOG: INFO [0bcff8a0-8b26-4925-aef2-ef30a55e959d initdb completed in 00:00:09.062]
12:32 LOG: INFO [0bcff8a0-8b26-4925-aef2-ef30a55e959d postmaster started as Process[pid=15804, exitValue="not exited"] on port 51756.  Waiting up to PT10S for server startup to finish.]
12:32 LOG: INFO [waiting for server to start....2019-02-20 12:32:41.798 +03 [12876] ���������:  ��� ����� ����������� �� ������ IPv6 "::1" ������ ���� 51756]
12:32 LOG: INFO [2019-02-20 12:32:41.798 +03 [12876] ���������:  ��� ����� ����������� �� ������ IPv4 "127.0.0.1" ������ ���� 51756]
12:32 LOG: INFO [2019-02-20 12:32:41.880 +03 [13192] ���������:  ������� �� ���� ���������: 2019-02-20 12:32:40 +03]
12:32 LOG: INFO [2019-02-20 12:32:41.918 +03 [12876] ���������:  ������� �� ������ ��������� �����������]
12:32 LOG: INFO [ done]
12:32 LOG: TRACE[While waiting for server startup]
java.sql.SQLException: connect failed
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:341) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.waitForServerStartup(EmbeddedPostgres.java:315) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.startPostmaster(EmbeddedPostgres.java:275) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.<init>(EmbeddedPostgres.java:162) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres$Builder.start(EmbeddedPostgres.java:580) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.createOrFindPreparer(PreparedDbProvider.java:82) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.<init>(PreparedDbProvider.java:62) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.forPreparer(PreparedDbProvider.java:57) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.junit.PreparedDbRule.before(PreparedDbRule.java:55) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:46) [junit-4.12.jar:4.12]
	at org.junit.rules.RunRules.evaluate(RunRules.java:20) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) [junit-4.12.jar:4.12]
	at org.mockito.internal.runners.DefaultInternalRunner$1.run(DefaultInternalRunner.java:79) [mockito-core-2.24.5.jar:?]
	at org.mockito.internal.runners.DefaultInternalRunner.run(DefaultInternalRunner.java:85) [mockito-core-2.24.5.jar:?]
	at org.mockito.internal.runners.StrictRunner.run(StrictRunner.java:39) [mockito-core-2.24.5.jar:?]
	at org.mockito.junit.MockitoJUnitRunner.run(MockitoJUnitRunner.java:163) [mockito-core-2.24.5.jar:?]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) [junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) [junit-rt.jar:?]
Caused by: java.net.SocketTimeoutException: connect timed out
	at java.net.PlainSocketImpl.waitForConnect(Native Method) ~[?:?]
	at java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:107) ~[?:?]
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224) ~[?:?]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403) ~[?:?]
	at java.net.Socket.connect(Socket.java:591) ~[?:?]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:339) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	... 20 more
12:32 LOG: INFO [0bcff8a0-8b26-4925-aef2-ef30a55e959d postmaster startup finished in 00:00:00.843]
12:32 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
12:32 LOG: INFO [Flyway Community Edition 5.2.4 by Boxfuse]
12:32 LOG: INFO [Database: jdbc:postgresql://localhost:51756/template1 (PostgreSQL 10.6)]
12:32 LOG: DEBUG[Driver  : PostgreSQL JDBC Driver 42.2.5]
12:32 LOG: DEBUG[DDL Transactions Supported: true]
12:32 LOG: DEBUG[Schema: public]
12:32 LOG: DEBUG[Scanning for classpath resources at 'classpath:db/migration' ...]
12:32 LOG: DEBUG[Determining location urls for classpath:db/migration using ClassLoader jdk.internal.loader.ClassLoaders$AppClassLoader@6ed3ef1 ...]
12:32 LOG: DEBUG[Scanning URL: file:/C:/Users/valik/IdeaProjects/java-lab-task-1/target/classes/db/migration]
12:32 LOG: DEBUG[JBoss VFS v2 available: false]
12:32 LOG: DEBUG[Scanning starting at classpath root in filesystem: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\]
12:32 LOG: DEBUG[Scanning for resources in path: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\db\migration (db/migration)]
12:32 LOG: DEBUG[Found resource: db/migration/V1_1__init_data.sql]
12:32 LOG: DEBUG[Found resource: db/migration/V1__init_schema.sql]
12:32 LOG: DEBUG[Scanning for classes at classpath:db/migration]
12:32 LOG: DEBUG[Scanning for SQL callbacks ...]
12:32 LOG: DEBUG[Spring Jdbc available: true]
12:32 LOG: DEBUG[Validating migrations ...]
12:32 LOG: DEBUG[Parsing V1_1__init_data.sql ...]
12:32 LOG: DEBUG[Found statement at line 1: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
12:32 LOG: DEBUG[Found statement at line 2: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
12:32 LOG: DEBUG[Found statement at line 3: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
12:32 LOG: DEBUG[Found statement at line 4: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
12:32 LOG: DEBUG[Found statement at line 6: INSERT INTO "country" (name) VALUES ('testCountry')]
12:32 LOG: DEBUG[Found statement at line 8: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test1', 4, 'test1', 1, 1, 'security')]
12:32 LOG: DEBUG[Found statement at line 9: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test2', 4, 'test2', 1, 1, 'security')]
12:32 LOG: DEBUG[Found statement at line 10: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test3', 4, 'test3', 1, 1, 'security')]
12:32 LOG: DEBUG[Found statement at line 11: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test4', 4, 'test4', 1, 1, 'security')]
12:32 LOG: DEBUG[Parsing V1__init_schema.sql ...]
12:32 LOG: DEBUG[Found statement at line 1: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
12:32 LOG: DEBUG[Found statement at line 8: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
12:32 LOG: DEBUG[Found statement at line 16: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
12:32 LOG: DEBUG[Found statement at line 24: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
12:32 LOG: DEBUG[Found statement at line 36: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
12:32 LOG: DEBUG[Found statement at line 43: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
12:32 LOG: DEBUG[Found statement at line 59: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
12:32 LOG: DEBUG[Found statement at line 68: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
12:32 LOG: DEBUG[Filtering out resource: db/migration/V1_1__init_data.sql (filename: V1_1__init_data.sql)]
12:32 LOG: DEBUG[Filtering out resource: db/migration/V1__init_schema.sql (filename: V1__init_schema.sql)]
12:32 LOG: INFO [Successfully validated 2 migrations (execution time 00:00.034s)]
12:32 LOG: DEBUG[Schema "public" already exists. Skipping schema creation.]
12:32 LOG: INFO [Creating Schema History table: "public"."flyway_schema_history"]
12:32 LOG: DEBUG[Parsing createMetaDataTable.sql ...]
12:32 LOG: DEBUG[Found statement at line 17: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
12:32 LOG: DEBUG[Found statement at line 29: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
12:32 LOG: DEBUG[Found statement at line 31: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
12:32 LOG: DEBUG[Executing SQL: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
12:32 LOG: DEBUG[Update Count: 0]
12:32 LOG: DEBUG[Executing SQL: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
12:32 LOG: DEBUG[Update Count: 0]
12:32 LOG: DEBUG[Executing SQL: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
12:32 LOG: DEBUG[Update Count: 0]
12:32 LOG: DEBUG[Created Schema History table: "public"."flyway_schema_history"]
12:32 LOG: INFO [Current version of schema "public": << Empty Schema >>]
12:32 LOG: INFO [Migrating schema "public" to version 1 - init schema]
12:32 LOG: DEBUG[Executing SQL: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
12:32 LOG: DEBUG[Update Count: 0]
12:32 LOG: DEBUG[Executing SQL: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
12:32 LOG: DEBUG[Update Count: 0]
12:32 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
12:32 LOG: DEBUG[Update Count: 0]
12:32 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
12:32 LOG: DEBUG[Update Count: 0]
12:32 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
12:32 LOG: DEBUG[Update Count: 0]
12:32 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
12:32 LOG: DEBUG[Update Count: 0]
12:32 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
12:32 LOG: DEBUG[Update Count: 0]
12:32 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
12:32 LOG: DEBUG[Update Count: 0]
12:32 LOG: DEBUG[Successfully completed migration of schema "public" to version 1 - init schema]
12:32 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
12:32 LOG: INFO [Migrating schema "public" to version 1.1 - init data]
12:32 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
12:32 LOG: DEBUG[Update Count: 1]
12:32 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
12:32 LOG: DEBUG[Update Count: 1]
12:32 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
12:32 LOG: DEBUG[Update Count: 1]
12:32 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
12:32 LOG: DEBUG[Update Count: 1]
12:32 LOG: DEBUG[Executing SQL: INSERT INTO "country" (name) VALUES ('testCountry')]
12:32 LOG: DEBUG[Update Count: 1]
12:32 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test1', 4, 'test1', 1, 1, 'security')]
12:32 LOG: DEBUG[Update Count: 1]
12:32 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test2', 4, 'test2', 1, 1, 'security')]
12:32 LOG: DEBUG[Update Count: 1]
12:32 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test3', 4, 'test3', 1, 1, 'security')]
12:32 LOG: DEBUG[Update Count: 1]
12:32 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test4', 4, 'test4', 1, 1, 'security')]
12:32 LOG: DEBUG[Update Count: 1]
12:32 LOG: DEBUG[Successfully completed migration of schema "public" to version 1.1 - init data]
12:32 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
12:32 LOG: INFO [Successfully applied 2 migrations to schema "public" (execution time 00:00.177s)]
12:32 LOG: DEBUG[Memory usage: 13 of 126M]
12:32 LOG: DEBUG[Executing prepared SQL update]
12:32 LOG: DEBUG[Executing prepared SQL statement [INSERT INTO tour (photo, date, duration, description, cost, tour_type, hotel_id, country_id) VALUES (?,?,?,?,?,?::tour_type,?,?)]]
12:32 LOG: DEBUG[Fetching JDBC Connection from DataSource]
12:32 LOG: TRACE[SQL update affected 1 rows]
12:33 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
12:33 LOG: INFO [Detected a Windows x86_64 system]
12:33 LOG: INFO [Postgres binaries at C:\Users\valik\AppData\Local\Temp\embedded-pg\PG-91c1fa33789b0c913345bf0253da6836]
12:33 LOG: TRACE[f689da96-b516-4d65-9492-a8e3c655907d postgres data directory is C:\Users\valik\AppData\Local\Temp\epg4501660900023719259]
12:33 LOG: INFO [The files belonging to this database system will be owned by user "valik".]
12:33 LOG: INFO [This user must also own the server process.]
12:33 LOG: INFO []
12:33 LOG: INFO [The database cluster will be initialized with locale "Russian_Belarus.1251".]
12:33 LOG: INFO [The default text search configuration will be set to "russian".]
12:33 LOG: INFO []
12:33 LOG: INFO [Data page checksums are disabled.]
12:33 LOG: INFO []
12:33 LOG: INFO [fixing permissions on existing directory C:/Users/valik/AppData/Local/Temp/epg4501660900023719259 ... ok]
12:33 LOG: INFO [creating subdirectories ... ok]
12:33 LOG: INFO [selecting default max_connections ... 100]
12:33 LOG: INFO [selecting default shared_buffers ... 128MB]
12:33 LOG: INFO [selecting dynamic shared memory implementation ... windows]
12:33 LOG: INFO [creating configuration files ... ok]
12:33 LOG: INFO [running bootstrap script ... ok]
12:33 LOG: INFO [performing post-bootstrap initialization ... ok]
12:33 LOG: INFO [syncing data to disk ... ok]
12:33 LOG: INFO []
12:33 LOG: INFO [Success. You can now start the database server using:]
12:33 LOG: INFO []
12:33 LOG: INFO [    C:/Users/valik/AppData/Local/Temp/embedded-pg/PG-91c1fa33789b0c913345bf0253da6836/bin/pg_ctl -D ^"C^:^\Users^\valik^\AppData^\Local^\Temp^\epg4501660900023719259^" -l logfile start]
12:33 LOG: INFO []
12:33 LOG: INFO [f689da96-b516-4d65-9492-a8e3c655907d initdb completed in 00:00:08.082]
12:33 LOG: INFO [f689da96-b516-4d65-9492-a8e3c655907d postmaster started as Process[pid=10864, exitValue="not exited"] on port 51790.  Waiting up to PT10S for server startup to finish.]
12:33 LOG: INFO [waiting for server to start....2019-02-20 12:33:31.557 +03 [10004] ���������:  ��� ����� ����������� �� ������ IPv6 "::1" ������ ���� 51790]
12:33 LOG: INFO [2019-02-20 12:33:31.557 +03 [10004] ���������:  ��� ����� ����������� �� ������ IPv4 "127.0.0.1" ������ ���� 51790]
12:33 LOG: INFO [2019-02-20 12:33:31.643 +03 [16856] ���������:  ������� �� ���� ���������: 2019-02-20 12:33:30 +03]
12:33 LOG: INFO [2019-02-20 12:33:31.692 +03 [10004] ���������:  ������� �� ������ ��������� �����������]
12:33 LOG: INFO [ done]
12:33 LOG: TRACE[While waiting for server startup]
java.sql.SQLException: connect failed
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:341) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.waitForServerStartup(EmbeddedPostgres.java:315) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.startPostmaster(EmbeddedPostgres.java:275) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.<init>(EmbeddedPostgres.java:162) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres$Builder.start(EmbeddedPostgres.java:580) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.createOrFindPreparer(PreparedDbProvider.java:82) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.<init>(PreparedDbProvider.java:62) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.forPreparer(PreparedDbProvider.java:57) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.junit.PreparedDbRule.before(PreparedDbRule.java:55) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:46) [junit-4.12.jar:4.12]
	at org.junit.rules.RunRules.evaluate(RunRules.java:20) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) [junit-4.12.jar:4.12]
	at org.mockito.internal.runners.DefaultInternalRunner$1.run(DefaultInternalRunner.java:79) [mockito-core-2.24.5.jar:?]
	at org.mockito.internal.runners.DefaultInternalRunner.run(DefaultInternalRunner.java:85) [mockito-core-2.24.5.jar:?]
	at org.mockito.internal.runners.StrictRunner.run(StrictRunner.java:39) [mockito-core-2.24.5.jar:?]
	at org.mockito.junit.MockitoJUnitRunner.run(MockitoJUnitRunner.java:163) [mockito-core-2.24.5.jar:?]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) [junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) [junit-rt.jar:?]
Caused by: java.net.SocketTimeoutException: connect timed out
	at java.net.PlainSocketImpl.waitForConnect(Native Method) ~[?:?]
	at java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:107) ~[?:?]
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224) ~[?:?]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403) ~[?:?]
	at java.net.Socket.connect(Socket.java:591) ~[?:?]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:339) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	... 20 more
12:33 LOG: INFO [f689da96-b516-4d65-9492-a8e3c655907d postmaster startup finished in 00:00:00.797]
12:33 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
12:33 LOG: INFO [Flyway Community Edition 5.2.4 by Boxfuse]
12:33 LOG: INFO [Database: jdbc:postgresql://localhost:51790/template1 (PostgreSQL 10.6)]
12:33 LOG: DEBUG[Driver  : PostgreSQL JDBC Driver 42.2.5]
12:33 LOG: DEBUG[DDL Transactions Supported: true]
12:33 LOG: DEBUG[Schema: public]
12:33 LOG: DEBUG[Scanning for classpath resources at 'classpath:db/migration' ...]
12:33 LOG: DEBUG[Determining location urls for classpath:db/migration using ClassLoader jdk.internal.loader.ClassLoaders$AppClassLoader@6ed3ef1 ...]
12:33 LOG: DEBUG[Scanning URL: file:/C:/Users/valik/IdeaProjects/java-lab-task-1/target/classes/db/migration]
12:33 LOG: DEBUG[JBoss VFS v2 available: false]
12:33 LOG: DEBUG[Scanning starting at classpath root in filesystem: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\]
12:33 LOG: DEBUG[Scanning for resources in path: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\db\migration (db/migration)]
12:33 LOG: DEBUG[Found resource: db/migration/V1_1__init_data.sql]
12:33 LOG: DEBUG[Found resource: db/migration/V1__init_schema.sql]
12:33 LOG: DEBUG[Scanning for classes at classpath:db/migration]
12:33 LOG: DEBUG[Scanning for SQL callbacks ...]
12:33 LOG: DEBUG[Spring Jdbc available: true]
12:33 LOG: DEBUG[Validating migrations ...]
12:33 LOG: DEBUG[Parsing V1_1__init_data.sql ...]
12:33 LOG: DEBUG[Found statement at line 1: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
12:33 LOG: DEBUG[Found statement at line 2: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
12:33 LOG: DEBUG[Found statement at line 3: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
12:33 LOG: DEBUG[Found statement at line 4: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
12:33 LOG: DEBUG[Found statement at line 6: INSERT INTO "country" (name) VALUES ('testCountry')]
12:33 LOG: DEBUG[Found statement at line 8: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test1', 4, 'test1', 1, 1, 'security')]
12:33 LOG: DEBUG[Found statement at line 9: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test2', 4, 'test2', 1, 1, 'security')]
12:33 LOG: DEBUG[Found statement at line 10: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test3', 4, 'test3', 1, 1, 'security')]
12:33 LOG: DEBUG[Found statement at line 11: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test4', 4, 'test4', 1, 1, 'security')]
12:33 LOG: DEBUG[Parsing V1__init_schema.sql ...]
12:33 LOG: DEBUG[Found statement at line 1: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
12:33 LOG: DEBUG[Found statement at line 8: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
12:33 LOG: DEBUG[Found statement at line 16: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
12:33 LOG: DEBUG[Found statement at line 24: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
12:33 LOG: DEBUG[Found statement at line 36: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
12:33 LOG: DEBUG[Found statement at line 43: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
12:33 LOG: DEBUG[Found statement at line 59: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
12:33 LOG: DEBUG[Found statement at line 68: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
12:33 LOG: DEBUG[Filtering out resource: db/migration/V1_1__init_data.sql (filename: V1_1__init_data.sql)]
12:33 LOG: DEBUG[Filtering out resource: db/migration/V1__init_schema.sql (filename: V1__init_schema.sql)]
12:33 LOG: INFO [Successfully validated 2 migrations (execution time 00:00.026s)]
12:33 LOG: DEBUG[Schema "public" already exists. Skipping schema creation.]
12:33 LOG: INFO [Creating Schema History table: "public"."flyway_schema_history"]
12:33 LOG: DEBUG[Parsing createMetaDataTable.sql ...]
12:33 LOG: DEBUG[Found statement at line 17: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
12:33 LOG: DEBUG[Found statement at line 29: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
12:33 LOG: DEBUG[Found statement at line 31: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
12:33 LOG: DEBUG[Executing SQL: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
12:33 LOG: DEBUG[Update Count: 0]
12:33 LOG: DEBUG[Executing SQL: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
12:33 LOG: DEBUG[Update Count: 0]
12:33 LOG: DEBUG[Executing SQL: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
12:33 LOG: DEBUG[Update Count: 0]
12:33 LOG: DEBUG[Created Schema History table: "public"."flyway_schema_history"]
12:33 LOG: INFO [Current version of schema "public": << Empty Schema >>]
12:33 LOG: INFO [Migrating schema "public" to version 1 - init schema]
12:33 LOG: DEBUG[Executing SQL: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
12:33 LOG: DEBUG[Update Count: 0]
12:33 LOG: DEBUG[Executing SQL: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
12:33 LOG: DEBUG[Update Count: 0]
12:33 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
12:33 LOG: DEBUG[Update Count: 0]
12:33 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
12:33 LOG: DEBUG[Update Count: 0]
12:33 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
12:33 LOG: DEBUG[Update Count: 0]
12:33 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
12:33 LOG: DEBUG[Update Count: 0]
12:33 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
12:33 LOG: DEBUG[Update Count: 0]
12:33 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
12:33 LOG: DEBUG[Update Count: 0]
12:33 LOG: DEBUG[Successfully completed migration of schema "public" to version 1 - init schema]
12:33 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
12:33 LOG: INFO [Migrating schema "public" to version 1.1 - init data]
12:33 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
12:33 LOG: DEBUG[Update Count: 1]
12:33 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
12:33 LOG: DEBUG[Update Count: 1]
12:33 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
12:33 LOG: DEBUG[Update Count: 1]
12:33 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
12:33 LOG: DEBUG[Update Count: 1]
12:33 LOG: DEBUG[Executing SQL: INSERT INTO "country" (name) VALUES ('testCountry')]
12:33 LOG: DEBUG[Update Count: 1]
12:33 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test1', 4, 'test1', 1, 1, 'security')]
12:33 LOG: DEBUG[Update Count: 1]
12:33 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test2', 4, 'test2', 1, 1, 'security')]
12:33 LOG: DEBUG[Update Count: 1]
12:33 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test3', 4, 'test3', 1, 1, 'security')]
12:33 LOG: DEBUG[Update Count: 1]
12:33 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test4', 4, 'test4', 1, 1, 'security')]
12:33 LOG: DEBUG[Update Count: 1]
12:33 LOG: DEBUG[Successfully completed migration of schema "public" to version 1.1 - init data]
12:33 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
12:33 LOG: INFO [Successfully applied 2 migrations to schema "public" (execution time 00:00.179s)]
12:33 LOG: DEBUG[Memory usage: 13 of 126M]
12:33 LOG: DEBUG[Executing prepared SQL update]
12:33 LOG: DEBUG[Executing prepared SQL statement [INSERT INTO tour (photo, date, duration, description, cost, tour_type, hotel_id, country_id) VALUES (?,?,?,?,?,?::tour_type,?,?)]]
12:33 LOG: DEBUG[Fetching JDBC Connection from DataSource]
12:33 LOG: TRACE[SQL update affected 1 rows]
12:33 LOG: DEBUG[Executing SQL query [SELECT t.id as tour_id, photo, date, duration, description, cost, tour_type, hotel_id, country_id, c.name as country_name, h.name as hotel_name, h.stars, h.website, h.latitude, h.longitude, h.feature  FROM tour t JOIN country c on t.country_id = c.id JOIN hotel h on t.hotel_id = h.id]]
12:33 LOG: DEBUG[Fetching JDBC Connection from DataSource]
12:34 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
12:34 LOG: INFO [Detected a Windows x86_64 system]
12:34 LOG: INFO [Postgres binaries at C:\Users\valik\AppData\Local\Temp\embedded-pg\PG-91c1fa33789b0c913345bf0253da6836]
12:34 LOG: TRACE[d60aacaf-4f77-4ae2-9643-59e2ea82bac5 postgres data directory is C:\Users\valik\AppData\Local\Temp\epg3088631916925991465]
12:34 LOG: INFO [The files belonging to this database system will be owned by user "valik".]
12:34 LOG: INFO [This user must also own the server process.]
12:34 LOG: INFO []
12:34 LOG: INFO [The database cluster will be initialized with locale "Russian_Belarus.1251".]
12:34 LOG: INFO [The default text search configuration will be set to "russian".]
12:34 LOG: INFO []
12:34 LOG: INFO [Data page checksums are disabled.]
12:34 LOG: INFO []
12:34 LOG: INFO [fixing permissions on existing directory C:/Users/valik/AppData/Local/Temp/epg3088631916925991465 ... ok]
12:34 LOG: INFO [creating subdirectories ... ok]
12:34 LOG: INFO [selecting default max_connections ... 100]
12:34 LOG: INFO [selecting default shared_buffers ... 128MB]
12:34 LOG: INFO [selecting dynamic shared memory implementation ... windows]
12:34 LOG: INFO [creating configuration files ... ok]
12:34 LOG: INFO [running bootstrap script ... ok]
12:34 LOG: INFO [performing post-bootstrap initialization ... ok]
12:34 LOG: INFO [syncing data to disk ... ok]
12:34 LOG: INFO []
12:34 LOG: INFO [Success. You can now start the database server using:]
12:34 LOG: INFO []
12:34 LOG: INFO [    C:/Users/valik/AppData/Local/Temp/embedded-pg/PG-91c1fa33789b0c913345bf0253da6836/bin/pg_ctl -D ^"C^:^\Users^\valik^\AppData^\Local^\Temp^\epg3088631916925991465^" -l logfile start]
12:34 LOG: INFO []
12:34 LOG: INFO [d60aacaf-4f77-4ae2-9643-59e2ea82bac5 initdb completed in 00:00:07.795]
12:34 LOG: INFO [d60aacaf-4f77-4ae2-9643-59e2ea82bac5 postmaster started as Process[pid=10612, exitValue="not exited"] on port 51810.  Waiting up to PT10S for server startup to finish.]
12:34 LOG: INFO [waiting for server to start....2019-02-20 12:34:59.853 +03 [8756] ���������:  ��� ����� ����������� �� ������ IPv6 "::1" ������ ���� 51810]
12:34 LOG: INFO [2019-02-20 12:34:59.854 +03 [8756] ���������:  ��� ����� ����������� �� ������ IPv4 "127.0.0.1" ������ ���� 51810]
12:34 LOG: INFO [2019-02-20 12:34:59.935 +03 [16012] ���������:  ������� �� ���� ���������: 2019-02-20 12:34:58 +03]
12:34 LOG: INFO [2019-02-20 12:34:59.980 +03 [8756] ���������:  ������� �� ������ ��������� �����������]
12:35 LOG: INFO [ done]
12:35 LOG: INFO [server started]
12:35 LOG: TRACE[While waiting for server startup]
java.sql.SQLException: connect failed
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:341) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.waitForServerStartup(EmbeddedPostgres.java:315) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.startPostmaster(EmbeddedPostgres.java:275) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.<init>(EmbeddedPostgres.java:162) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres$Builder.start(EmbeddedPostgres.java:580) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.createOrFindPreparer(PreparedDbProvider.java:82) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.<init>(PreparedDbProvider.java:62) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.forPreparer(PreparedDbProvider.java:57) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.junit.PreparedDbRule.before(PreparedDbRule.java:55) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:46) [junit-4.12.jar:4.12]
	at org.junit.rules.RunRules.evaluate(RunRules.java:20) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) [junit-4.12.jar:4.12]
	at org.mockito.internal.runners.DefaultInternalRunner$1.run(DefaultInternalRunner.java:79) [mockito-core-2.24.5.jar:?]
	at org.mockito.internal.runners.DefaultInternalRunner.run(DefaultInternalRunner.java:85) [mockito-core-2.24.5.jar:?]
	at org.mockito.internal.runners.StrictRunner.run(StrictRunner.java:39) [mockito-core-2.24.5.jar:?]
	at org.mockito.junit.MockitoJUnitRunner.run(MockitoJUnitRunner.java:163) [mockito-core-2.24.5.jar:?]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) [junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) [junit-rt.jar:?]
Caused by: java.net.SocketTimeoutException: connect timed out
	at java.net.PlainSocketImpl.waitForConnect(Native Method) ~[?:?]
	at java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:107) ~[?:?]
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224) ~[?:?]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403) ~[?:?]
	at java.net.Socket.connect(Socket.java:591) ~[?:?]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:339) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	... 20 more
12:35 LOG: INFO [2019-02-20 12:35:00.435 +03 [12248] ���������:  �������� ��������� �����]
12:35 LOG: INFO [d60aacaf-4f77-4ae2-9643-59e2ea82bac5 postmaster startup finished in 00:00:00.823]
12:35 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
12:35 LOG: INFO [Flyway Community Edition 5.2.4 by Boxfuse]
12:35 LOG: INFO [Database: jdbc:postgresql://localhost:51810/template1 (PostgreSQL 10.6)]
12:35 LOG: DEBUG[Driver  : PostgreSQL JDBC Driver 42.2.5]
12:35 LOG: DEBUG[DDL Transactions Supported: true]
12:35 LOG: DEBUG[Schema: public]
12:35 LOG: DEBUG[Scanning for classpath resources at 'classpath:db/migration' ...]
12:35 LOG: DEBUG[Determining location urls for classpath:db/migration using ClassLoader jdk.internal.loader.ClassLoaders$AppClassLoader@6ed3ef1 ...]
12:35 LOG: DEBUG[Scanning URL: file:/C:/Users/valik/IdeaProjects/java-lab-task-1/target/classes/db/migration]
12:35 LOG: DEBUG[JBoss VFS v2 available: false]
12:35 LOG: DEBUG[Scanning starting at classpath root in filesystem: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\]
12:35 LOG: DEBUG[Scanning for resources in path: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\db\migration (db/migration)]
12:35 LOG: DEBUG[Found resource: db/migration/V1_1__init_data.sql]
12:35 LOG: DEBUG[Found resource: db/migration/V1__init_schema.sql]
12:35 LOG: DEBUG[Scanning for classes at classpath:db/migration]
12:35 LOG: DEBUG[Scanning for SQL callbacks ...]
12:35 LOG: DEBUG[Spring Jdbc available: true]
12:35 LOG: DEBUG[Validating migrations ...]
12:35 LOG: DEBUG[Parsing V1_1__init_data.sql ...]
12:35 LOG: DEBUG[Found statement at line 1: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
12:35 LOG: DEBUG[Found statement at line 2: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
12:35 LOG: DEBUG[Found statement at line 3: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
12:35 LOG: DEBUG[Found statement at line 4: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
12:35 LOG: DEBUG[Found statement at line 6: INSERT INTO "country" (name) VALUES ('testCountry')]
12:35 LOG: DEBUG[Found statement at line 8: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test1', 4, 'test1', 1, 1, 'security')]
12:35 LOG: DEBUG[Found statement at line 9: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test2', 4, 'test2', 1, 1, 'security')]
12:35 LOG: DEBUG[Found statement at line 10: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test3', 4, 'test3', 1, 1, 'security')]
12:35 LOG: DEBUG[Found statement at line 11: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test4', 4, 'test4', 1, 1, 'security')]
12:35 LOG: DEBUG[Parsing V1__init_schema.sql ...]
12:35 LOG: DEBUG[Found statement at line 1: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
12:35 LOG: DEBUG[Found statement at line 8: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
12:35 LOG: DEBUG[Found statement at line 16: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
12:35 LOG: DEBUG[Found statement at line 24: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
12:35 LOG: DEBUG[Found statement at line 36: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
12:35 LOG: DEBUG[Found statement at line 43: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
12:35 LOG: DEBUG[Found statement at line 59: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
12:35 LOG: DEBUG[Found statement at line 68: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
12:35 LOG: DEBUG[Filtering out resource: db/migration/V1_1__init_data.sql (filename: V1_1__init_data.sql)]
12:35 LOG: DEBUG[Filtering out resource: db/migration/V1__init_schema.sql (filename: V1__init_schema.sql)]
12:35 LOG: INFO [Successfully validated 2 migrations (execution time 00:00.026s)]
12:35 LOG: DEBUG[Schema "public" already exists. Skipping schema creation.]
12:35 LOG: INFO [Creating Schema History table: "public"."flyway_schema_history"]
12:35 LOG: DEBUG[Parsing createMetaDataTable.sql ...]
12:35 LOG: DEBUG[Found statement at line 17: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
12:35 LOG: DEBUG[Found statement at line 29: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
12:35 LOG: DEBUG[Found statement at line 31: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
12:35 LOG: DEBUG[Executing SQL: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
12:35 LOG: DEBUG[Update Count: 0]
12:35 LOG: DEBUG[Executing SQL: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
12:35 LOG: DEBUG[Update Count: 0]
12:35 LOG: DEBUG[Executing SQL: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
12:35 LOG: DEBUG[Update Count: 0]
12:35 LOG: DEBUG[Created Schema History table: "public"."flyway_schema_history"]
12:35 LOG: INFO [Current version of schema "public": << Empty Schema >>]
12:35 LOG: INFO [Migrating schema "public" to version 1 - init schema]
12:35 LOG: DEBUG[Executing SQL: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
12:35 LOG: DEBUG[Update Count: 0]
12:35 LOG: DEBUG[Executing SQL: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
12:35 LOG: DEBUG[Update Count: 0]
12:35 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
12:35 LOG: DEBUG[Update Count: 0]
12:35 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
12:35 LOG: DEBUG[Update Count: 0]
12:35 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
12:35 LOG: DEBUG[Update Count: 0]
12:35 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
12:35 LOG: DEBUG[Update Count: 0]
12:35 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
12:35 LOG: DEBUG[Update Count: 0]
12:35 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
12:35 LOG: DEBUG[Update Count: 0]
12:35 LOG: DEBUG[Successfully completed migration of schema "public" to version 1 - init schema]
12:35 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
12:35 LOG: INFO [Migrating schema "public" to version 1.1 - init data]
12:35 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
12:35 LOG: DEBUG[Update Count: 1]
12:35 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
12:35 LOG: DEBUG[Update Count: 1]
12:35 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
12:35 LOG: DEBUG[Update Count: 1]
12:35 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
12:35 LOG: DEBUG[Update Count: 1]
12:35 LOG: DEBUG[Executing SQL: INSERT INTO "country" (name) VALUES ('testCountry')]
12:35 LOG: DEBUG[Update Count: 1]
12:35 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test1', 4, 'test1', 1, 1, 'security')]
12:35 LOG: DEBUG[Update Count: 1]
12:35 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test2', 4, 'test2', 1, 1, 'security')]
12:35 LOG: DEBUG[Update Count: 1]
12:35 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test3', 4, 'test3', 1, 1, 'security')]
12:35 LOG: DEBUG[Update Count: 1]
12:35 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test4', 4, 'test4', 1, 1, 'security')]
12:35 LOG: DEBUG[Update Count: 1]
12:35 LOG: DEBUG[Successfully completed migration of schema "public" to version 1.1 - init data]
12:35 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
12:35 LOG: INFO [Successfully applied 2 migrations to schema "public" (execution time 00:00.181s)]
12:35 LOG: DEBUG[Memory usage: 13 of 126M]
12:35 LOG: DEBUG[Executing prepared SQL update]
12:35 LOG: DEBUG[Executing prepared SQL statement [INSERT INTO tour (photo, date, duration, description, cost, tour_type, hotel_id, country_id) VALUES (?,?,?,?,?,?::tour_type,?,?)]]
12:35 LOG: DEBUG[Fetching JDBC Connection from DataSource]
12:35 LOG: TRACE[SQL update affected 1 rows]
12:35 LOG: DEBUG[Executing SQL query [SELECT t.id as tour_id, photo, date, duration, description, cost, tour_type, hotel_id, country_id, c.name as country_name, h.name as hotel_name, h.stars, h.website, h.latitude, h.longitude, h.feature  FROM tour t JOIN country c on t.country_id = c.id JOIN hotel h on t.hotel_id = h.id]]
12:35 LOG: DEBUG[Fetching JDBC Connection from DataSource]
12:43 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
12:43 LOG: INFO [Detected a Windows x86_64 system]
12:43 LOG: INFO [Postgres binaries at C:\Users\valik\AppData\Local\Temp\embedded-pg\PG-91c1fa33789b0c913345bf0253da6836]
12:43 LOG: TRACE[1823177c-ecd5-4433-b905-e122d23268dd postgres data directory is C:\Users\valik\AppData\Local\Temp\epg8124910078621496741]
12:43 LOG: INFO [The files belonging to this database system will be owned by user "valik".]
12:43 LOG: INFO [This user must also own the server process.]
12:43 LOG: INFO []
12:43 LOG: INFO [The database cluster will be initialized with locale "Russian_Belarus.1251".]
12:43 LOG: INFO [The default text search configuration will be set to "russian".]
12:43 LOG: INFO []
12:43 LOG: INFO [Data page checksums are disabled.]
12:43 LOG: INFO []
12:43 LOG: INFO [fixing permissions on existing directory C:/Users/valik/AppData/Local/Temp/epg8124910078621496741 ... ok]
12:43 LOG: INFO [creating subdirectories ... ok]
12:43 LOG: INFO [selecting default max_connections ... 100]
12:43 LOG: INFO [selecting default shared_buffers ... 128MB]
12:43 LOG: INFO [selecting dynamic shared memory implementation ... windows]
12:43 LOG: INFO [creating configuration files ... ok]
12:43 LOG: INFO [running bootstrap script ... ok]
12:43 LOG: INFO [performing post-bootstrap initialization ... ok]
12:43 LOG: INFO [syncing data to disk ... ok]
12:43 LOG: INFO []
12:43 LOG: INFO [Success. You can now start the database server using:]
12:43 LOG: INFO []
12:43 LOG: INFO [    C:/Users/valik/AppData/Local/Temp/embedded-pg/PG-91c1fa33789b0c913345bf0253da6836/bin/pg_ctl -D ^"C^:^\Users^\valik^\AppData^\Local^\Temp^\epg8124910078621496741^" -l logfile start]
12:43 LOG: INFO []
12:43 LOG: INFO [1823177c-ecd5-4433-b905-e122d23268dd initdb completed in 00:00:07.864]
12:43 LOG: INFO [1823177c-ecd5-4433-b905-e122d23268dd postmaster started as Process[pid=8668, exitValue="not exited"] on port 51911.  Waiting up to PT10S for server startup to finish.]
12:43 LOG: INFO [waiting for server to start....2019-02-20 12:43:35.787 +03 [3128] ���������:  ��� ����� ����������� �� ������ IPv6 "::1" ������ ���� 51911]
12:43 LOG: INFO [2019-02-20 12:43:35.788 +03 [3128] ���������:  ��� ����� ����������� �� ������ IPv4 "127.0.0.1" ������ ���� 51911]
12:43 LOG: INFO [2019-02-20 12:43:35.882 +03 [3892] ���������:  ������� �� ���� ���������: 2019-02-20 12:43:34 +03]
12:43 LOG: INFO [2019-02-20 12:43:35.921 +03 [3128] ���������:  ������� �� ������ ��������� �����������]
12:43 LOG: INFO [ done]
12:43 LOG: TRACE[While waiting for server startup]
java.sql.SQLException: connect failed
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:341) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.waitForServerStartup(EmbeddedPostgres.java:315) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.startPostmaster(EmbeddedPostgres.java:275) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.<init>(EmbeddedPostgres.java:162) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres$Builder.start(EmbeddedPostgres.java:580) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.createOrFindPreparer(PreparedDbProvider.java:82) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.<init>(PreparedDbProvider.java:62) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.forPreparer(PreparedDbProvider.java:57) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.junit.PreparedDbRule.before(PreparedDbRule.java:55) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:46) [junit-4.12.jar:4.12]
	at org.junit.rules.RunRules.evaluate(RunRules.java:20) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) [junit-4.12.jar:4.12]
	at org.mockito.internal.runners.DefaultInternalRunner$1.run(DefaultInternalRunner.java:79) [mockito-core-2.24.5.jar:?]
	at org.mockito.internal.runners.DefaultInternalRunner.run(DefaultInternalRunner.java:85) [mockito-core-2.24.5.jar:?]
	at org.mockito.internal.runners.StrictRunner.run(StrictRunner.java:39) [mockito-core-2.24.5.jar:?]
	at org.mockito.junit.MockitoJUnitRunner.run(MockitoJUnitRunner.java:163) [mockito-core-2.24.5.jar:?]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) [junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) [junit-rt.jar:?]
Caused by: java.net.SocketTimeoutException: connect timed out
	at java.net.PlainSocketImpl.waitForConnect(Native Method) ~[?:?]
	at java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:107) ~[?:?]
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224) ~[?:?]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403) ~[?:?]
	at java.net.Socket.connect(Socket.java:591) ~[?:?]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:339) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	... 20 more
12:43 LOG: INFO [1823177c-ecd5-4433-b905-e122d23268dd postmaster startup finished in 00:00:00.801]
12:43 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
12:43 LOG: INFO [Flyway Community Edition 5.2.4 by Boxfuse]
12:43 LOG: INFO [Database: jdbc:postgresql://localhost:51911/template1 (PostgreSQL 10.6)]
12:43 LOG: DEBUG[Driver  : PostgreSQL JDBC Driver 42.2.5]
12:43 LOG: DEBUG[DDL Transactions Supported: true]
12:43 LOG: DEBUG[Schema: public]
12:43 LOG: DEBUG[Scanning for classpath resources at 'classpath:db/migration' ...]
12:43 LOG: DEBUG[Determining location urls for classpath:db/migration using ClassLoader jdk.internal.loader.ClassLoaders$AppClassLoader@6ed3ef1 ...]
12:43 LOG: DEBUG[Scanning URL: file:/C:/Users/valik/IdeaProjects/java-lab-task-1/target/classes/db/migration]
12:43 LOG: DEBUG[JBoss VFS v2 available: false]
12:43 LOG: DEBUG[Scanning starting at classpath root in filesystem: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\]
12:43 LOG: DEBUG[Scanning for resources in path: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\db\migration (db/migration)]
12:43 LOG: DEBUG[Found resource: db/migration/V1_1__init_data.sql]
12:43 LOG: DEBUG[Found resource: db/migration/V1__init_schema.sql]
12:43 LOG: DEBUG[Scanning for classes at classpath:db/migration]
12:43 LOG: DEBUG[Scanning for SQL callbacks ...]
12:43 LOG: DEBUG[Spring Jdbc available: true]
12:43 LOG: DEBUG[Validating migrations ...]
12:43 LOG: DEBUG[Parsing V1_1__init_data.sql ...]
12:43 LOG: DEBUG[Found statement at line 1: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
12:43 LOG: DEBUG[Found statement at line 2: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
12:43 LOG: DEBUG[Found statement at line 3: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
12:43 LOG: DEBUG[Found statement at line 4: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
12:43 LOG: DEBUG[Found statement at line 6: INSERT INTO "country" (name) VALUES ('testCountry')]
12:43 LOG: DEBUG[Found statement at line 8: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test1', 4, 'test1', 1, 1, 'security')]
12:43 LOG: DEBUG[Found statement at line 9: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test2', 4, 'test2', 1, 1, 'security')]
12:43 LOG: DEBUG[Found statement at line 10: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test3', 4, 'test3', 1, 1, 'security')]
12:43 LOG: DEBUG[Found statement at line 11: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test4', 4, 'test4', 1, 1, 'security')]
12:43 LOG: DEBUG[Parsing V1__init_schema.sql ...]
12:43 LOG: DEBUG[Found statement at line 1: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
12:43 LOG: DEBUG[Found statement at line 8: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
12:43 LOG: DEBUG[Found statement at line 16: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
12:43 LOG: DEBUG[Found statement at line 24: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
12:43 LOG: DEBUG[Found statement at line 36: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
12:43 LOG: DEBUG[Found statement at line 43: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
12:43 LOG: DEBUG[Found statement at line 59: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
12:43 LOG: DEBUG[Found statement at line 68: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
12:43 LOG: DEBUG[Filtering out resource: db/migration/V1_1__init_data.sql (filename: V1_1__init_data.sql)]
12:43 LOG: DEBUG[Filtering out resource: db/migration/V1__init_schema.sql (filename: V1__init_schema.sql)]
12:43 LOG: INFO [Successfully validated 2 migrations (execution time 00:00.026s)]
12:43 LOG: DEBUG[Schema "public" already exists. Skipping schema creation.]
12:43 LOG: INFO [Creating Schema History table: "public"."flyway_schema_history"]
12:43 LOG: DEBUG[Parsing createMetaDataTable.sql ...]
12:43 LOG: DEBUG[Found statement at line 17: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
12:43 LOG: DEBUG[Found statement at line 29: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
12:43 LOG: DEBUG[Found statement at line 31: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
12:43 LOG: DEBUG[Executing SQL: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
12:43 LOG: DEBUG[Update Count: 0]
12:43 LOG: DEBUG[Executing SQL: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
12:43 LOG: DEBUG[Update Count: 0]
12:43 LOG: DEBUG[Executing SQL: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
12:43 LOG: DEBUG[Update Count: 0]
12:43 LOG: DEBUG[Created Schema History table: "public"."flyway_schema_history"]
12:43 LOG: INFO [Current version of schema "public": << Empty Schema >>]
12:43 LOG: INFO [Migrating schema "public" to version 1 - init schema]
12:43 LOG: DEBUG[Executing SQL: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
12:43 LOG: DEBUG[Update Count: 0]
12:43 LOG: DEBUG[Executing SQL: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
12:43 LOG: DEBUG[Update Count: 0]
12:43 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
12:43 LOG: DEBUG[Update Count: 0]
12:43 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
12:43 LOG: DEBUG[Update Count: 0]
12:43 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
12:43 LOG: DEBUG[Update Count: 0]
12:43 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
12:43 LOG: DEBUG[Update Count: 0]
12:43 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
12:43 LOG: DEBUG[Update Count: 0]
12:43 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
12:43 LOG: DEBUG[Update Count: 0]
12:43 LOG: DEBUG[Successfully completed migration of schema "public" to version 1 - init schema]
12:43 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
12:43 LOG: INFO [Migrating schema "public" to version 1.1 - init data]
12:43 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
12:43 LOG: DEBUG[Update Count: 1]
12:43 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
12:43 LOG: DEBUG[Update Count: 1]
12:43 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
12:43 LOG: DEBUG[Update Count: 1]
12:43 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
12:43 LOG: DEBUG[Update Count: 1]
12:43 LOG: DEBUG[Executing SQL: INSERT INTO "country" (name) VALUES ('testCountry')]
12:43 LOG: DEBUG[Update Count: 1]
12:43 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test1', 4, 'test1', 1, 1, 'security')]
12:43 LOG: DEBUG[Update Count: 1]
12:43 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test2', 4, 'test2', 1, 1, 'security')]
12:43 LOG: DEBUG[Update Count: 1]
12:43 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test3', 4, 'test3', 1, 1, 'security')]
12:43 LOG: DEBUG[Update Count: 1]
12:43 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test4', 4, 'test4', 1, 1, 'security')]
12:43 LOG: DEBUG[Update Count: 1]
12:43 LOG: DEBUG[Successfully completed migration of schema "public" to version 1.1 - init data]
12:43 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
12:43 LOG: INFO [Successfully applied 2 migrations to schema "public" (execution time 00:00.173s)]
12:43 LOG: DEBUG[Memory usage: 13 of 126M]
12:43 LOG: DEBUG[Executing prepared SQL update]
12:43 LOG: DEBUG[Executing prepared SQL statement [INSERT INTO tour (photo, date, duration, description, cost, tour_type, hotel_id, country_id) VALUES (?,?,?,?,?,?::tour_type,?,?)]]
12:43 LOG: DEBUG[Fetching JDBC Connection from DataSource]
12:43 LOG: TRACE[SQL update affected 1 rows]
12:43 LOG: DEBUG[Executing SQL query [SELECT t.id as tour_id, photo, date, duration, description, cost, tour_type, hotel_id, country_id, c.name as country_name, h.name as hotel_name, h.stars, h.website, h.latitude, h.longitude, h.feature  FROM tour t JOIN country c on t.country_id = c.id JOIN hotel h on t.hotel_id = h.id]]
12:43 LOG: DEBUG[Fetching JDBC Connection from DataSource]
12:53 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
12:53 LOG: INFO [Detected a Windows x86_64 system]
12:53 LOG: INFO [Postgres binaries at C:\Users\valik\AppData\Local\Temp\embedded-pg\PG-91c1fa33789b0c913345bf0253da6836]
12:53 LOG: TRACE[123d91f9-b0cf-43d5-903f-41fc58fffb06 postgres data directory is C:\Users\valik\AppData\Local\Temp\epg9468474879847536829]
12:53 LOG: INFO [The files belonging to this database system will be owned by user "valik".]
12:53 LOG: INFO [This user must also own the server process.]
12:53 LOG: INFO []
12:53 LOG: INFO [The database cluster will be initialized with locale "Russian_Belarus.1251".]
12:53 LOG: INFO [The default text search configuration will be set to "russian".]
12:53 LOG: INFO []
12:53 LOG: INFO [Data page checksums are disabled.]
12:53 LOG: INFO []
12:53 LOG: INFO [fixing permissions on existing directory C:/Users/valik/AppData/Local/Temp/epg9468474879847536829 ... ok]
12:53 LOG: INFO [creating subdirectories ... ok]
12:53 LOG: INFO [selecting default max_connections ... 100]
12:53 LOG: INFO [selecting default shared_buffers ... 128MB]
12:53 LOG: INFO [selecting dynamic shared memory implementation ... windows]
12:53 LOG: INFO [creating configuration files ... ok]
12:53 LOG: INFO [running bootstrap script ... ok]
12:53 LOG: INFO [performing post-bootstrap initialization ... ok]
12:53 LOG: INFO [syncing data to disk ... ok]
12:53 LOG: INFO []
12:53 LOG: INFO [Success. You can now start the database server using:]
12:53 LOG: INFO []
12:53 LOG: INFO [    C:/Users/valik/AppData/Local/Temp/embedded-pg/PG-91c1fa33789b0c913345bf0253da6836/bin/pg_ctl -D ^"C^:^\Users^\valik^\AppData^\Local^\Temp^\epg9468474879847536829^" -l logfile start]
12:53 LOG: INFO []
12:53 LOG: INFO [123d91f9-b0cf-43d5-903f-41fc58fffb06 initdb completed in 00:00:07.777]
12:53 LOG: INFO [123d91f9-b0cf-43d5-903f-41fc58fffb06 postmaster started as Process[pid=3180, exitValue="not exited"] on port 52021.  Waiting up to PT10S for server startup to finish.]
12:53 LOG: INFO [waiting for server to start....2019-02-20 12:53:55.693 +03 [2928] ���������:  ��� ����� ����������� �� ������ IPv6 "::1" ������ ���� 52021]
12:53 LOG: INFO [2019-02-20 12:53:55.693 +03 [2928] ���������:  ��� ����� ����������� �� ������ IPv4 "127.0.0.1" ������ ���� 52021]
12:53 LOG: INFO [2019-02-20 12:53:55.768 +03 [13844] ���������:  ������� �� ���� ���������: 2019-02-20 12:53:54 +03]
12:53 LOG: INFO [2019-02-20 12:53:55.816 +03 [2928] ���������:  ������� �� ������ ��������� �����������]
12:53 LOG: INFO [ done]
12:53 LOG: INFO [server started]
12:53 LOG: INFO [123d91f9-b0cf-43d5-903f-41fc58fffb06 postmaster startup finished in 00:00:00.661]
12:53 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
12:53 LOG: INFO [Flyway Community Edition 5.2.4 by Boxfuse]
12:53 LOG: INFO [Database: jdbc:postgresql://localhost:52021/template1 (PostgreSQL 10.6)]
12:53 LOG: DEBUG[Driver  : PostgreSQL JDBC Driver 42.2.5]
12:53 LOG: DEBUG[DDL Transactions Supported: true]
12:53 LOG: DEBUG[Schema: public]
12:53 LOG: DEBUG[Scanning for classpath resources at 'classpath:db/migration' ...]
12:53 LOG: DEBUG[Determining location urls for classpath:db/migration using ClassLoader jdk.internal.loader.ClassLoaders$AppClassLoader@6ed3ef1 ...]
12:53 LOG: DEBUG[Scanning URL: file:/C:/Users/valik/IdeaProjects/java-lab-task-1/target/classes/db/migration]
12:53 LOG: DEBUG[JBoss VFS v2 available: false]
12:53 LOG: DEBUG[Scanning starting at classpath root in filesystem: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\]
12:53 LOG: DEBUG[Scanning for resources in path: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\db\migration (db/migration)]
12:53 LOG: DEBUG[Found resource: db/migration/V1_1__init_data.sql]
12:53 LOG: DEBUG[Found resource: db/migration/V1__init_schema.sql]
12:53 LOG: DEBUG[Scanning for classes at classpath:db/migration]
12:53 LOG: DEBUG[Scanning for SQL callbacks ...]
12:53 LOG: DEBUG[Spring Jdbc available: true]
12:53 LOG: DEBUG[Validating migrations ...]
12:53 LOG: DEBUG[Parsing V1_1__init_data.sql ...]
12:53 LOG: DEBUG[Found statement at line 1: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
12:53 LOG: DEBUG[Found statement at line 2: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
12:53 LOG: DEBUG[Found statement at line 3: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
12:53 LOG: DEBUG[Found statement at line 4: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
12:53 LOG: DEBUG[Found statement at line 6: INSERT INTO "country" (name) VALUES ('testCountry')]
12:53 LOG: DEBUG[Found statement at line 8: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test1', 4, 'test1', 1, 1, 'security')]
12:53 LOG: DEBUG[Found statement at line 9: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test2', 4, 'test2', 1, 1, 'security')]
12:53 LOG: DEBUG[Found statement at line 10: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test3', 4, 'test3', 1, 1, 'security')]
12:53 LOG: DEBUG[Found statement at line 11: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test4', 4, 'test4', 1, 1, 'security')]
12:53 LOG: DEBUG[Parsing V1__init_schema.sql ...]
12:53 LOG: DEBUG[Found statement at line 1: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
12:53 LOG: DEBUG[Found statement at line 8: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
12:53 LOG: DEBUG[Found statement at line 16: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
12:53 LOG: DEBUG[Found statement at line 24: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
12:53 LOG: DEBUG[Found statement at line 36: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
12:53 LOG: DEBUG[Found statement at line 43: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
12:53 LOG: DEBUG[Found statement at line 59: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
12:53 LOG: DEBUG[Found statement at line 68: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
12:53 LOG: DEBUG[Filtering out resource: db/migration/V1_1__init_data.sql (filename: V1_1__init_data.sql)]
12:53 LOG: DEBUG[Filtering out resource: db/migration/V1__init_schema.sql (filename: V1__init_schema.sql)]
12:53 LOG: INFO [Successfully validated 2 migrations (execution time 00:00.027s)]
12:53 LOG: DEBUG[Schema "public" already exists. Skipping schema creation.]
12:53 LOG: INFO [Creating Schema History table: "public"."flyway_schema_history"]
12:53 LOG: DEBUG[Parsing createMetaDataTable.sql ...]
12:53 LOG: DEBUG[Found statement at line 17: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
12:53 LOG: DEBUG[Found statement at line 29: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
12:53 LOG: DEBUG[Found statement at line 31: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
12:53 LOG: DEBUG[Executing SQL: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
12:53 LOG: DEBUG[Update Count: 0]
12:53 LOG: DEBUG[Executing SQL: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
12:53 LOG: DEBUG[Update Count: 0]
12:53 LOG: DEBUG[Executing SQL: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
12:53 LOG: DEBUG[Update Count: 0]
12:53 LOG: DEBUG[Created Schema History table: "public"."flyway_schema_history"]
12:53 LOG: INFO [Current version of schema "public": << Empty Schema >>]
12:53 LOG: INFO [Migrating schema "public" to version 1 - init schema]
12:53 LOG: DEBUG[Executing SQL: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
12:53 LOG: DEBUG[Update Count: 0]
12:53 LOG: DEBUG[Executing SQL: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
12:53 LOG: DEBUG[Update Count: 0]
12:53 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
12:53 LOG: DEBUG[Update Count: 0]
12:53 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
12:53 LOG: DEBUG[Update Count: 0]
12:53 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
12:53 LOG: DEBUG[Update Count: 0]
12:53 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
12:53 LOG: DEBUG[Update Count: 0]
12:53 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
12:53 LOG: DEBUG[Update Count: 0]
12:53 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
12:53 LOG: DEBUG[Update Count: 0]
12:53 LOG: DEBUG[Successfully completed migration of schema "public" to version 1 - init schema]
12:53 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
12:53 LOG: INFO [Migrating schema "public" to version 1.1 - init data]
12:53 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
12:53 LOG: DEBUG[Update Count: 1]
12:53 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
12:53 LOG: DEBUG[Update Count: 1]
12:53 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
12:53 LOG: DEBUG[Update Count: 1]
12:53 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
12:53 LOG: DEBUG[Update Count: 1]
12:53 LOG: DEBUG[Executing SQL: INSERT INTO "country" (name) VALUES ('testCountry')]
12:53 LOG: DEBUG[Update Count: 1]
12:53 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test1', 4, 'test1', 1, 1, 'security')]
12:53 LOG: DEBUG[Update Count: 1]
12:53 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test2', 4, 'test2', 1, 1, 'security')]
12:53 LOG: DEBUG[Update Count: 1]
12:53 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test3', 4, 'test3', 1, 1, 'security')]
12:53 LOG: DEBUG[Update Count: 1]
12:53 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test4', 4, 'test4', 1, 1, 'security')]
12:53 LOG: DEBUG[Update Count: 1]
12:53 LOG: DEBUG[Successfully completed migration of schema "public" to version 1.1 - init data]
12:53 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
12:53 LOG: INFO [Successfully applied 2 migrations to schema "public" (execution time 00:00.199s)]
12:53 LOG: DEBUG[Memory usage: 13 of 126M]
12:53 LOG: DEBUG[Executing prepared SQL update]
12:53 LOG: DEBUG[Executing prepared SQL statement [INSERT INTO tour (photo, date, duration, description, cost, tour_type, hotel_id, country_id) VALUES (?,?,?,?,?,?::tour_type,?,?)]]
12:53 LOG: DEBUG[Fetching JDBC Connection from DataSource]
12:53 LOG: TRACE[SQL update affected 1 rows]
12:53 LOG: DEBUG[Executing SQL query [SELECT t.id as tour_id, photo, date, duration, description, cost, tour_type, hotel_id, country_id, c.name as country_name, h.name as hotel_name, h.stars, h.website, h.latitude, h.longitude, h.feature  FROM tour t JOIN country c on t.country_id = c.id JOIN hotel h on t.hotel_id = h.id]]
12:53 LOG: DEBUG[Fetching JDBC Connection from DataSource]
13:05 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
13:05 LOG: INFO [Detected a Windows x86_64 system]
13:05 LOG: INFO [Postgres binaries at C:\Users\valik\AppData\Local\Temp\embedded-pg\PG-91c1fa33789b0c913345bf0253da6836]
13:05 LOG: TRACE[239caf74-1516-4bdd-8730-9cef531ade7a postgres data directory is C:\Users\valik\AppData\Local\Temp\epg3513033321585335817]
13:05 LOG: INFO [The files belonging to this database system will be owned by user "valik".]
13:05 LOG: INFO [This user must also own the server process.]
13:05 LOG: INFO []
13:05 LOG: INFO [The database cluster will be initialized with locale "Russian_Belarus.1251".]
13:05 LOG: INFO [The default text search configuration will be set to "russian".]
13:05 LOG: INFO []
13:05 LOG: INFO [Data page checksums are disabled.]
13:05 LOG: INFO []
13:05 LOG: INFO [fixing permissions on existing directory C:/Users/valik/AppData/Local/Temp/epg3513033321585335817 ... ok]
13:05 LOG: INFO [creating subdirectories ... ok]
13:05 LOG: INFO [selecting default max_connections ... 100]
13:05 LOG: INFO [selecting default shared_buffers ... 128MB]
13:05 LOG: INFO [selecting dynamic shared memory implementation ... windows]
13:05 LOG: INFO [creating configuration files ... ok]
13:05 LOG: INFO [running bootstrap script ... ok]
13:05 LOG: INFO [performing post-bootstrap initialization ... ok]
13:05 LOG: INFO [syncing data to disk ... ok]
13:05 LOG: INFO []
13:05 LOG: INFO [Success. You can now start the database server using:]
13:05 LOG: INFO []
13:05 LOG: INFO [    C:/Users/valik/AppData/Local/Temp/embedded-pg/PG-91c1fa33789b0c913345bf0253da6836/bin/pg_ctl -D ^"C^:^\Users^\valik^\AppData^\Local^\Temp^\epg3513033321585335817^" -l logfile start]
13:05 LOG: INFO []
13:05 LOG: INFO [239caf74-1516-4bdd-8730-9cef531ade7a initdb completed in 00:00:07.409]
13:05 LOG: INFO [239caf74-1516-4bdd-8730-9cef531ade7a postmaster started as Process[pid=4592, exitValue="not exited"] on port 52107.  Waiting up to PT10S for server startup to finish.]
13:05 LOG: INFO [waiting for server to start....2019-02-20 13:05:11.072 +03 [13996] ���������:  ��� ����� ����������� �� ������ IPv6 "::1" ������ ���� 52107]
13:05 LOG: INFO [2019-02-20 13:05:11.072 +03 [13996] ���������:  ��� ����� ����������� �� ������ IPv4 "127.0.0.1" ������ ���� 52107]
13:05 LOG: INFO [2019-02-20 13:05:11.154 +03 [9764] ���������:  ������� �� ���� ���������: 2019-02-20 13:05:09 +03]
13:05 LOG: INFO [2019-02-20 13:05:11.198 +03 [13996] ���������:  ������� �� ������ ��������� �����������]
13:05 LOG: TRACE[While waiting for server startup]
java.sql.SQLException: connect failed
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:341) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.waitForServerStartup(EmbeddedPostgres.java:315) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.startPostmaster(EmbeddedPostgres.java:275) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.<init>(EmbeddedPostgres.java:162) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres$Builder.start(EmbeddedPostgres.java:580) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.createOrFindPreparer(PreparedDbProvider.java:82) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.<init>(PreparedDbProvider.java:62) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.forPreparer(PreparedDbProvider.java:57) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.junit.PreparedDbRule.before(PreparedDbRule.java:55) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:46) [junit-4.12.jar:4.12]
	at org.junit.rules.RunRules.evaluate(RunRules.java:20) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) [junit-4.12.jar:4.12]
	at org.mockito.internal.runners.DefaultInternalRunner$1.run(DefaultInternalRunner.java:79) [mockito-core-2.24.5.jar:?]
	at org.mockito.internal.runners.DefaultInternalRunner.run(DefaultInternalRunner.java:85) [mockito-core-2.24.5.jar:?]
	at org.mockito.internal.runners.StrictRunner.run(StrictRunner.java:39) [mockito-core-2.24.5.jar:?]
	at org.mockito.junit.MockitoJUnitRunner.run(MockitoJUnitRunner.java:163) [mockito-core-2.24.5.jar:?]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) [junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) [junit-rt.jar:?]
Caused by: java.net.SocketTimeoutException: connect timed out
	at java.net.PlainSocketImpl.waitForConnect(Native Method) ~[?:?]
	at java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:107) ~[?:?]
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224) ~[?:?]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403) ~[?:?]
	at java.net.Socket.connect(Socket.java:591) ~[?:?]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:339) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	... 20 more
13:05 LOG: INFO [ done]
13:05 LOG: INFO [239caf74-1516-4bdd-8730-9cef531ade7a postmaster startup finished in 00:00:00.787]
13:05 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
13:05 LOG: INFO [Flyway Community Edition 5.2.4 by Boxfuse]
13:05 LOG: INFO [Database: jdbc:postgresql://localhost:52107/template1 (PostgreSQL 10.6)]
13:05 LOG: DEBUG[Driver  : PostgreSQL JDBC Driver 42.2.5]
13:05 LOG: DEBUG[DDL Transactions Supported: true]
13:05 LOG: DEBUG[Schema: public]
13:05 LOG: DEBUG[Scanning for classpath resources at 'classpath:db/migration' ...]
13:05 LOG: DEBUG[Determining location urls for classpath:db/migration using ClassLoader jdk.internal.loader.ClassLoaders$AppClassLoader@6ed3ef1 ...]
13:05 LOG: DEBUG[Scanning URL: file:/C:/Users/valik/IdeaProjects/java-lab-task-1/target/classes/db/migration]
13:05 LOG: DEBUG[JBoss VFS v2 available: false]
13:05 LOG: DEBUG[Scanning starting at classpath root in filesystem: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\]
13:05 LOG: DEBUG[Scanning for resources in path: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\db\migration (db/migration)]
13:05 LOG: DEBUG[Found resource: db/migration/V1_1__init_data.sql]
13:05 LOG: DEBUG[Found resource: db/migration/V1__init_schema.sql]
13:05 LOG: DEBUG[Scanning for classes at classpath:db/migration]
13:05 LOG: DEBUG[Scanning for SQL callbacks ...]
13:05 LOG: DEBUG[Spring Jdbc available: true]
13:05 LOG: DEBUG[Validating migrations ...]
13:05 LOG: DEBUG[Parsing V1_1__init_data.sql ...]
13:05 LOG: DEBUG[Found statement at line 1: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
13:05 LOG: DEBUG[Found statement at line 2: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
13:05 LOG: DEBUG[Found statement at line 3: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
13:05 LOG: DEBUG[Found statement at line 4: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
13:05 LOG: DEBUG[Found statement at line 6: INSERT INTO "country" (name) VALUES ('testCountry')]
13:05 LOG: DEBUG[Found statement at line 8: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test1', 4, 'test1', 1, 1, 'security')]
13:05 LOG: DEBUG[Found statement at line 9: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test2', 4, 'test2', 1, 1, 'security')]
13:05 LOG: DEBUG[Found statement at line 10: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test3', 4, 'test3', 1, 1, 'security')]
13:05 LOG: DEBUG[Found statement at line 11: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test4', 4, 'test4', 1, 1, 'security')]
13:05 LOG: DEBUG[Parsing V1__init_schema.sql ...]
13:05 LOG: DEBUG[Found statement at line 1: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
13:05 LOG: DEBUG[Found statement at line 8: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
13:05 LOG: DEBUG[Found statement at line 16: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
13:05 LOG: DEBUG[Found statement at line 24: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
13:05 LOG: DEBUG[Found statement at line 36: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
13:05 LOG: DEBUG[Found statement at line 43: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
13:05 LOG: DEBUG[Found statement at line 59: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
13:05 LOG: DEBUG[Found statement at line 68: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
13:05 LOG: DEBUG[Filtering out resource: db/migration/V1_1__init_data.sql (filename: V1_1__init_data.sql)]
13:05 LOG: DEBUG[Filtering out resource: db/migration/V1__init_schema.sql (filename: V1__init_schema.sql)]
13:05 LOG: INFO [Successfully validated 2 migrations (execution time 00:00.026s)]
13:05 LOG: DEBUG[Schema "public" already exists. Skipping schema creation.]
13:05 LOG: INFO [Creating Schema History table: "public"."flyway_schema_history"]
13:05 LOG: DEBUG[Parsing createMetaDataTable.sql ...]
13:05 LOG: DEBUG[Found statement at line 17: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
13:05 LOG: DEBUG[Found statement at line 29: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
13:05 LOG: DEBUG[Found statement at line 31: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
13:05 LOG: DEBUG[Executing SQL: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
13:05 LOG: DEBUG[Update Count: 0]
13:05 LOG: DEBUG[Executing SQL: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
13:05 LOG: DEBUG[Update Count: 0]
13:05 LOG: DEBUG[Executing SQL: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
13:05 LOG: DEBUG[Update Count: 0]
13:05 LOG: DEBUG[Created Schema History table: "public"."flyway_schema_history"]
13:05 LOG: INFO [Current version of schema "public": << Empty Schema >>]
13:05 LOG: INFO [Migrating schema "public" to version 1 - init schema]
13:05 LOG: DEBUG[Executing SQL: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
13:05 LOG: DEBUG[Update Count: 0]
13:05 LOG: DEBUG[Executing SQL: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
13:05 LOG: DEBUG[Update Count: 0]
13:05 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
13:05 LOG: DEBUG[Update Count: 0]
13:05 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
13:05 LOG: DEBUG[Update Count: 0]
13:05 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
13:05 LOG: DEBUG[Update Count: 0]
13:05 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
13:05 LOG: DEBUG[Update Count: 0]
13:05 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
13:05 LOG: DEBUG[Update Count: 0]
13:05 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
13:05 LOG: DEBUG[Update Count: 0]
13:05 LOG: DEBUG[Successfully completed migration of schema "public" to version 1 - init schema]
13:05 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
13:05 LOG: INFO [Migrating schema "public" to version 1.1 - init data]
13:05 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
13:05 LOG: DEBUG[Update Count: 1]
13:05 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
13:05 LOG: DEBUG[Update Count: 1]
13:05 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
13:05 LOG: DEBUG[Update Count: 1]
13:05 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
13:05 LOG: DEBUG[Update Count: 1]
13:05 LOG: DEBUG[Executing SQL: INSERT INTO "country" (name) VALUES ('testCountry')]
13:05 LOG: DEBUG[Update Count: 1]
13:05 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test1', 4, 'test1', 1, 1, 'security')]
13:05 LOG: DEBUG[Update Count: 1]
13:05 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test2', 4, 'test2', 1, 1, 'security')]
13:05 LOG: DEBUG[Update Count: 1]
13:05 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test3', 4, 'test3', 1, 1, 'security')]
13:05 LOG: DEBUG[Update Count: 1]
13:05 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test4', 4, 'test4', 1, 1, 'security')]
13:05 LOG: DEBUG[Update Count: 1]
13:05 LOG: DEBUG[Successfully completed migration of schema "public" to version 1.1 - init data]
13:05 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
13:05 LOG: INFO [Successfully applied 2 migrations to schema "public" (execution time 00:00.183s)]
13:05 LOG: DEBUG[Memory usage: 13 of 126M]
13:05 LOG: DEBUG[Executing prepared SQL update]
13:05 LOG: DEBUG[Executing prepared SQL statement [INSERT INTO tour (photo, date, duration, description, cost, tour_type, hotel_id, country_id) VALUES (?,?::DATE,?,?,?,?::tour_type,?,?)]]
13:05 LOG: DEBUG[Fetching JDBC Connection from DataSource]
13:05 LOG: TRACE[SQL update affected 1 rows]
13:05 LOG: DEBUG[Executing prepared SQL query]
13:05 LOG: DEBUG[Executing prepared SQL statement [SELECT t.id as tour_id, photo, date, duration, description, cost, tour_type, hotel_id, country_id, c.name as country_name, h.name as hotel_name, h.stars, h.website, h.latitude, h.longitude, h.feature  FROM tour t JOIN country c on t.country_id = c.id JOIN hotel h on t.hotel_id = h.id WHERE t.id=?]]
13:05 LOG: DEBUG[Fetching JDBC Connection from DataSource]
13:05 LOG: TRACE[Setting SQL statement parameter value: column index 1, parameter value [1], value class [java.lang.Integer], SQL type unknown]
13:09 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
13:09 LOG: INFO [Detected a Windows x86_64 system]
13:09 LOG: INFO [Postgres binaries at C:\Users\valik\AppData\Local\Temp\embedded-pg\PG-91c1fa33789b0c913345bf0253da6836]
13:09 LOG: TRACE[4788f8e0-6784-47f9-b19a-81b12b2feed0 postgres data directory is C:\Users\valik\AppData\Local\Temp\epg13195359148401550553]
13:09 LOG: INFO [The files belonging to this database system will be owned by user "valik".]
13:09 LOG: INFO [This user must also own the server process.]
13:09 LOG: INFO []
13:09 LOG: INFO [The database cluster will be initialized with locale "Russian_Belarus.1251".]
13:09 LOG: INFO [The default text search configuration will be set to "russian".]
13:09 LOG: INFO []
13:09 LOG: INFO [Data page checksums are disabled.]
13:09 LOG: INFO []
13:09 LOG: INFO [fixing permissions on existing directory C:/Users/valik/AppData/Local/Temp/epg13195359148401550553 ... ok]
13:09 LOG: INFO [creating subdirectories ... ok]
13:09 LOG: INFO [selecting default max_connections ... 100]
13:09 LOG: INFO [selecting default shared_buffers ... 128MB]
13:09 LOG: INFO [selecting dynamic shared memory implementation ... windows]
13:09 LOG: INFO [creating configuration files ... ok]
13:09 LOG: INFO [running bootstrap script ... ok]
13:09 LOG: INFO [performing post-bootstrap initialization ... ok]
13:09 LOG: INFO [syncing data to disk ... ok]
13:09 LOG: INFO []
13:09 LOG: INFO [Success. You can now start the database server using:]
13:09 LOG: INFO []
13:09 LOG: INFO [    C:/Users/valik/AppData/Local/Temp/embedded-pg/PG-91c1fa33789b0c913345bf0253da6836/bin/pg_ctl -D ^"C^:^\Users^\valik^\AppData^\Local^\Temp^\epg13195359148401550553^" -l logfile start]
13:09 LOG: INFO []
13:09 LOG: INFO [4788f8e0-6784-47f9-b19a-81b12b2feed0 initdb completed in 00:00:08.742]
13:09 LOG: INFO [4788f8e0-6784-47f9-b19a-81b12b2feed0 postmaster started as Process[pid=16672, exitValue="not exited"] on port 52149.  Waiting up to PT10S for server startup to finish.]
13:09 LOG: INFO [waiting for server to start....2019-02-20 13:09:22.149 +03 [14152] ���������:  ��� ����� ����������� �� ������ IPv6 "::1" ������ ���� 52149]
13:09 LOG: INFO [2019-02-20 13:09:22.149 +03 [14152] ���������:  ��� ����� ����������� �� ������ IPv4 "127.0.0.1" ������ ���� 52149]
13:09 LOG: INFO [2019-02-20 13:09:22.228 +03 [18420] ���������:  ������� �� ���� ���������: 2019-02-20 13:09:20 +03]
13:09 LOG: INFO [2019-02-20 13:09:22.260 +03 [14152] ���������:  ������� �� ������ ��������� �����������]
13:09 LOG: INFO [ done]
13:09 LOG: INFO [server started]
13:09 LOG: TRACE[While waiting for server startup]
java.sql.SQLException: connect failed
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:341) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.waitForServerStartup(EmbeddedPostgres.java:315) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.startPostmaster(EmbeddedPostgres.java:275) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.<init>(EmbeddedPostgres.java:162) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres$Builder.start(EmbeddedPostgres.java:580) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.createOrFindPreparer(PreparedDbProvider.java:82) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.<init>(PreparedDbProvider.java:62) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.forPreparer(PreparedDbProvider.java:57) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.junit.PreparedDbRule.before(PreparedDbRule.java:55) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:46) [junit-4.12.jar:4.12]
	at org.junit.rules.RunRules.evaluate(RunRules.java:20) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) [junit-4.12.jar:4.12]
	at org.mockito.internal.runners.DefaultInternalRunner$1.run(DefaultInternalRunner.java:79) [mockito-core-2.24.5.jar:?]
	at org.mockito.internal.runners.DefaultInternalRunner.run(DefaultInternalRunner.java:85) [mockito-core-2.24.5.jar:?]
	at org.mockito.internal.runners.StrictRunner.run(StrictRunner.java:39) [mockito-core-2.24.5.jar:?]
	at org.mockito.junit.MockitoJUnitRunner.run(MockitoJUnitRunner.java:163) [mockito-core-2.24.5.jar:?]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) [junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) [junit-rt.jar:?]
Caused by: java.net.SocketTimeoutException: connect timed out
	at java.net.PlainSocketImpl.waitForConnect(Native Method) ~[?:?]
	at java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:107) ~[?:?]
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224) ~[?:?]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403) ~[?:?]
	at java.net.Socket.connect(Socket.java:591) ~[?:?]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:339) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	... 20 more
13:09 LOG: INFO [4788f8e0-6784-47f9-b19a-81b12b2feed0 postmaster startup finished in 00:00:00.807]
13:09 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
13:09 LOG: INFO [Flyway Community Edition 5.2.4 by Boxfuse]
13:09 LOG: INFO [Database: jdbc:postgresql://localhost:52149/template1 (PostgreSQL 10.6)]
13:09 LOG: DEBUG[Driver  : PostgreSQL JDBC Driver 42.2.5]
13:09 LOG: DEBUG[DDL Transactions Supported: true]
13:09 LOG: DEBUG[Schema: public]
13:09 LOG: DEBUG[Scanning for classpath resources at 'classpath:db/migration' ...]
13:09 LOG: DEBUG[Determining location urls for classpath:db/migration using ClassLoader jdk.internal.loader.ClassLoaders$AppClassLoader@6ed3ef1 ...]
13:09 LOG: DEBUG[Scanning URL: file:/C:/Users/valik/IdeaProjects/java-lab-task-1/target/classes/db/migration]
13:09 LOG: DEBUG[JBoss VFS v2 available: false]
13:09 LOG: DEBUG[Scanning starting at classpath root in filesystem: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\]
13:09 LOG: DEBUG[Scanning for resources in path: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\db\migration (db/migration)]
13:09 LOG: DEBUG[Found resource: db/migration/V1_1__init_data.sql]
13:09 LOG: DEBUG[Found resource: db/migration/V1__init_schema.sql]
13:09 LOG: DEBUG[Scanning for classes at classpath:db/migration]
13:09 LOG: DEBUG[Scanning for SQL callbacks ...]
13:09 LOG: DEBUG[Spring Jdbc available: true]
13:09 LOG: DEBUG[Validating migrations ...]
13:09 LOG: DEBUG[Parsing V1_1__init_data.sql ...]
13:09 LOG: DEBUG[Found statement at line 1: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
13:09 LOG: DEBUG[Found statement at line 2: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
13:09 LOG: DEBUG[Found statement at line 3: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
13:09 LOG: DEBUG[Found statement at line 4: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
13:09 LOG: DEBUG[Found statement at line 6: INSERT INTO "country" (name) VALUES ('testCountry')]
13:09 LOG: DEBUG[Found statement at line 8: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test1', 4, 'test1', 1, 1, 'security')]
13:09 LOG: DEBUG[Found statement at line 9: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test2', 4, 'test2', 1, 1, 'security')]
13:09 LOG: DEBUG[Found statement at line 10: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test3', 4, 'test3', 1, 1, 'security')]
13:09 LOG: DEBUG[Found statement at line 11: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test4', 4, 'test4', 1, 1, 'security')]
13:09 LOG: DEBUG[Parsing V1__init_schema.sql ...]
13:09 LOG: DEBUG[Found statement at line 1: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
13:09 LOG: DEBUG[Found statement at line 8: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
13:09 LOG: DEBUG[Found statement at line 16: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
13:09 LOG: DEBUG[Found statement at line 24: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
13:09 LOG: DEBUG[Found statement at line 36: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
13:09 LOG: DEBUG[Found statement at line 43: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
13:09 LOG: DEBUG[Found statement at line 59: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
13:09 LOG: DEBUG[Found statement at line 68: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
13:09 LOG: DEBUG[Filtering out resource: db/migration/V1_1__init_data.sql (filename: V1_1__init_data.sql)]
13:09 LOG: DEBUG[Filtering out resource: db/migration/V1__init_schema.sql (filename: V1__init_schema.sql)]
13:09 LOG: INFO [Successfully validated 2 migrations (execution time 00:00.034s)]
13:09 LOG: DEBUG[Schema "public" already exists. Skipping schema creation.]
13:09 LOG: INFO [Creating Schema History table: "public"."flyway_schema_history"]
13:09 LOG: DEBUG[Parsing createMetaDataTable.sql ...]
13:09 LOG: DEBUG[Found statement at line 17: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
13:09 LOG: DEBUG[Found statement at line 29: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
13:09 LOG: DEBUG[Found statement at line 31: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
13:09 LOG: DEBUG[Executing SQL: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
13:09 LOG: DEBUG[Update Count: 0]
13:09 LOG: DEBUG[Executing SQL: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
13:09 LOG: DEBUG[Update Count: 0]
13:09 LOG: DEBUG[Executing SQL: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
13:09 LOG: DEBUG[Update Count: 0]
13:09 LOG: DEBUG[Created Schema History table: "public"."flyway_schema_history"]
13:09 LOG: INFO [Current version of schema "public": << Empty Schema >>]
13:09 LOG: INFO [Migrating schema "public" to version 1 - init schema]
13:09 LOG: DEBUG[Executing SQL: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
13:09 LOG: DEBUG[Update Count: 0]
13:09 LOG: DEBUG[Executing SQL: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
13:09 LOG: DEBUG[Update Count: 0]
13:09 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
13:09 LOG: DEBUG[Update Count: 0]
13:09 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
13:09 LOG: DEBUG[Update Count: 0]
13:09 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
13:09 LOG: DEBUG[Update Count: 0]
13:09 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
13:09 LOG: DEBUG[Update Count: 0]
13:09 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
13:09 LOG: DEBUG[Update Count: 0]
13:09 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
13:09 LOG: DEBUG[Update Count: 0]
13:09 LOG: DEBUG[Successfully completed migration of schema "public" to version 1 - init schema]
13:09 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
13:09 LOG: INFO [Migrating schema "public" to version 1.1 - init data]
13:09 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
13:09 LOG: DEBUG[Update Count: 1]
13:09 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
13:09 LOG: DEBUG[Update Count: 1]
13:09 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
13:09 LOG: DEBUG[Update Count: 1]
13:09 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
13:09 LOG: DEBUG[Update Count: 1]
13:09 LOG: DEBUG[Executing SQL: INSERT INTO "country" (name) VALUES ('testCountry')]
13:09 LOG: DEBUG[Update Count: 1]
13:09 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test1', 4, 'test1', 1, 1, 'security')]
13:09 LOG: DEBUG[Update Count: 1]
13:09 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test2', 4, 'test2', 1, 1, 'security')]
13:09 LOG: DEBUG[Update Count: 1]
13:09 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test3', 4, 'test3', 1, 1, 'security')]
13:09 LOG: DEBUG[Update Count: 1]
13:09 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test4', 4, 'test4', 1, 1, 'security')]
13:09 LOG: DEBUG[Update Count: 1]
13:09 LOG: DEBUG[Successfully completed migration of schema "public" to version 1.1 - init data]
13:09 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
13:09 LOG: INFO [Successfully applied 2 migrations to schema "public" (execution time 00:00.257s)]
13:09 LOG: DEBUG[Memory usage: 13 of 126M]
13:09 LOG: DEBUG[Executing prepared SQL update]
13:09 LOG: DEBUG[Executing prepared SQL statement [INSERT INTO tour (photo, date, duration, description, cost, tour_type, hotel_id, country_id) VALUES (?,?::DATE,?,?,?,?::tour_type,?,?)]]
13:09 LOG: DEBUG[Fetching JDBC Connection from DataSource]
13:09 LOG: TRACE[SQL update affected 1 rows]
13:09 LOG: DEBUG[Executing prepared SQL query]
13:09 LOG: DEBUG[Executing prepared SQL statement [SELECT t.id as tour_id, photo, date, duration, description, cost, tour_type, hotel_id, country_id, c.name as country_name, h.name as hotel_name, h.stars, h.website, h.latitude, h.longitude, h.feature  FROM tour t JOIN country c on t.country_id = c.id JOIN hotel h on t.hotel_id = h.id WHERE t.id=?]]
13:09 LOG: DEBUG[Fetching JDBC Connection from DataSource]
13:09 LOG: TRACE[Setting SQL statement parameter value: column index 1, parameter value [1], value class [java.lang.Integer], SQL type unknown]
13:11 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
13:11 LOG: INFO [Detected a Windows x86_64 system]
13:11 LOG: INFO [Postgres binaries at C:\Users\valik\AppData\Local\Temp\embedded-pg\PG-91c1fa33789b0c913345bf0253da6836]
13:11 LOG: TRACE[e2b4f7dc-b67e-4bd8-83ce-b3e4194cdc09 postgres data directory is C:\Users\valik\AppData\Local\Temp\epg9255471884515000920]
13:11 LOG: INFO [The files belonging to this database system will be owned by user "valik".]
13:11 LOG: INFO [This user must also own the server process.]
13:11 LOG: INFO []
13:11 LOG: INFO [The database cluster will be initialized with locale "Russian_Belarus.1251".]
13:11 LOG: INFO [The default text search configuration will be set to "russian".]
13:11 LOG: INFO []
13:11 LOG: INFO [Data page checksums are disabled.]
13:11 LOG: INFO []
13:11 LOG: INFO [fixing permissions on existing directory C:/Users/valik/AppData/Local/Temp/epg9255471884515000920 ... ok]
13:11 LOG: INFO [creating subdirectories ... ok]
13:11 LOG: INFO [selecting default max_connections ... 100]
13:11 LOG: INFO [selecting default shared_buffers ... 128MB]
13:11 LOG: INFO [selecting dynamic shared memory implementation ... windows]
13:11 LOG: INFO [creating configuration files ... ok]
13:11 LOG: INFO [running bootstrap script ... ok]
13:11 LOG: INFO [performing post-bootstrap initialization ... ok]
13:11 LOG: INFO [syncing data to disk ... ok]
13:11 LOG: INFO []
13:11 LOG: INFO [Success. You can now start the database server using:]
13:11 LOG: INFO []
13:11 LOG: INFO [    C:/Users/valik/AppData/Local/Temp/embedded-pg/PG-91c1fa33789b0c913345bf0253da6836/bin/pg_ctl -D ^"C^:^\Users^\valik^\AppData^\Local^\Temp^\epg9255471884515000920^" -l logfile start]
13:11 LOG: INFO []
13:11 LOG: INFO [e2b4f7dc-b67e-4bd8-83ce-b3e4194cdc09 initdb completed in 00:00:07.462]
13:11 LOG: INFO [e2b4f7dc-b67e-4bd8-83ce-b3e4194cdc09 postmaster started as Process[pid=16664, exitValue="not exited"] on port 52183.  Waiting up to PT10S for server startup to finish.]
13:11 LOG: INFO [waiting for server to start....2019-02-20 13:11:09.740 +03 [17860] ���������:  ��� ����� ����������� �� ������ IPv6 "::1" ������ ���� 52183]
13:11 LOG: INFO [2019-02-20 13:11:09.740 +03 [17860] ���������:  ��� ����� ����������� �� ������ IPv4 "127.0.0.1" ������ ���� 52183]
13:11 LOG: INFO [2019-02-20 13:11:09.818 +03 [10672] ���������:  ������� �� ���� ���������: 2019-02-20 13:11:08 +03]
13:11 LOG: INFO [2019-02-20 13:11:09.862 +03 [17860] ���������:  ������� �� ������ ��������� �����������]
13:11 LOG: INFO [ done]
13:11 LOG: TRACE[While waiting for server startup]
java.sql.SQLException: connect failed
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:341) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.waitForServerStartup(EmbeddedPostgres.java:315) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.startPostmaster(EmbeddedPostgres.java:275) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.<init>(EmbeddedPostgres.java:162) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres$Builder.start(EmbeddedPostgres.java:580) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.createOrFindPreparer(PreparedDbProvider.java:82) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.<init>(PreparedDbProvider.java:62) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.forPreparer(PreparedDbProvider.java:57) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.junit.PreparedDbRule.before(PreparedDbRule.java:55) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:46) [junit-4.12.jar:4.12]
	at org.junit.rules.RunRules.evaluate(RunRules.java:20) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) [junit-4.12.jar:4.12]
	at org.mockito.internal.runners.DefaultInternalRunner$1.run(DefaultInternalRunner.java:79) [mockito-core-2.24.5.jar:?]
	at org.mockito.internal.runners.DefaultInternalRunner.run(DefaultInternalRunner.java:85) [mockito-core-2.24.5.jar:?]
	at org.mockito.internal.runners.StrictRunner.run(StrictRunner.java:39) [mockito-core-2.24.5.jar:?]
	at org.mockito.junit.MockitoJUnitRunner.run(MockitoJUnitRunner.java:163) [mockito-core-2.24.5.jar:?]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) [junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) [junit-rt.jar:?]
Caused by: java.net.SocketTimeoutException: connect timed out
	at java.net.PlainSocketImpl.waitForConnect(Native Method) ~[?:?]
	at java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:107) ~[?:?]
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224) ~[?:?]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403) ~[?:?]
	at java.net.Socket.connect(Socket.java:591) ~[?:?]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:339) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	... 20 more
13:11 LOG: INFO [e2b4f7dc-b67e-4bd8-83ce-b3e4194cdc09 postmaster startup finished in 00:00:00.845]
13:11 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
13:11 LOG: INFO [Flyway Community Edition 5.2.4 by Boxfuse]
13:11 LOG: INFO [Database: jdbc:postgresql://localhost:52183/template1 (PostgreSQL 10.6)]
13:11 LOG: DEBUG[Driver  : PostgreSQL JDBC Driver 42.2.5]
13:11 LOG: DEBUG[DDL Transactions Supported: true]
13:11 LOG: DEBUG[Schema: public]
13:11 LOG: DEBUG[Scanning for classpath resources at 'classpath:db/migration' ...]
13:11 LOG: DEBUG[Determining location urls for classpath:db/migration using ClassLoader jdk.internal.loader.ClassLoaders$AppClassLoader@6ed3ef1 ...]
13:11 LOG: DEBUG[Scanning URL: file:/C:/Users/valik/IdeaProjects/java-lab-task-1/target/classes/db/migration]
13:11 LOG: DEBUG[JBoss VFS v2 available: false]
13:11 LOG: DEBUG[Scanning starting at classpath root in filesystem: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\]
13:11 LOG: DEBUG[Scanning for resources in path: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\db\migration (db/migration)]
13:11 LOG: DEBUG[Found resource: db/migration/V1_1__init_data.sql]
13:11 LOG: DEBUG[Found resource: db/migration/V1__init_schema.sql]
13:11 LOG: DEBUG[Scanning for classes at classpath:db/migration]
13:11 LOG: DEBUG[Scanning for SQL callbacks ...]
13:11 LOG: DEBUG[Spring Jdbc available: true]
13:11 LOG: DEBUG[Validating migrations ...]
13:11 LOG: DEBUG[Parsing V1_1__init_data.sql ...]
13:11 LOG: DEBUG[Found statement at line 1: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
13:11 LOG: DEBUG[Found statement at line 2: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
13:11 LOG: DEBUG[Found statement at line 3: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
13:11 LOG: DEBUG[Found statement at line 4: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
13:11 LOG: DEBUG[Found statement at line 6: INSERT INTO "country" (name) VALUES ('testCountry')]
13:11 LOG: DEBUG[Found statement at line 8: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test1', 4, 'test1', 1, 1, 'security')]
13:11 LOG: DEBUG[Found statement at line 9: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test2', 4, 'test2', 1, 1, 'security')]
13:11 LOG: DEBUG[Found statement at line 10: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test3', 4, 'test3', 1, 1, 'security')]
13:11 LOG: DEBUG[Found statement at line 11: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test4', 4, 'test4', 1, 1, 'security')]
13:11 LOG: DEBUG[Parsing V1__init_schema.sql ...]
13:11 LOG: DEBUG[Found statement at line 1: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
13:11 LOG: DEBUG[Found statement at line 8: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
13:11 LOG: DEBUG[Found statement at line 16: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
13:11 LOG: DEBUG[Found statement at line 24: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
13:11 LOG: DEBUG[Found statement at line 36: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
13:11 LOG: DEBUG[Found statement at line 43: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
13:11 LOG: DEBUG[Found statement at line 59: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
13:11 LOG: DEBUG[Found statement at line 68: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
13:11 LOG: DEBUG[Filtering out resource: db/migration/V1_1__init_data.sql (filename: V1_1__init_data.sql)]
13:11 LOG: DEBUG[Filtering out resource: db/migration/V1__init_schema.sql (filename: V1__init_schema.sql)]
13:11 LOG: INFO [Successfully validated 2 migrations (execution time 00:00.027s)]
13:11 LOG: DEBUG[Schema "public" already exists. Skipping schema creation.]
13:11 LOG: INFO [Creating Schema History table: "public"."flyway_schema_history"]
13:11 LOG: DEBUG[Parsing createMetaDataTable.sql ...]
13:11 LOG: DEBUG[Found statement at line 17: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
13:11 LOG: DEBUG[Found statement at line 29: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
13:11 LOG: DEBUG[Found statement at line 31: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
13:11 LOG: DEBUG[Executing SQL: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
13:11 LOG: DEBUG[Update Count: 0]
13:11 LOG: DEBUG[Executing SQL: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
13:11 LOG: DEBUG[Update Count: 0]
13:11 LOG: DEBUG[Executing SQL: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
13:11 LOG: DEBUG[Update Count: 0]
13:11 LOG: DEBUG[Created Schema History table: "public"."flyway_schema_history"]
13:11 LOG: INFO [Current version of schema "public": << Empty Schema >>]
13:11 LOG: INFO [Migrating schema "public" to version 1 - init schema]
13:11 LOG: DEBUG[Executing SQL: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
13:11 LOG: DEBUG[Update Count: 0]
13:11 LOG: DEBUG[Executing SQL: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
13:11 LOG: DEBUG[Update Count: 0]
13:11 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
13:11 LOG: DEBUG[Update Count: 0]
13:11 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
13:11 LOG: DEBUG[Update Count: 0]
13:11 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
13:11 LOG: DEBUG[Update Count: 0]
13:11 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
13:11 LOG: DEBUG[Update Count: 0]
13:11 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
13:11 LOG: DEBUG[Update Count: 0]
13:11 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
13:11 LOG: DEBUG[Update Count: 0]
13:11 LOG: DEBUG[Successfully completed migration of schema "public" to version 1 - init schema]
13:11 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
13:11 LOG: INFO [Migrating schema "public" to version 1.1 - init data]
13:11 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
13:11 LOG: DEBUG[Update Count: 1]
13:11 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
13:11 LOG: DEBUG[Update Count: 1]
13:11 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
13:11 LOG: DEBUG[Update Count: 1]
13:11 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
13:11 LOG: DEBUG[Update Count: 1]
13:11 LOG: DEBUG[Executing SQL: INSERT INTO "country" (name) VALUES ('testCountry')]
13:11 LOG: DEBUG[Update Count: 1]
13:11 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test1', 4, 'test1', 1, 1, 'security')]
13:11 LOG: DEBUG[Update Count: 1]
13:11 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test2', 4, 'test2', 1, 1, 'security')]
13:11 LOG: DEBUG[Update Count: 1]
13:11 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test3', 4, 'test3', 1, 1, 'security')]
13:11 LOG: DEBUG[Update Count: 1]
13:11 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test4', 4, 'test4', 1, 1, 'security')]
13:11 LOG: DEBUG[Update Count: 1]
13:11 LOG: DEBUG[Successfully completed migration of schema "public" to version 1.1 - init data]
13:11 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
13:11 LOG: INFO [Successfully applied 2 migrations to schema "public" (execution time 00:00.189s)]
13:11 LOG: DEBUG[Memory usage: 13 of 126M]
13:11 LOG: DEBUG[Executing prepared SQL update]
13:11 LOG: DEBUG[Executing prepared SQL statement [INSERT INTO tour (photo, date, duration, description, cost, tour_type, hotel_id, country_id) VALUES (?,?::DATE,?,?,?,?::tour_type,?,?)]]
13:11 LOG: DEBUG[Fetching JDBC Connection from DataSource]
13:11 LOG: TRACE[SQL update affected 1 rows]
13:11 LOG: DEBUG[Executing prepared SQL query]
13:11 LOG: DEBUG[Executing prepared SQL statement [SELECT t.id as tour_id, photo, date, duration, description, cost, tour_type, hotel_id, country_id, c.name as country_name, h.name as hotel_name, h.stars, h.website, h.latitude, h.longitude, h.feature  FROM tour t JOIN country c on t.country_id = c.id JOIN hotel h on t.hotel_id = h.id WHERE t.id=?]]
13:11 LOG: DEBUG[Fetching JDBC Connection from DataSource]
13:11 LOG: TRACE[Setting SQL statement parameter value: column index 1, parameter value [4], value class [java.lang.Integer], SQL type unknown]
13:11 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
13:11 LOG: INFO [Detected a Windows x86_64 system]
13:11 LOG: INFO [Postgres binaries at C:\Users\valik\AppData\Local\Temp\embedded-pg\PG-91c1fa33789b0c913345bf0253da6836]
13:11 LOG: TRACE[bc9095fc-9676-485f-8c3d-d769aed62f97 postgres data directory is C:\Users\valik\AppData\Local\Temp\epg3909590078079231630]
13:11 LOG: INFO [The files belonging to this database system will be owned by user "valik".]
13:11 LOG: INFO [This user must also own the server process.]
13:11 LOG: INFO []
13:11 LOG: INFO [The database cluster will be initialized with locale "Russian_Belarus.1251".]
13:11 LOG: INFO [The default text search configuration will be set to "russian".]
13:11 LOG: INFO []
13:11 LOG: INFO [Data page checksums are disabled.]
13:11 LOG: INFO []
13:11 LOG: INFO [fixing permissions on existing directory C:/Users/valik/AppData/Local/Temp/epg3909590078079231630 ... ok]
13:11 LOG: INFO [creating subdirectories ... ok]
13:11 LOG: INFO [selecting default max_connections ... 100]
13:11 LOG: INFO [selecting default shared_buffers ... 128MB]
13:11 LOG: INFO [selecting dynamic shared memory implementation ... windows]
13:11 LOG: INFO [creating configuration files ... ok]
13:11 LOG: INFO [running bootstrap script ... ok]
13:11 LOG: INFO [performing post-bootstrap initialization ... ok]
13:11 LOG: INFO [syncing data to disk ... ok]
13:11 LOG: INFO []
13:11 LOG: INFO [Success. You can now start the database server using:]
13:11 LOG: INFO []
13:11 LOG: INFO [    C:/Users/valik/AppData/Local/Temp/embedded-pg/PG-91c1fa33789b0c913345bf0253da6836/bin/pg_ctl -D ^"C^:^\Users^\valik^\AppData^\Local^\Temp^\epg3909590078079231630^" -l logfile start]
13:11 LOG: INFO []
13:11 LOG: INFO [bc9095fc-9676-485f-8c3d-d769aed62f97 initdb completed in 00:00:07.291]
13:11 LOG: INFO [bc9095fc-9676-485f-8c3d-d769aed62f97 postmaster started as Process[pid=16940, exitValue="not exited"] on port 52201.  Waiting up to PT10S for server startup to finish.]
13:11 LOG: INFO [waiting for server to start....2019-02-20 13:11:41.846 +03 [15208] ���������:  ��� ����� ����������� �� ������ IPv6 "::1" ������ ���� 52201]
13:11 LOG: INFO [2019-02-20 13:11:41.846 +03 [15208] ���������:  ��� ����� ����������� �� ������ IPv4 "127.0.0.1" ������ ���� 52201]
13:11 LOG: INFO [2019-02-20 13:11:41.928 +03 [4176] ���������:  ������� �� ���� ���������: 2019-02-20 13:11:40 +03]
13:11 LOG: INFO [2019-02-20 13:11:41.973 +03 [15208] ���������:  ������� �� ������ ��������� �����������]
13:11 LOG: INFO [ done]
13:11 LOG: INFO [server started]
13:11 LOG: TRACE[While waiting for server startup]
java.sql.SQLException: connect failed
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:341) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.waitForServerStartup(EmbeddedPostgres.java:315) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.startPostmaster(EmbeddedPostgres.java:275) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.<init>(EmbeddedPostgres.java:162) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres$Builder.start(EmbeddedPostgres.java:580) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.createOrFindPreparer(PreparedDbProvider.java:82) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.<init>(PreparedDbProvider.java:62) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.forPreparer(PreparedDbProvider.java:57) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.junit.PreparedDbRule.before(PreparedDbRule.java:55) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:46) [junit-4.12.jar:4.12]
	at org.junit.rules.RunRules.evaluate(RunRules.java:20) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) [junit-4.12.jar:4.12]
	at org.mockito.internal.runners.DefaultInternalRunner$1.run(DefaultInternalRunner.java:79) [mockito-core-2.24.5.jar:?]
	at org.mockito.internal.runners.DefaultInternalRunner.run(DefaultInternalRunner.java:85) [mockito-core-2.24.5.jar:?]
	at org.mockito.internal.runners.StrictRunner.run(StrictRunner.java:39) [mockito-core-2.24.5.jar:?]
	at org.mockito.junit.MockitoJUnitRunner.run(MockitoJUnitRunner.java:163) [mockito-core-2.24.5.jar:?]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) [junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) [junit-rt.jar:?]
Caused by: java.net.SocketTimeoutException: connect timed out
	at java.net.PlainSocketImpl.waitForConnect(Native Method) ~[?:?]
	at java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:107) ~[?:?]
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224) ~[?:?]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403) ~[?:?]
	at java.net.Socket.connect(Socket.java:591) ~[?:?]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:339) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	... 20 more
13:11 LOG: INFO [2019-02-20 13:11:42.303 +03 [13612] ���������:  �������� ��������� �����]
13:11 LOG: INFO [bc9095fc-9676-485f-8c3d-d769aed62f97 postmaster startup finished in 00:00:00.838]
13:11 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
13:11 LOG: INFO [Flyway Community Edition 5.2.4 by Boxfuse]
13:11 LOG: INFO [Database: jdbc:postgresql://localhost:52201/template1 (PostgreSQL 10.6)]
13:11 LOG: DEBUG[Driver  : PostgreSQL JDBC Driver 42.2.5]
13:11 LOG: DEBUG[DDL Transactions Supported: true]
13:11 LOG: DEBUG[Schema: public]
13:11 LOG: DEBUG[Scanning for classpath resources at 'classpath:db/migration' ...]
13:11 LOG: DEBUG[Determining location urls for classpath:db/migration using ClassLoader jdk.internal.loader.ClassLoaders$AppClassLoader@6ed3ef1 ...]
13:11 LOG: DEBUG[Scanning URL: file:/C:/Users/valik/IdeaProjects/java-lab-task-1/target/classes/db/migration]
13:11 LOG: DEBUG[JBoss VFS v2 available: false]
13:11 LOG: DEBUG[Scanning starting at classpath root in filesystem: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\]
13:11 LOG: DEBUG[Scanning for resources in path: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\db\migration (db/migration)]
13:11 LOG: DEBUG[Found resource: db/migration/V1_1__init_data.sql]
13:11 LOG: DEBUG[Found resource: db/migration/V1__init_schema.sql]
13:11 LOG: DEBUG[Scanning for classes at classpath:db/migration]
13:11 LOG: DEBUG[Scanning for SQL callbacks ...]
13:11 LOG: DEBUG[Spring Jdbc available: true]
13:11 LOG: DEBUG[Validating migrations ...]
13:11 LOG: DEBUG[Parsing V1_1__init_data.sql ...]
13:11 LOG: DEBUG[Found statement at line 1: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
13:11 LOG: DEBUG[Found statement at line 2: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
13:11 LOG: DEBUG[Found statement at line 3: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
13:11 LOG: DEBUG[Found statement at line 4: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
13:11 LOG: DEBUG[Found statement at line 6: INSERT INTO "country" (name) VALUES ('testCountry')]
13:11 LOG: DEBUG[Found statement at line 8: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test1', 4, 'test1', 1, 1, 'security')]
13:11 LOG: DEBUG[Found statement at line 9: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test2', 4, 'test2', 1, 1, 'security')]
13:11 LOG: DEBUG[Found statement at line 10: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test3', 4, 'test3', 1, 1, 'security')]
13:11 LOG: DEBUG[Found statement at line 11: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test4', 4, 'test4', 1, 1, 'security')]
13:11 LOG: DEBUG[Parsing V1__init_schema.sql ...]
13:11 LOG: DEBUG[Found statement at line 1: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
13:11 LOG: DEBUG[Found statement at line 8: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
13:11 LOG: DEBUG[Found statement at line 16: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
13:11 LOG: DEBUG[Found statement at line 24: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
13:11 LOG: DEBUG[Found statement at line 36: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
13:11 LOG: DEBUG[Found statement at line 43: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
13:11 LOG: DEBUG[Found statement at line 59: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
13:11 LOG: DEBUG[Found statement at line 68: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
13:11 LOG: DEBUG[Filtering out resource: db/migration/V1_1__init_data.sql (filename: V1_1__init_data.sql)]
13:11 LOG: DEBUG[Filtering out resource: db/migration/V1__init_schema.sql (filename: V1__init_schema.sql)]
13:11 LOG: INFO [Successfully validated 2 migrations (execution time 00:00.028s)]
13:11 LOG: DEBUG[Schema "public" already exists. Skipping schema creation.]
13:11 LOG: INFO [Creating Schema History table: "public"."flyway_schema_history"]
13:11 LOG: DEBUG[Parsing createMetaDataTable.sql ...]
13:11 LOG: DEBUG[Found statement at line 17: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
13:11 LOG: DEBUG[Found statement at line 29: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
13:11 LOG: DEBUG[Found statement at line 31: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
13:11 LOG: DEBUG[Executing SQL: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
13:11 LOG: DEBUG[Update Count: 0]
13:11 LOG: DEBUG[Executing SQL: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
13:11 LOG: DEBUG[Update Count: 0]
13:11 LOG: DEBUG[Executing SQL: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
13:11 LOG: DEBUG[Update Count: 0]
13:11 LOG: DEBUG[Created Schema History table: "public"."flyway_schema_history"]
13:11 LOG: INFO [Current version of schema "public": << Empty Schema >>]
13:11 LOG: INFO [Migrating schema "public" to version 1 - init schema]
13:11 LOG: DEBUG[Executing SQL: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
13:11 LOG: DEBUG[Update Count: 0]
13:11 LOG: DEBUG[Executing SQL: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
13:11 LOG: DEBUG[Update Count: 0]
13:11 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
13:11 LOG: DEBUG[Update Count: 0]
13:11 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
13:11 LOG: DEBUG[Update Count: 0]
13:11 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
13:11 LOG: DEBUG[Update Count: 0]
13:11 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
13:11 LOG: DEBUG[Update Count: 0]
13:11 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
13:11 LOG: DEBUG[Update Count: 0]
13:11 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
13:11 LOG: DEBUG[Update Count: 0]
13:11 LOG: DEBUG[Successfully completed migration of schema "public" to version 1 - init schema]
13:11 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
13:11 LOG: INFO [Migrating schema "public" to version 1.1 - init data]
13:11 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
13:11 LOG: DEBUG[Update Count: 1]
13:11 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
13:11 LOG: DEBUG[Update Count: 1]
13:11 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
13:11 LOG: DEBUG[Update Count: 1]
13:11 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
13:11 LOG: DEBUG[Update Count: 1]
13:11 LOG: DEBUG[Executing SQL: INSERT INTO "country" (name) VALUES ('testCountry')]
13:11 LOG: DEBUG[Update Count: 1]
13:11 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test1', 4, 'test1', 1, 1, 'security')]
13:11 LOG: DEBUG[Update Count: 1]
13:11 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test2', 4, 'test2', 1, 1, 'security')]
13:11 LOG: DEBUG[Update Count: 1]
13:11 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test3', 4, 'test3', 1, 1, 'security')]
13:11 LOG: DEBUG[Update Count: 1]
13:11 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test4', 4, 'test4', 1, 1, 'security')]
13:11 LOG: DEBUG[Update Count: 1]
13:11 LOG: DEBUG[Successfully completed migration of schema "public" to version 1.1 - init data]
13:11 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
13:11 LOG: INFO [Successfully applied 2 migrations to schema "public" (execution time 00:00.175s)]
13:11 LOG: DEBUG[Memory usage: 13 of 126M]
13:11 LOG: DEBUG[Executing prepared SQL update]
13:11 LOG: DEBUG[Executing prepared SQL statement [INSERT INTO tour (photo, date, duration, description, cost, tour_type, hotel_id, country_id) VALUES (?,?::DATE,?,?,?,?::tour_type,?,?)]]
13:11 LOG: DEBUG[Fetching JDBC Connection from DataSource]
13:11 LOG: TRACE[SQL update affected 1 rows]
13:11 LOG: DEBUG[Executing prepared SQL query]
13:11 LOG: DEBUG[Executing prepared SQL statement [SELECT t.id as tour_id, photo, date, duration, description, cost, tour_type, hotel_id, country_id, c.name as country_name, h.name as hotel_name, h.stars, h.website, h.latitude, h.longitude, h.feature  FROM tour t JOIN country c on t.country_id = c.id JOIN hotel h on t.hotel_id = h.id WHERE t.id=?]]
13:11 LOG: DEBUG[Fetching JDBC Connection from DataSource]
13:11 LOG: TRACE[Setting SQL statement parameter value: column index 1, parameter value [1], value class [java.lang.Integer], SQL type unknown]
13:21 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
13:21 LOG: INFO [Detected a Windows x86_64 system]
13:21 LOG: INFO [Postgres binaries at C:\Users\valik\AppData\Local\Temp\embedded-pg\PG-91c1fa33789b0c913345bf0253da6836]
13:21 LOG: TRACE[b6a4f9fa-101c-45a3-bb73-7ca019570973 postgres data directory is C:\Users\valik\AppData\Local\Temp\epg12447668332895254783]
13:21 LOG: INFO [The files belonging to this database system will be owned by user "valik".]
13:21 LOG: INFO [This user must also own the server process.]
13:21 LOG: INFO []
13:21 LOG: INFO [The database cluster will be initialized with locale "Russian_Belarus.1251".]
13:21 LOG: INFO [The default text search configuration will be set to "russian".]
13:21 LOG: INFO []
13:21 LOG: INFO [Data page checksums are disabled.]
13:21 LOG: INFO []
13:21 LOG: INFO [fixing permissions on existing directory C:/Users/valik/AppData/Local/Temp/epg12447668332895254783 ... ok]
13:21 LOG: INFO [creating subdirectories ... ok]
13:21 LOG: INFO [selecting default max_connections ... 100]
13:21 LOG: INFO [selecting default shared_buffers ... 128MB]
13:21 LOG: INFO [selecting dynamic shared memory implementation ... windows]
13:21 LOG: INFO [creating configuration files ... ok]
13:21 LOG: INFO [running bootstrap script ... ok]
13:21 LOG: INFO [performing post-bootstrap initialization ... ok]
13:21 LOG: INFO [syncing data to disk ... ok]
13:21 LOG: INFO []
13:21 LOG: INFO [Success. You can now start the database server using:]
13:21 LOG: INFO []
13:21 LOG: INFO [    C:/Users/valik/AppData/Local/Temp/embedded-pg/PG-91c1fa33789b0c913345bf0253da6836/bin/pg_ctl -D ^"C^:^\Users^\valik^\AppData^\Local^\Temp^\epg12447668332895254783^" -l logfile start]
13:21 LOG: INFO []
13:21 LOG: INFO [b6a4f9fa-101c-45a3-bb73-7ca019570973 initdb completed in 00:00:07.476]
13:21 LOG: INFO [b6a4f9fa-101c-45a3-bb73-7ca019570973 postmaster started as Process[pid=1536, exitValue="not exited"] on port 52257.  Waiting up to PT10S for server startup to finish.]
13:21 LOG: INFO [waiting for server to start....2019-02-20 13:21:25.431 +03 [17436] ���������:  ��� ����� ����������� �� ������ IPv6 "::1" ������ ���� 52257]
13:21 LOG: INFO [2019-02-20 13:21:25.431 +03 [17436] ���������:  ��� ����� ����������� �� ������ IPv4 "127.0.0.1" ������ ���� 52257]
13:21 LOG: INFO [2019-02-20 13:21:25.515 +03 [15676] ���������:  ������� �� ���� ���������: 2019-02-20 13:21:24 +03]
13:21 LOG: INFO [2019-02-20 13:21:25.560 +03 [17436] ���������:  ������� �� ������ ��������� �����������]
13:21 LOG: INFO [ done]
13:21 LOG: TRACE[While waiting for server startup]
java.sql.SQLException: connect failed
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:341) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.waitForServerStartup(EmbeddedPostgres.java:315) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.startPostmaster(EmbeddedPostgres.java:275) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.<init>(EmbeddedPostgres.java:162) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres$Builder.start(EmbeddedPostgres.java:580) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.createOrFindPreparer(PreparedDbProvider.java:82) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.<init>(PreparedDbProvider.java:62) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.forPreparer(PreparedDbProvider.java:57) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.junit.PreparedDbRule.before(PreparedDbRule.java:55) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:46) [junit-4.12.jar:4.12]
	at org.junit.rules.RunRules.evaluate(RunRules.java:20) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) [junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) [junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) [junit-rt.jar:?]
Caused by: java.net.SocketTimeoutException: connect timed out
	at java.net.PlainSocketImpl.waitForConnect(Native Method) ~[?:?]
	at java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:107) ~[?:?]
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224) ~[?:?]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403) ~[?:?]
	at java.net.Socket.connect(Socket.java:591) ~[?:?]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:339) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	... 16 more
13:21 LOG: INFO [b6a4f9fa-101c-45a3-bb73-7ca019570973 postmaster startup finished in 00:00:00.841]
13:21 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
13:21 LOG: INFO [Flyway Community Edition 5.2.4 by Boxfuse]
13:21 LOG: INFO [Database: jdbc:postgresql://localhost:52257/template1 (PostgreSQL 10.6)]
13:21 LOG: DEBUG[Driver  : PostgreSQL JDBC Driver 42.2.5]
13:21 LOG: DEBUG[DDL Transactions Supported: true]
13:21 LOG: DEBUG[Schema: public]
13:21 LOG: DEBUG[Scanning for classpath resources at 'classpath:db/migration' ...]
13:21 LOG: DEBUG[Determining location urls for classpath:db/migration using ClassLoader jdk.internal.loader.ClassLoaders$AppClassLoader@6ed3ef1 ...]
13:21 LOG: DEBUG[Scanning URL: file:/C:/Users/valik/IdeaProjects/java-lab-task-1/target/classes/db/migration]
13:21 LOG: DEBUG[JBoss VFS v2 available: false]
13:21 LOG: DEBUG[Scanning starting at classpath root in filesystem: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\]
13:21 LOG: DEBUG[Scanning for resources in path: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\db\migration (db/migration)]
13:21 LOG: DEBUG[Found resource: db/migration/V1_1__init_data.sql]
13:21 LOG: DEBUG[Found resource: db/migration/V1__init_schema.sql]
13:21 LOG: DEBUG[Scanning for classes at classpath:db/migration]
13:21 LOG: DEBUG[Scanning for SQL callbacks ...]
13:21 LOG: DEBUG[Spring Jdbc available: true]
13:21 LOG: DEBUG[Validating migrations ...]
13:21 LOG: DEBUG[Parsing V1_1__init_data.sql ...]
13:21 LOG: DEBUG[Found statement at line 1: INSERT INTO "user" (login, password)
VALUES ('user1', 'user1')]
13:21 LOG: DEBUG[Found statement at line 3: INSERT INTO "user" (login, password)
VALUES ('user2', 'user2')]
13:21 LOG: DEBUG[Found statement at line 5: INSERT INTO "user" (login, password)
VALUES ('user3', 'user3')]
13:21 LOG: DEBUG[Found statement at line 7: INSERT INTO "user" (login, password)
VALUES ('user4', 'user4')]
13:21 LOG: DEBUG[Found statement at line 10: INSERT INTO "country" (name)
VALUES ('testCountry')]
13:21 LOG: DEBUG[Found statement at line 13: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature)
VALUES ('test1', 4, 'test1', 1, 1, 'security')]
13:21 LOG: DEBUG[Found statement at line 15: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature)
VALUES ('test2', 4, 'test2', 1, 1, 'security')]
13:21 LOG: DEBUG[Found statement at line 17: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature)
VALUES ('test3', 4, 'test3', 1, 1, 'security')]
13:21 LOG: DEBUG[Found statement at line 19: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature)
VALUES ('test4', 4, 'test4', 1, 1, 'security')]
13:21 LOG: DEBUG[Found statement at line 22: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id)
VALUES ('test1.jpg', '12-12-2012', 12, 'description1', 505, 'guided', 1, 1)]
13:21 LOG: DEBUG[Found statement at line 24: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id)
VALUES ('test2.jpg', '12-12-2012', 12, 'description2', 505, 'guided', 2, 1)]
13:21 LOG: DEBUG[Found statement at line 26: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id)
VALUES ('test3.jpg', '12-12-2012', 12, 'description3', 505, 'guided', 3, 1)]
13:21 LOG: DEBUG[Found statement at line 28: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id)
VALUES ('test4.jpg', '12-12-2012', 12, 'description4', 505, 'guided', 4, 1)]
13:21 LOG: DEBUG[Parsing V1__init_schema.sql ...]
13:21 LOG: DEBUG[Found statement at line 1: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
13:21 LOG: DEBUG[Found statement at line 8: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
13:21 LOG: DEBUG[Found statement at line 16: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
13:21 LOG: DEBUG[Found statement at line 24: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
13:21 LOG: DEBUG[Found statement at line 36: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
13:21 LOG: DEBUG[Found statement at line 43: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
13:21 LOG: DEBUG[Found statement at line 59: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
13:21 LOG: DEBUG[Found statement at line 68: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
13:21 LOG: DEBUG[Filtering out resource: db/migration/V1_1__init_data.sql (filename: V1_1__init_data.sql)]
13:21 LOG: DEBUG[Filtering out resource: db/migration/V1__init_schema.sql (filename: V1__init_schema.sql)]
13:21 LOG: INFO [Successfully validated 2 migrations (execution time 00:00.028s)]
13:21 LOG: DEBUG[Schema "public" already exists. Skipping schema creation.]
13:21 LOG: INFO [Creating Schema History table: "public"."flyway_schema_history"]
13:21 LOG: DEBUG[Parsing createMetaDataTable.sql ...]
13:21 LOG: DEBUG[Found statement at line 17: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
13:21 LOG: DEBUG[Found statement at line 29: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
13:21 LOG: DEBUG[Found statement at line 31: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
13:21 LOG: DEBUG[Executing SQL: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
13:21 LOG: DEBUG[Update Count: 0]
13:21 LOG: DEBUG[Executing SQL: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
13:21 LOG: DEBUG[Update Count: 0]
13:21 LOG: DEBUG[Executing SQL: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
13:21 LOG: DEBUG[Update Count: 0]
13:21 LOG: DEBUG[Created Schema History table: "public"."flyway_schema_history"]
13:21 LOG: INFO [Current version of schema "public": << Empty Schema >>]
13:21 LOG: INFO [Migrating schema "public" to version 1 - init schema]
13:21 LOG: DEBUG[Executing SQL: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
13:21 LOG: DEBUG[Update Count: 0]
13:21 LOG: DEBUG[Executing SQL: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
13:21 LOG: DEBUG[Update Count: 0]
13:21 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
13:21 LOG: DEBUG[Update Count: 0]
13:21 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
13:21 LOG: DEBUG[Update Count: 0]
13:21 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
13:21 LOG: DEBUG[Update Count: 0]
13:21 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
13:21 LOG: DEBUG[Update Count: 0]
13:21 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
13:21 LOG: DEBUG[Update Count: 0]
13:21 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
13:21 LOG: DEBUG[Update Count: 0]
13:21 LOG: DEBUG[Successfully completed migration of schema "public" to version 1 - init schema]
13:21 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
13:21 LOG: INFO [Migrating schema "public" to version 1.1 - init data]
13:21 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password)
VALUES ('user1', 'user1')]
13:21 LOG: DEBUG[Update Count: 1]
13:21 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password)
VALUES ('user2', 'user2')]
13:21 LOG: DEBUG[Update Count: 1]
13:21 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password)
VALUES ('user3', 'user3')]
13:21 LOG: DEBUG[Update Count: 1]
13:21 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password)
VALUES ('user4', 'user4')]
13:21 LOG: DEBUG[Update Count: 1]
13:21 LOG: DEBUG[Executing SQL: INSERT INTO "country" (name)
VALUES ('testCountry')]
13:21 LOG: DEBUG[Update Count: 1]
13:21 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature)
VALUES ('test1', 4, 'test1', 1, 1, 'security')]
13:21 LOG: DEBUG[Update Count: 1]
13:21 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature)
VALUES ('test2', 4, 'test2', 1, 1, 'security')]
13:21 LOG: DEBUG[Update Count: 1]
13:21 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature)
VALUES ('test3', 4, 'test3', 1, 1, 'security')]
13:21 LOG: DEBUG[Update Count: 1]
13:21 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature)
VALUES ('test4', 4, 'test4', 1, 1, 'security')]
13:21 LOG: DEBUG[Update Count: 1]
13:21 LOG: DEBUG[Executing SQL: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id)
VALUES ('test1.jpg', '12-12-2012', 12, 'description1', 505, 'guided', 1, 1)]
13:21 LOG: DEBUG[Update Count: 1]
13:21 LOG: DEBUG[Executing SQL: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id)
VALUES ('test2.jpg', '12-12-2012', 12, 'description2', 505, 'guided', 2, 1)]
13:21 LOG: DEBUG[Update Count: 1]
13:21 LOG: DEBUG[Executing SQL: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id)
VALUES ('test3.jpg', '12-12-2012', 12, 'description3', 505, 'guided', 3, 1)]
13:21 LOG: DEBUG[Update Count: 1]
13:21 LOG: DEBUG[Executing SQL: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id)
VALUES ('test4.jpg', '12-12-2012', 12, 'description4', 505, 'guided', 4, 1)]
13:21 LOG: DEBUG[Update Count: 1]
13:21 LOG: DEBUG[Successfully completed migration of schema "public" to version 1.1 - init data]
13:21 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
13:21 LOG: INFO [Successfully applied 2 migrations to schema "public" (execution time 00:00.174s)]
13:21 LOG: DEBUG[Memory usage: 13 of 126M]
13:21 LOG: DEBUG[Executing prepared SQL query]
13:21 LOG: DEBUG[Executing prepared SQL statement [SELECT t.id as tour_id, photo, date, duration, description, cost, tour_type, hotel_id, country_id, c.name as country_name, h.name as hotel_name, h.stars, h.website, h.latitude, h.longitude, h.feature  FROM tour t JOIN country c on t.country_id = c.id JOIN hotel h on t.hotel_id = h.id WHERE t.id=?]]
13:21 LOG: DEBUG[Fetching JDBC Connection from DataSource]
13:21 LOG: TRACE[Setting SQL statement parameter value: column index 1, parameter value [1], value class [java.lang.Integer], SQL type unknown]
13:21 LOG: DEBUG[Executing SQL query [SELECT t.id as tour_id, photo, date, duration, description, cost, tour_type, hotel_id, country_id, c.name as country_name, h.name as hotel_name, h.stars, h.website, h.latitude, h.longitude, h.feature  FROM tour t JOIN country c on t.country_id = c.id JOIN hotel h on t.hotel_id = h.id]]
13:21 LOG: DEBUG[Fetching JDBC Connection from DataSource]
13:21 LOG: DEBUG[Executing prepared SQL query]
13:21 LOG: DEBUG[Executing prepared SQL statement [SELECT t.id as tour_id, photo, date, duration, description, cost, tour_type, hotel_id, country_id, c.name as country_name, h.name as hotel_name, h.stars, h.website, h.latitude, h.longitude, h.feature  FROM tour t JOIN country c on t.country_id = c.id JOIN hotel h on t.hotel_id = h.id WHERE t.id=?]]
13:21 LOG: DEBUG[Fetching JDBC Connection from DataSource]
13:21 LOG: TRACE[Setting SQL statement parameter value: column index 1, parameter value [1], value class [java.lang.Integer], SQL type unknown]
13:21 LOG: DEBUG[Executing prepared SQL update]
13:21 LOG: DEBUG[Executing prepared SQL statement [DELETE FROM tour WHERE id=?]]
13:21 LOG: DEBUG[Fetching JDBC Connection from DataSource]
13:21 LOG: TRACE[Setting SQL statement parameter value: column index 1, parameter value [1], value class [java.lang.Integer], SQL type unknown]
13:21 LOG: TRACE[SQL update affected 1 rows]
13:21 LOG: DEBUG[Executing prepared SQL query]
13:21 LOG: DEBUG[Executing prepared SQL statement [SELECT t.id as tour_id, photo, date, duration, description, cost, tour_type, hotel_id, country_id, c.name as country_name, h.name as hotel_name, h.stars, h.website, h.latitude, h.longitude, h.feature  FROM tour t JOIN country c on t.country_id = c.id JOIN hotel h on t.hotel_id = h.id WHERE t.id=?]]
13:21 LOG: DEBUG[Fetching JDBC Connection from DataSource]
13:21 LOG: TRACE[Setting SQL statement parameter value: column index 1, parameter value [1], value class [java.lang.Integer], SQL type unknown]
13:21 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
13:21 LOG: INFO [Detected a Windows x86_64 system]
13:21 LOG: INFO [Postgres binaries at C:\Users\valik\AppData\Local\Temp\embedded-pg\PG-91c1fa33789b0c913345bf0253da6836]
13:21 LOG: TRACE[4cc36c31-747c-46c1-a1b2-f0741cde1229 postgres data directory is C:\Users\valik\AppData\Local\Temp\epg6797198302114115579]
13:21 LOG: INFO [The files belonging to this database system will be owned by user "valik".]
13:21 LOG: INFO [This user must also own the server process.]
13:21 LOG: INFO []
13:21 LOG: INFO [The database cluster will be initialized with locale "Russian_Belarus.1251".]
13:21 LOG: INFO [The default text search configuration will be set to "russian".]
13:21 LOG: INFO []
13:21 LOG: INFO [Data page checksums are disabled.]
13:21 LOG: INFO []
13:21 LOG: INFO [fixing permissions on existing directory C:/Users/valik/AppData/Local/Temp/epg6797198302114115579 ... ok]
13:21 LOG: INFO [creating subdirectories ... ok]
13:21 LOG: INFO [selecting default max_connections ... 100]
13:21 LOG: INFO [selecting default shared_buffers ... 128MB]
13:21 LOG: INFO [selecting dynamic shared memory implementation ... windows]
13:21 LOG: INFO [creating configuration files ... ok]
13:21 LOG: INFO [running bootstrap script ... ok]
13:22 LOG: INFO [performing post-bootstrap initialization ... ok]
13:22 LOG: INFO [syncing data to disk ... ok]
13:22 LOG: INFO []
13:22 LOG: INFO [Success. You can now start the database server using:]
13:22 LOG: INFO []
13:22 LOG: INFO [    C:/Users/valik/AppData/Local/Temp/embedded-pg/PG-91c1fa33789b0c913345bf0253da6836/bin/pg_ctl -D ^"C^:^\Users^\valik^\AppData^\Local^\Temp^\epg6797198302114115579^" -l logfile start]
13:22 LOG: INFO []
13:22 LOG: INFO [4cc36c31-747c-46c1-a1b2-f0741cde1229 initdb completed in 00:00:07.451]
13:22 LOG: INFO [4cc36c31-747c-46c1-a1b2-f0741cde1229 postmaster started as Process[pid=18072, exitValue="not exited"] on port 52289.  Waiting up to PT10S for server startup to finish.]
13:22 LOG: INFO [waiting for server to start....2019-02-20 13:22:04.222 +03 [13400] ���������:  ��� ����� ����������� �� ������ IPv6 "::1" ������ ���� 52289]
13:22 LOG: INFO [2019-02-20 13:22:04.223 +03 [13400] ���������:  ��� ����� ����������� �� ������ IPv4 "127.0.0.1" ������ ���� 52289]
13:22 LOG: INFO [2019-02-20 13:22:04.301 +03 [4416] ���������:  ������� �� ���� ���������: 2019-02-20 13:22:03 +03]
13:22 LOG: INFO [2019-02-20 13:22:04.351 +03 [13400] ���������:  ������� �� ������ ��������� �����������]
13:22 LOG: INFO [ done]
13:22 LOG: INFO [server started]
13:22 LOG: TRACE[While waiting for server startup]
java.sql.SQLException: connect failed
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:341) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.waitForServerStartup(EmbeddedPostgres.java:315) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.startPostmaster(EmbeddedPostgres.java:275) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.<init>(EmbeddedPostgres.java:162) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres$Builder.start(EmbeddedPostgres.java:580) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.createOrFindPreparer(PreparedDbProvider.java:82) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.<init>(PreparedDbProvider.java:62) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.forPreparer(PreparedDbProvider.java:57) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.junit.PreparedDbRule.before(PreparedDbRule.java:55) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:46) [junit-4.12.jar:4.12]
	at org.junit.rules.RunRules.evaluate(RunRules.java:20) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) [junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) [junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) [junit-rt.jar:?]
Caused by: java.net.SocketTimeoutException: connect timed out
	at java.net.PlainSocketImpl.waitForConnect(Native Method) ~[?:?]
	at java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:107) ~[?:?]
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224) ~[?:?]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403) ~[?:?]
	at java.net.Socket.connect(Socket.java:591) ~[?:?]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:339) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	... 16 more
13:22 LOG: INFO [4cc36c31-747c-46c1-a1b2-f0741cde1229 postmaster startup finished in 00:00:00.786]
13:22 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
13:22 LOG: INFO [Flyway Community Edition 5.2.4 by Boxfuse]
13:22 LOG: INFO [Database: jdbc:postgresql://localhost:52289/template1 (PostgreSQL 10.6)]
13:22 LOG: DEBUG[Driver  : PostgreSQL JDBC Driver 42.2.5]
13:22 LOG: DEBUG[DDL Transactions Supported: true]
13:22 LOG: DEBUG[Schema: public]
13:22 LOG: DEBUG[Scanning for classpath resources at 'classpath:db/migration' ...]
13:22 LOG: DEBUG[Determining location urls for classpath:db/migration using ClassLoader jdk.internal.loader.ClassLoaders$AppClassLoader@6ed3ef1 ...]
13:22 LOG: DEBUG[Scanning URL: file:/C:/Users/valik/IdeaProjects/java-lab-task-1/target/classes/db/migration]
13:22 LOG: DEBUG[JBoss VFS v2 available: false]
13:22 LOG: DEBUG[Scanning starting at classpath root in filesystem: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\]
13:22 LOG: DEBUG[Scanning for resources in path: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\db\migration (db/migration)]
13:22 LOG: DEBUG[Found resource: db/migration/V1_1__init_data.sql]
13:22 LOG: DEBUG[Found resource: db/migration/V1__init_schema.sql]
13:22 LOG: DEBUG[Scanning for classes at classpath:db/migration]
13:22 LOG: DEBUG[Scanning for SQL callbacks ...]
13:22 LOG: DEBUG[Spring Jdbc available: true]
13:22 LOG: DEBUG[Validating migrations ...]
13:22 LOG: DEBUG[Parsing V1_1__init_data.sql ...]
13:22 LOG: DEBUG[Found statement at line 1: INSERT INTO "user" (login, password)
VALUES ('user1', 'user1')]
13:22 LOG: DEBUG[Found statement at line 3: INSERT INTO "user" (login, password)
VALUES ('user2', 'user2')]
13:22 LOG: DEBUG[Found statement at line 5: INSERT INTO "user" (login, password)
VALUES ('user3', 'user3')]
13:22 LOG: DEBUG[Found statement at line 7: INSERT INTO "user" (login, password)
VALUES ('user4', 'user4')]
13:22 LOG: DEBUG[Found statement at line 10: INSERT INTO "country" (name)
VALUES ('testCountry')]
13:22 LOG: DEBUG[Found statement at line 13: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature)
VALUES ('test1', 4, 'test1', 1, 1, 'security')]
13:22 LOG: DEBUG[Found statement at line 15: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature)
VALUES ('test2', 4, 'test2', 1, 1, 'security')]
13:22 LOG: DEBUG[Found statement at line 17: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature)
VALUES ('test3', 4, 'test3', 1, 1, 'security')]
13:22 LOG: DEBUG[Found statement at line 19: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature)
VALUES ('test4', 4, 'test4', 1, 1, 'security')]
13:22 LOG: DEBUG[Found statement at line 22: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id)
VALUES ('test1.jpg', '12-12-2012', 12, 'description1', 505, 'guided', 1, 1)]
13:22 LOG: DEBUG[Found statement at line 24: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id)
VALUES ('test2.jpg', '12-12-2012', 12, 'description2', 505, 'guided', 2, 1)]
13:22 LOG: DEBUG[Found statement at line 26: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id)
VALUES ('test3.jpg', '12-12-2012', 12, 'description3', 505, 'guided', 3, 1)]
13:22 LOG: DEBUG[Found statement at line 28: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id)
VALUES ('test4.jpg', '12-12-2012', 12, 'description4', 505, 'guided', 4, 1)]
13:22 LOG: DEBUG[Parsing V1__init_schema.sql ...]
13:22 LOG: DEBUG[Found statement at line 1: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
13:22 LOG: DEBUG[Found statement at line 8: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
13:22 LOG: DEBUG[Found statement at line 16: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
13:22 LOG: DEBUG[Found statement at line 24: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
13:22 LOG: DEBUG[Found statement at line 36: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
13:22 LOG: DEBUG[Found statement at line 43: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
13:22 LOG: DEBUG[Found statement at line 59: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
13:22 LOG: DEBUG[Found statement at line 68: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
13:22 LOG: DEBUG[Filtering out resource: db/migration/V1_1__init_data.sql (filename: V1_1__init_data.sql)]
13:22 LOG: DEBUG[Filtering out resource: db/migration/V1__init_schema.sql (filename: V1__init_schema.sql)]
13:22 LOG: INFO [Successfully validated 2 migrations (execution time 00:00.026s)]
13:22 LOG: DEBUG[Schema "public" already exists. Skipping schema creation.]
13:22 LOG: INFO [Creating Schema History table: "public"."flyway_schema_history"]
13:22 LOG: DEBUG[Parsing createMetaDataTable.sql ...]
13:22 LOG: DEBUG[Found statement at line 17: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
13:22 LOG: DEBUG[Found statement at line 29: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
13:22 LOG: DEBUG[Found statement at line 31: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
13:22 LOG: DEBUG[Executing SQL: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
13:22 LOG: DEBUG[Update Count: 0]
13:22 LOG: DEBUG[Executing SQL: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
13:22 LOG: DEBUG[Update Count: 0]
13:22 LOG: DEBUG[Executing SQL: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
13:22 LOG: DEBUG[Update Count: 0]
13:22 LOG: DEBUG[Created Schema History table: "public"."flyway_schema_history"]
13:22 LOG: INFO [Current version of schema "public": << Empty Schema >>]
13:22 LOG: INFO [Migrating schema "public" to version 1 - init schema]
13:22 LOG: DEBUG[Executing SQL: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
13:22 LOG: DEBUG[Update Count: 0]
13:22 LOG: DEBUG[Executing SQL: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
13:22 LOG: DEBUG[Update Count: 0]
13:22 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
13:22 LOG: DEBUG[Update Count: 0]
13:22 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
13:22 LOG: DEBUG[Update Count: 0]
13:22 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
13:22 LOG: DEBUG[Update Count: 0]
13:22 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
13:22 LOG: DEBUG[Update Count: 0]
13:22 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
13:22 LOG: DEBUG[Update Count: 0]
13:22 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
13:22 LOG: DEBUG[Update Count: 0]
13:22 LOG: DEBUG[Successfully completed migration of schema "public" to version 1 - init schema]
13:22 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
13:22 LOG: INFO [Migrating schema "public" to version 1.1 - init data]
13:22 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password)
VALUES ('user1', 'user1')]
13:22 LOG: DEBUG[Update Count: 1]
13:22 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password)
VALUES ('user2', 'user2')]
13:22 LOG: DEBUG[Update Count: 1]
13:22 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password)
VALUES ('user3', 'user3')]
13:22 LOG: DEBUG[Update Count: 1]
13:22 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password)
VALUES ('user4', 'user4')]
13:22 LOG: DEBUG[Update Count: 1]
13:22 LOG: DEBUG[Executing SQL: INSERT INTO "country" (name)
VALUES ('testCountry')]
13:22 LOG: DEBUG[Update Count: 1]
13:22 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature)
VALUES ('test1', 4, 'test1', 1, 1, 'security')]
13:22 LOG: DEBUG[Update Count: 1]
13:22 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature)
VALUES ('test2', 4, 'test2', 1, 1, 'security')]
13:22 LOG: DEBUG[Update Count: 1]
13:22 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature)
VALUES ('test3', 4, 'test3', 1, 1, 'security')]
13:22 LOG: DEBUG[Update Count: 1]
13:22 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature)
VALUES ('test4', 4, 'test4', 1, 1, 'security')]
13:22 LOG: DEBUG[Update Count: 1]
13:22 LOG: DEBUG[Executing SQL: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id)
VALUES ('test1.jpg', '12-12-2012', 12, 'description1', 505, 'guided', 1, 1)]
13:22 LOG: DEBUG[Update Count: 1]
13:22 LOG: DEBUG[Executing SQL: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id)
VALUES ('test2.jpg', '12-12-2012', 12, 'description2', 505, 'guided', 2, 1)]
13:22 LOG: DEBUG[Update Count: 1]
13:22 LOG: DEBUG[Executing SQL: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id)
VALUES ('test3.jpg', '12-12-2012', 12, 'description3', 505, 'guided', 3, 1)]
13:22 LOG: DEBUG[Update Count: 1]
13:22 LOG: DEBUG[Executing SQL: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id)
VALUES ('test4.jpg', '12-12-2012', 12, 'description4', 505, 'guided', 4, 1)]
13:22 LOG: DEBUG[Update Count: 1]
13:22 LOG: DEBUG[Successfully completed migration of schema "public" to version 1.1 - init data]
13:22 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
13:22 LOG: INFO [Successfully applied 2 migrations to schema "public" (execution time 00:00.183s)]
13:22 LOG: DEBUG[Memory usage: 13 of 126M]
13:22 LOG: DEBUG[Executing prepared SQL query]
13:22 LOG: DEBUG[Executing prepared SQL statement [SELECT t.id as tour_id, photo, date, duration, description, cost, tour_type, hotel_id, country_id, c.name as country_name, h.name as hotel_name, h.stars, h.website, h.latitude, h.longitude, h.feature  FROM tour t JOIN country c on t.country_id = c.id JOIN hotel h on t.hotel_id = h.id WHERE t.id=?]]
13:22 LOG: DEBUG[Fetching JDBC Connection from DataSource]
13:22 LOG: TRACE[Setting SQL statement parameter value: column index 1, parameter value [1], value class [java.lang.Integer], SQL type unknown]
13:22 LOG: DEBUG[Executing SQL query [SELECT t.id as tour_id, photo, date, duration, description, cost, tour_type, hotel_id, country_id, c.name as country_name, h.name as hotel_name, h.stars, h.website, h.latitude, h.longitude, h.feature  FROM tour t JOIN country c on t.country_id = c.id JOIN hotel h on t.hotel_id = h.id]]
13:22 LOG: DEBUG[Fetching JDBC Connection from DataSource]
13:22 LOG: DEBUG[Executing prepared SQL query]
13:22 LOG: DEBUG[Executing prepared SQL statement [SELECT t.id as tour_id, photo, date, duration, description, cost, tour_type, hotel_id, country_id, c.name as country_name, h.name as hotel_name, h.stars, h.website, h.latitude, h.longitude, h.feature  FROM tour t JOIN country c on t.country_id = c.id JOIN hotel h on t.hotel_id = h.id WHERE t.id=?]]
13:22 LOG: DEBUG[Fetching JDBC Connection from DataSource]
13:22 LOG: TRACE[Setting SQL statement parameter value: column index 1, parameter value [1], value class [java.lang.Integer], SQL type unknown]
13:22 LOG: DEBUG[Executing prepared SQL update]
13:22 LOG: DEBUG[Executing prepared SQL statement [DELETE FROM tour WHERE id=?]]
13:22 LOG: DEBUG[Fetching JDBC Connection from DataSource]
13:22 LOG: TRACE[Setting SQL statement parameter value: column index 1, parameter value [1], value class [java.lang.Integer], SQL type unknown]
13:22 LOG: TRACE[SQL update affected 1 rows]
13:22 LOG: DEBUG[Executing prepared SQL query]
13:22 LOG: DEBUG[Executing prepared SQL statement [SELECT t.id as tour_id, photo, date, duration, description, cost, tour_type, hotel_id, country_id, c.name as country_name, h.name as hotel_name, h.stars, h.website, h.latitude, h.longitude, h.feature  FROM tour t JOIN country c on t.country_id = c.id JOIN hotel h on t.hotel_id = h.id WHERE t.id=?]]
13:22 LOG: DEBUG[Fetching JDBC Connection from DataSource]
13:22 LOG: TRACE[Setting SQL statement parameter value: column index 1, parameter value [1], value class [java.lang.Integer], SQL type unknown]
13:23 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
13:23 LOG: INFO [Detected a Windows x86_64 system]
13:23 LOG: INFO [Postgres binaries at C:\Users\valik\AppData\Local\Temp\embedded-pg\PG-91c1fa33789b0c913345bf0253da6836]
13:23 LOG: TRACE[c2c0cfb6-4f63-4cb0-b259-5e0eb07d7b36 postgres data directory is C:\Users\valik\AppData\Local\Temp\epg14536187232200439402]
13:23 LOG: INFO [The files belonging to this database system will be owned by user "valik".]
13:23 LOG: INFO [This user must also own the server process.]
13:23 LOG: INFO []
13:23 LOG: INFO [The database cluster will be initialized with locale "Russian_Belarus.1251".]
13:23 LOG: INFO [The default text search configuration will be set to "russian".]
13:23 LOG: INFO []
13:23 LOG: INFO [Data page checksums are disabled.]
13:23 LOG: INFO []
13:23 LOG: INFO [fixing permissions on existing directory C:/Users/valik/AppData/Local/Temp/epg14536187232200439402 ... ok]
13:23 LOG: INFO [creating subdirectories ... ok]
13:23 LOG: INFO [selecting default max_connections ... 100]
13:23 LOG: INFO [selecting default shared_buffers ... 128MB]
13:23 LOG: INFO [selecting dynamic shared memory implementation ... windows]
13:23 LOG: INFO [creating configuration files ... ok]
13:23 LOG: INFO [running bootstrap script ... ok]
13:23 LOG: INFO [performing post-bootstrap initialization ... ok]
13:23 LOG: INFO [syncing data to disk ... ok]
13:23 LOG: INFO []
13:23 LOG: INFO [Success. You can now start the database server using:]
13:23 LOG: INFO []
13:23 LOG: INFO [    C:/Users/valik/AppData/Local/Temp/embedded-pg/PG-91c1fa33789b0c913345bf0253da6836/bin/pg_ctl -D ^"C^:^\Users^\valik^\AppData^\Local^\Temp^\epg14536187232200439402^" -l logfile start]
13:23 LOG: INFO []
13:23 LOG: INFO [c2c0cfb6-4f63-4cb0-b259-5e0eb07d7b36 initdb completed in 00:00:07.364]
13:23 LOG: INFO [c2c0cfb6-4f63-4cb0-b259-5e0eb07d7b36 postmaster started as Process[pid=15148, exitValue="not exited"] on port 52311.  Waiting up to PT10S for server startup to finish.]
13:23 LOG: INFO [waiting for server to start....2019-02-20 13:23:13.048 +03 [14540] ���������:  ��� ����� ����������� �� ������ IPv6 "::1" ������ ���� 52311]
13:23 LOG: INFO [2019-02-20 13:23:13.048 +03 [14540] ���������:  ��� ����� ����������� �� ������ IPv4 "127.0.0.1" ������ ���� 52311]
13:23 LOG: INFO [2019-02-20 13:23:13.130 +03 [11928] ���������:  ������� �� ���� ���������: 2019-02-20 13:23:11 +03]
13:23 LOG: INFO [2019-02-20 13:23:13.192 +03 [14540] ���������:  ������� �� ������ ��������� �����������]
13:23 LOG: INFO [ done]
13:23 LOG: INFO [server started]
13:23 LOG: TRACE[While waiting for server startup]
java.sql.SQLException: connect failed
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:341) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.waitForServerStartup(EmbeddedPostgres.java:315) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.startPostmaster(EmbeddedPostgres.java:275) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.<init>(EmbeddedPostgres.java:162) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres$Builder.start(EmbeddedPostgres.java:580) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.createOrFindPreparer(PreparedDbProvider.java:82) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.<init>(PreparedDbProvider.java:62) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.forPreparer(PreparedDbProvider.java:57) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.junit.PreparedDbRule.before(PreparedDbRule.java:55) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:46) [junit-4.12.jar:4.12]
	at org.junit.rules.RunRules.evaluate(RunRules.java:20) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) [junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) [junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) [junit-rt.jar:?]
Caused by: java.net.SocketTimeoutException: connect timed out
	at java.net.PlainSocketImpl.waitForConnect(Native Method) ~[?:?]
	at java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:107) ~[?:?]
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224) ~[?:?]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403) ~[?:?]
	at java.net.Socket.connect(Socket.java:591) ~[?:?]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:339) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	... 16 more
13:23 LOG: INFO [c2c0cfb6-4f63-4cb0-b259-5e0eb07d7b36 postmaster startup finished in 00:00:00.797]
13:23 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
13:23 LOG: INFO [Flyway Community Edition 5.2.4 by Boxfuse]
13:23 LOG: INFO [Database: jdbc:postgresql://localhost:52311/template1 (PostgreSQL 10.6)]
13:23 LOG: DEBUG[Driver  : PostgreSQL JDBC Driver 42.2.5]
13:23 LOG: DEBUG[DDL Transactions Supported: true]
13:23 LOG: DEBUG[Schema: public]
13:23 LOG: DEBUG[Scanning for classpath resources at 'classpath:db/migration' ...]
13:23 LOG: DEBUG[Determining location urls for classpath:db/migration using ClassLoader jdk.internal.loader.ClassLoaders$AppClassLoader@6ed3ef1 ...]
13:23 LOG: DEBUG[Scanning URL: file:/C:/Users/valik/IdeaProjects/java-lab-task-1/target/classes/db/migration]
13:23 LOG: DEBUG[JBoss VFS v2 available: false]
13:23 LOG: DEBUG[Scanning starting at classpath root in filesystem: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\]
13:23 LOG: DEBUG[Scanning for resources in path: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\db\migration (db/migration)]
13:23 LOG: DEBUG[Found resource: db/migration/V1_1__init_data.sql]
13:23 LOG: DEBUG[Found resource: db/migration/V1__init_schema.sql]
13:23 LOG: DEBUG[Scanning for classes at classpath:db/migration]
13:23 LOG: DEBUG[Scanning for SQL callbacks ...]
13:23 LOG: DEBUG[Spring Jdbc available: true]
13:23 LOG: DEBUG[Validating migrations ...]
13:23 LOG: DEBUG[Parsing V1_1__init_data.sql ...]
13:23 LOG: DEBUG[Found statement at line 1: INSERT INTO "user" (login, password)
VALUES ('user1', 'user1')]
13:23 LOG: DEBUG[Found statement at line 3: INSERT INTO "user" (login, password)
VALUES ('user2', 'user2')]
13:23 LOG: DEBUG[Found statement at line 5: INSERT INTO "user" (login, password)
VALUES ('user3', 'user3')]
13:23 LOG: DEBUG[Found statement at line 7: INSERT INTO "user" (login, password)
VALUES ('user4', 'user4')]
13:23 LOG: DEBUG[Found statement at line 10: INSERT INTO "country" (name)
VALUES ('testCountry')]
13:23 LOG: DEBUG[Found statement at line 13: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature)
VALUES ('test1', 4, 'test1', 1, 1, 'security')]
13:23 LOG: DEBUG[Found statement at line 15: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature)
VALUES ('test2', 4, 'test2', 1, 1, 'security')]
13:23 LOG: DEBUG[Found statement at line 17: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature)
VALUES ('test3', 4, 'test3', 1, 1, 'security')]
13:23 LOG: DEBUG[Found statement at line 19: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature)
VALUES ('test4', 4, 'test4', 1, 1, 'security')]
13:23 LOG: DEBUG[Found statement at line 22: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id)
VALUES ('test1.jpg', '12-12-2012', 12, 'description1', 505, 'guided', 1, 1)]
13:23 LOG: DEBUG[Found statement at line 24: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id)
VALUES ('test2.jpg', '12-12-2012', 12, 'description2', 505, 'guided', 2, 1)]
13:23 LOG: DEBUG[Found statement at line 26: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id)
VALUES ('test3.jpg', '12-12-2012', 12, 'description3', 505, 'guided', 3, 1)]
13:23 LOG: DEBUG[Found statement at line 28: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id)
VALUES ('test4.jpg', '12-12-2012', 12, 'description4', 505, 'guided', 4, 1)]
13:23 LOG: DEBUG[Parsing V1__init_schema.sql ...]
13:23 LOG: DEBUG[Found statement at line 1: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
13:23 LOG: DEBUG[Found statement at line 8: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
13:23 LOG: DEBUG[Found statement at line 16: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
13:23 LOG: DEBUG[Found statement at line 24: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
13:23 LOG: DEBUG[Found statement at line 36: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
13:23 LOG: DEBUG[Found statement at line 43: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
13:23 LOG: DEBUG[Found statement at line 59: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
13:23 LOG: DEBUG[Found statement at line 68: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
13:23 LOG: DEBUG[Filtering out resource: db/migration/V1_1__init_data.sql (filename: V1_1__init_data.sql)]
13:23 LOG: DEBUG[Filtering out resource: db/migration/V1__init_schema.sql (filename: V1__init_schema.sql)]
13:23 LOG: INFO [Successfully validated 2 migrations (execution time 00:00.026s)]
13:23 LOG: DEBUG[Schema "public" already exists. Skipping schema creation.]
13:23 LOG: INFO [Creating Schema History table: "public"."flyway_schema_history"]
13:23 LOG: DEBUG[Parsing createMetaDataTable.sql ...]
13:23 LOG: DEBUG[Found statement at line 17: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
13:23 LOG: DEBUG[Found statement at line 29: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
13:23 LOG: DEBUG[Found statement at line 31: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
13:23 LOG: DEBUG[Executing SQL: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
13:23 LOG: DEBUG[Update Count: 0]
13:23 LOG: DEBUG[Executing SQL: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
13:23 LOG: DEBUG[Update Count: 0]
13:23 LOG: DEBUG[Executing SQL: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
13:23 LOG: DEBUG[Update Count: 0]
13:23 LOG: DEBUG[Created Schema History table: "public"."flyway_schema_history"]
13:23 LOG: INFO [Current version of schema "public": << Empty Schema >>]
13:23 LOG: INFO [Migrating schema "public" to version 1 - init schema]
13:23 LOG: DEBUG[Executing SQL: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
13:23 LOG: DEBUG[Update Count: 0]
13:23 LOG: DEBUG[Executing SQL: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
13:23 LOG: DEBUG[Update Count: 0]
13:23 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
13:23 LOG: DEBUG[Update Count: 0]
13:23 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
13:23 LOG: DEBUG[Update Count: 0]
13:23 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
13:23 LOG: DEBUG[Update Count: 0]
13:23 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
13:23 LOG: DEBUG[Update Count: 0]
13:23 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
13:23 LOG: DEBUG[Update Count: 0]
13:23 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
13:23 LOG: DEBUG[Update Count: 0]
13:23 LOG: DEBUG[Successfully completed migration of schema "public" to version 1 - init schema]
13:23 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
13:23 LOG: INFO [Migrating schema "public" to version 1.1 - init data]
13:23 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password)
VALUES ('user1', 'user1')]
13:23 LOG: DEBUG[Update Count: 1]
13:23 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password)
VALUES ('user2', 'user2')]
13:23 LOG: DEBUG[Update Count: 1]
13:23 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password)
VALUES ('user3', 'user3')]
13:23 LOG: DEBUG[Update Count: 1]
13:23 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password)
VALUES ('user4', 'user4')]
13:23 LOG: DEBUG[Update Count: 1]
13:23 LOG: DEBUG[Executing SQL: INSERT INTO "country" (name)
VALUES ('testCountry')]
13:23 LOG: DEBUG[Update Count: 1]
13:23 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature)
VALUES ('test1', 4, 'test1', 1, 1, 'security')]
13:23 LOG: DEBUG[Update Count: 1]
13:23 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature)
VALUES ('test2', 4, 'test2', 1, 1, 'security')]
13:23 LOG: DEBUG[Update Count: 1]
13:23 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature)
VALUES ('test3', 4, 'test3', 1, 1, 'security')]
13:23 LOG: DEBUG[Update Count: 1]
13:23 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature)
VALUES ('test4', 4, 'test4', 1, 1, 'security')]
13:23 LOG: DEBUG[Update Count: 1]
13:23 LOG: DEBUG[Executing SQL: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id)
VALUES ('test1.jpg', '12-12-2012', 12, 'description1', 505, 'guided', 1, 1)]
13:23 LOG: DEBUG[Update Count: 1]
13:23 LOG: DEBUG[Executing SQL: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id)
VALUES ('test2.jpg', '12-12-2012', 12, 'description2', 505, 'guided', 2, 1)]
13:23 LOG: DEBUG[Update Count: 1]
13:23 LOG: DEBUG[Executing SQL: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id)
VALUES ('test3.jpg', '12-12-2012', 12, 'description3', 505, 'guided', 3, 1)]
13:23 LOG: DEBUG[Update Count: 1]
13:23 LOG: DEBUG[Executing SQL: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id)
VALUES ('test4.jpg', '12-12-2012', 12, 'description4', 505, 'guided', 4, 1)]
13:23 LOG: DEBUG[Update Count: 1]
13:23 LOG: DEBUG[Successfully completed migration of schema "public" to version 1.1 - init data]
13:23 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
13:23 LOG: INFO [Successfully applied 2 migrations to schema "public" (execution time 00:00.174s)]
13:23 LOG: DEBUG[Memory usage: 12 of 126M]
13:23 LOG: DEBUG[Executing prepared SQL query]
13:23 LOG: DEBUG[Executing prepared SQL statement [SELECT t.id as tour_id, photo, date, duration, description, cost, tour_type, hotel_id, country_id, c.name as country_name, h.name as hotel_name, h.stars, h.website, h.latitude, h.longitude, h.feature  FROM tour t JOIN country c on t.country_id = c.id JOIN hotel h on t.hotel_id = h.id WHERE t.id=?]]
13:23 LOG: DEBUG[Fetching JDBC Connection from DataSource]
13:23 LOG: TRACE[Setting SQL statement parameter value: column index 1, parameter value [1], value class [java.lang.Integer], SQL type unknown]
13:23 LOG: DEBUG[Executing SQL query [SELECT t.id as tour_id, photo, date, duration, description, cost, tour_type, hotel_id, country_id, c.name as country_name, h.name as hotel_name, h.stars, h.website, h.latitude, h.longitude, h.feature  FROM tour t JOIN country c on t.country_id = c.id JOIN hotel h on t.hotel_id = h.id]]
13:23 LOG: DEBUG[Fetching JDBC Connection from DataSource]
13:23 LOG: DEBUG[Executing prepared SQL query]
13:23 LOG: DEBUG[Executing prepared SQL statement [SELECT t.id as tour_id, photo, date, duration, description, cost, tour_type, hotel_id, country_id, c.name as country_name, h.name as hotel_name, h.stars, h.website, h.latitude, h.longitude, h.feature  FROM tour t JOIN country c on t.country_id = c.id JOIN hotel h on t.hotel_id = h.id WHERE t.id=?]]
13:23 LOG: DEBUG[Fetching JDBC Connection from DataSource]
13:23 LOG: TRACE[Setting SQL statement parameter value: column index 1, parameter value [1], value class [java.lang.Integer], SQL type unknown]
13:23 LOG: DEBUG[Executing prepared SQL update]
13:23 LOG: DEBUG[Executing prepared SQL statement [DELETE FROM tour WHERE id=?]]
13:23 LOG: DEBUG[Fetching JDBC Connection from DataSource]
13:23 LOG: TRACE[Setting SQL statement parameter value: column index 1, parameter value [1], value class [java.lang.Integer], SQL type unknown]
13:23 LOG: TRACE[SQL update affected 1 rows]
13:23 LOG: DEBUG[Executing prepared SQL query]
13:23 LOG: DEBUG[Executing prepared SQL statement [SELECT t.id as tour_id, photo, date, duration, description, cost, tour_type, hotel_id, country_id, c.name as country_name, h.name as hotel_name, h.stars, h.website, h.latitude, h.longitude, h.feature  FROM tour t JOIN country c on t.country_id = c.id JOIN hotel h on t.hotel_id = h.id WHERE t.id=?]]
13:23 LOG: DEBUG[Fetching JDBC Connection from DataSource]
13:23 LOG: TRACE[Setting SQL statement parameter value: column index 1, parameter value [1], value class [java.lang.Integer], SQL type unknown]
13:24 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
13:24 LOG: INFO [Detected a Windows x86_64 system]
13:24 LOG: INFO [Postgres binaries at C:\Users\valik\AppData\Local\Temp\embedded-pg\PG-91c1fa33789b0c913345bf0253da6836]
13:24 LOG: TRACE[68a0a759-62b5-4431-922f-621a0dfa4edc postgres data directory is C:\Users\valik\AppData\Local\Temp\epg13164935598828697033]
13:24 LOG: INFO [The files belonging to this database system will be owned by user "valik".]
13:24 LOG: INFO [This user must also own the server process.]
13:24 LOG: INFO []
13:24 LOG: INFO [The database cluster will be initialized with locale "Russian_Belarus.1251".]
13:24 LOG: INFO [The default text search configuration will be set to "russian".]
13:24 LOG: INFO []
13:24 LOG: INFO [Data page checksums are disabled.]
13:24 LOG: INFO []
13:24 LOG: INFO [fixing permissions on existing directory C:/Users/valik/AppData/Local/Temp/epg13164935598828697033 ... ok]
13:24 LOG: INFO [creating subdirectories ... ok]
13:24 LOG: INFO [selecting default max_connections ... 100]
13:24 LOG: INFO [selecting default shared_buffers ... 128MB]
13:24 LOG: INFO [selecting dynamic shared memory implementation ... windows]
13:24 LOG: INFO [creating configuration files ... ok]
13:24 LOG: INFO [running bootstrap script ... ok]
13:25 LOG: INFO [performing post-bootstrap initialization ... ok]
13:25 LOG: INFO [syncing data to disk ... ok]
13:25 LOG: INFO []
13:25 LOG: INFO [Success. You can now start the database server using:]
13:25 LOG: INFO []
13:25 LOG: INFO [    C:/Users/valik/AppData/Local/Temp/embedded-pg/PG-91c1fa33789b0c913345bf0253da6836/bin/pg_ctl -D ^"C^:^\Users^\valik^\AppData^\Local^\Temp^\epg13164935598828697033^" -l logfile start]
13:25 LOG: INFO []
13:25 LOG: INFO [68a0a759-62b5-4431-922f-621a0dfa4edc initdb completed in 00:00:07.328]
13:25 LOG: INFO [68a0a759-62b5-4431-922f-621a0dfa4edc postmaster started as Process[pid=10592, exitValue="not exited"] on port 52334.  Waiting up to PT10S for server startup to finish.]
13:25 LOG: INFO [waiting for server to start....2019-02-20 13:25:04.262 +03 [4288] ���������:  ��� ����� ����������� �� ������ IPv6 "::1" ������ ���� 52334]
13:25 LOG: INFO [2019-02-20 13:25:04.262 +03 [4288] ���������:  ��� ����� ����������� �� ������ IPv4 "127.0.0.1" ������ ���� 52334]
13:25 LOG: INFO [2019-02-20 13:25:04.344 +03 [10840] ���������:  ������� �� ���� ���������: 2019-02-20 13:25:03 +03]
13:25 LOG: INFO [2019-02-20 13:25:04.392 +03 [4288] ���������:  ������� �� ������ ��������� �����������]
13:25 LOG: INFO [ done]
13:25 LOG: INFO [server started]
13:25 LOG: TRACE[While waiting for server startup]
java.sql.SQLException: connect failed
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:341) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.waitForServerStartup(EmbeddedPostgres.java:315) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.startPostmaster(EmbeddedPostgres.java:275) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.<init>(EmbeddedPostgres.java:162) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres$Builder.start(EmbeddedPostgres.java:580) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.createOrFindPreparer(PreparedDbProvider.java:82) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.<init>(PreparedDbProvider.java:62) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.forPreparer(PreparedDbProvider.java:57) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.junit.PreparedDbRule.before(PreparedDbRule.java:55) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:46) [junit-4.12.jar:4.12]
	at org.junit.rules.RunRules.evaluate(RunRules.java:20) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) [junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) [junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) [junit-rt.jar:?]
Caused by: java.net.SocketTimeoutException: connect timed out
	at java.net.PlainSocketImpl.waitForConnect(Native Method) ~[?:?]
	at java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:107) ~[?:?]
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224) ~[?:?]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403) ~[?:?]
	at java.net.Socket.connect(Socket.java:591) ~[?:?]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:339) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	... 16 more
13:25 LOG: INFO [68a0a759-62b5-4431-922f-621a0dfa4edc postmaster startup finished in 00:00:00.832]
13:25 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
13:25 LOG: INFO [Flyway Community Edition 5.2.4 by Boxfuse]
13:25 LOG: INFO [Database: jdbc:postgresql://localhost:52334/template1 (PostgreSQL 10.6)]
13:25 LOG: DEBUG[Driver  : PostgreSQL JDBC Driver 42.2.5]
13:25 LOG: DEBUG[DDL Transactions Supported: true]
13:25 LOG: DEBUG[Schema: public]
13:25 LOG: DEBUG[Scanning for classpath resources at 'classpath:db/migration' ...]
13:25 LOG: DEBUG[Determining location urls for classpath:db/migration using ClassLoader jdk.internal.loader.ClassLoaders$AppClassLoader@6ed3ef1 ...]
13:25 LOG: DEBUG[Scanning URL: file:/C:/Users/valik/IdeaProjects/java-lab-task-1/target/classes/db/migration]
13:25 LOG: DEBUG[JBoss VFS v2 available: false]
13:25 LOG: DEBUG[Scanning starting at classpath root in filesystem: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\]
13:25 LOG: DEBUG[Scanning for resources in path: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\db\migration (db/migration)]
13:25 LOG: DEBUG[Found resource: db/migration/V1_1__init_data.sql]
13:25 LOG: DEBUG[Found resource: db/migration/V1__init_schema.sql]
13:25 LOG: DEBUG[Scanning for classes at classpath:db/migration]
13:25 LOG: DEBUG[Scanning for SQL callbacks ...]
13:25 LOG: DEBUG[Spring Jdbc available: true]
13:25 LOG: DEBUG[Validating migrations ...]
13:25 LOG: DEBUG[Parsing V1_1__init_data.sql ...]
13:25 LOG: DEBUG[Found statement at line 1: INSERT INTO "user" (login, password)
VALUES ('user1', 'user1')]
13:25 LOG: DEBUG[Found statement at line 3: INSERT INTO "user" (login, password)
VALUES ('user2', 'user2')]
13:25 LOG: DEBUG[Found statement at line 5: INSERT INTO "user" (login, password)
VALUES ('user3', 'user3')]
13:25 LOG: DEBUG[Found statement at line 7: INSERT INTO "user" (login, password)
VALUES ('user4', 'user4')]
13:25 LOG: DEBUG[Found statement at line 10: INSERT INTO "country" (name)
VALUES ('testCountry')]
13:25 LOG: DEBUG[Found statement at line 13: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature)
VALUES ('test1', 4, 'test1', 1, 1, 'security')]
13:25 LOG: DEBUG[Found statement at line 15: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature)
VALUES ('test2', 4, 'test2', 1, 1, 'security')]
13:25 LOG: DEBUG[Found statement at line 17: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature)
VALUES ('test3', 4, 'test3', 1, 1, 'security')]
13:25 LOG: DEBUG[Found statement at line 19: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature)
VALUES ('test4', 4, 'test4', 1, 1, 'security')]
13:25 LOG: DEBUG[Found statement at line 22: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id)
VALUES ('test1.jpg', '12-12-2012', 12, 'description1', 505, 'guided', 1, 1)]
13:25 LOG: DEBUG[Found statement at line 24: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id)
VALUES ('test2.jpg', '12-12-2012', 12, 'description2', 505, 'guided', 2, 1)]
13:25 LOG: DEBUG[Found statement at line 26: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id)
VALUES ('test3.jpg', '12-12-2012', 12, 'description3', 505, 'guided', 3, 1)]
13:25 LOG: DEBUG[Found statement at line 28: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id)
VALUES ('test4.jpg', '12-12-2012', 12, 'description4', 505, 'guided', 4, 1)]
13:25 LOG: DEBUG[Parsing V1__init_schema.sql ...]
13:25 LOG: DEBUG[Found statement at line 1: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
13:25 LOG: DEBUG[Found statement at line 8: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
13:25 LOG: DEBUG[Found statement at line 16: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
13:25 LOG: DEBUG[Found statement at line 24: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
13:25 LOG: DEBUG[Found statement at line 36: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
13:25 LOG: DEBUG[Found statement at line 43: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
13:25 LOG: DEBUG[Found statement at line 59: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
13:25 LOG: DEBUG[Found statement at line 68: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
13:25 LOG: DEBUG[Filtering out resource: db/migration/V1_1__init_data.sql (filename: V1_1__init_data.sql)]
13:25 LOG: DEBUG[Filtering out resource: db/migration/V1__init_schema.sql (filename: V1__init_schema.sql)]
13:25 LOG: INFO [Successfully validated 2 migrations (execution time 00:00.028s)]
13:25 LOG: DEBUG[Schema "public" already exists. Skipping schema creation.]
13:25 LOG: INFO [Creating Schema History table: "public"."flyway_schema_history"]
13:25 LOG: DEBUG[Parsing createMetaDataTable.sql ...]
13:25 LOG: DEBUG[Found statement at line 17: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
13:25 LOG: DEBUG[Found statement at line 29: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
13:25 LOG: DEBUG[Found statement at line 31: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
13:25 LOG: DEBUG[Executing SQL: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
13:25 LOG: DEBUG[Update Count: 0]
13:25 LOG: DEBUG[Executing SQL: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
13:25 LOG: DEBUG[Update Count: 0]
13:25 LOG: DEBUG[Executing SQL: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
13:25 LOG: DEBUG[Update Count: 0]
13:25 LOG: DEBUG[Created Schema History table: "public"."flyway_schema_history"]
13:25 LOG: INFO [Current version of schema "public": << Empty Schema >>]
13:25 LOG: INFO [Migrating schema "public" to version 1 - init schema]
13:25 LOG: DEBUG[Executing SQL: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
13:25 LOG: DEBUG[Update Count: 0]
13:25 LOG: DEBUG[Executing SQL: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
13:25 LOG: DEBUG[Update Count: 0]
13:25 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
13:25 LOG: DEBUG[Update Count: 0]
13:25 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
13:25 LOG: DEBUG[Update Count: 0]
13:25 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
13:25 LOG: DEBUG[Update Count: 0]
13:25 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
13:25 LOG: DEBUG[Update Count: 0]
13:25 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
13:25 LOG: DEBUG[Update Count: 0]
13:25 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
13:25 LOG: DEBUG[Update Count: 0]
13:25 LOG: DEBUG[Successfully completed migration of schema "public" to version 1 - init schema]
13:25 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
13:25 LOG: INFO [Migrating schema "public" to version 1.1 - init data]
13:25 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password)
VALUES ('user1', 'user1')]
13:25 LOG: DEBUG[Update Count: 1]
13:25 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password)
VALUES ('user2', 'user2')]
13:25 LOG: DEBUG[Update Count: 1]
13:25 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password)
VALUES ('user3', 'user3')]
13:25 LOG: DEBUG[Update Count: 1]
13:25 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password)
VALUES ('user4', 'user4')]
13:25 LOG: DEBUG[Update Count: 1]
13:25 LOG: DEBUG[Executing SQL: INSERT INTO "country" (name)
VALUES ('testCountry')]
13:25 LOG: DEBUG[Update Count: 1]
13:25 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature)
VALUES ('test1', 4, 'test1', 1, 1, 'security')]
13:25 LOG: DEBUG[Update Count: 1]
13:25 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature)
VALUES ('test2', 4, 'test2', 1, 1, 'security')]
13:25 LOG: DEBUG[Update Count: 1]
13:25 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature)
VALUES ('test3', 4, 'test3', 1, 1, 'security')]
13:25 LOG: DEBUG[Update Count: 1]
13:25 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature)
VALUES ('test4', 4, 'test4', 1, 1, 'security')]
13:25 LOG: DEBUG[Update Count: 1]
13:25 LOG: DEBUG[Executing SQL: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id)
VALUES ('test1.jpg', '12-12-2012', 12, 'description1', 505, 'guided', 1, 1)]
13:25 LOG: DEBUG[Update Count: 1]
13:25 LOG: DEBUG[Executing SQL: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id)
VALUES ('test2.jpg', '12-12-2012', 12, 'description2', 505, 'guided', 2, 1)]
13:25 LOG: DEBUG[Update Count: 1]
13:25 LOG: DEBUG[Executing SQL: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id)
VALUES ('test3.jpg', '12-12-2012', 12, 'description3', 505, 'guided', 3, 1)]
13:25 LOG: DEBUG[Update Count: 1]
13:25 LOG: DEBUG[Executing SQL: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id)
VALUES ('test4.jpg', '12-12-2012', 12, 'description4', 505, 'guided', 4, 1)]
13:25 LOG: DEBUG[Update Count: 1]
13:25 LOG: DEBUG[Successfully completed migration of schema "public" to version 1.1 - init data]
13:25 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
13:25 LOG: INFO [Successfully applied 2 migrations to schema "public" (execution time 00:00.170s)]
13:25 LOG: DEBUG[Memory usage: 13 of 126M]
13:25 LOG: DEBUG[Executing prepared SQL query]
13:25 LOG: DEBUG[Executing prepared SQL statement [SELECT t.id as tour_id, photo, date, duration, description, cost, tour_type, hotel_id, country_id, c.name as country_name, h.name as hotel_name, h.stars, h.website, h.latitude, h.longitude, h.feature  FROM tour t JOIN country c on t.country_id = c.id JOIN hotel h on t.hotel_id = h.id WHERE t.id=?]]
13:25 LOG: DEBUG[Fetching JDBC Connection from DataSource]
13:25 LOG: TRACE[Setting SQL statement parameter value: column index 1, parameter value [1], value class [java.lang.Integer], SQL type unknown]
13:25 LOG: DEBUG[Executing SQL query [SELECT t.id as tour_id, photo, date, duration, description, cost, tour_type, hotel_id, country_id, c.name as country_name, h.name as hotel_name, h.stars, h.website, h.latitude, h.longitude, h.feature  FROM tour t JOIN country c on t.country_id = c.id JOIN hotel h on t.hotel_id = h.id]]
13:25 LOG: DEBUG[Fetching JDBC Connection from DataSource]
13:25 LOG: DEBUG[Executing prepared SQL query]
13:25 LOG: DEBUG[Executing prepared SQL statement [SELECT t.id as tour_id, photo, date, duration, description, cost, tour_type, hotel_id, country_id, c.name as country_name, h.name as hotel_name, h.stars, h.website, h.latitude, h.longitude, h.feature  FROM tour t JOIN country c on t.country_id = c.id JOIN hotel h on t.hotel_id = h.id WHERE t.id=?]]
13:25 LOG: DEBUG[Fetching JDBC Connection from DataSource]
13:25 LOG: TRACE[Setting SQL statement parameter value: column index 1, parameter value [1], value class [java.lang.Integer], SQL type unknown]
13:25 LOG: DEBUG[Executing prepared SQL update]
13:25 LOG: DEBUG[Executing prepared SQL statement [DELETE FROM tour WHERE id=?]]
13:25 LOG: DEBUG[Fetching JDBC Connection from DataSource]
13:25 LOG: TRACE[Setting SQL statement parameter value: column index 1, parameter value [1], value class [java.lang.Integer], SQL type unknown]
13:25 LOG: TRACE[SQL update affected 1 rows]
13:25 LOG: DEBUG[Executing prepared SQL query]
13:25 LOG: DEBUG[Executing prepared SQL statement [SELECT t.id as tour_id, photo, date, duration, description, cost, tour_type, hotel_id, country_id, c.name as country_name, h.name as hotel_name, h.stars, h.website, h.latitude, h.longitude, h.feature  FROM tour t JOIN country c on t.country_id = c.id JOIN hotel h on t.hotel_id = h.id WHERE t.id=?]]
13:25 LOG: DEBUG[Fetching JDBC Connection from DataSource]
13:25 LOG: TRACE[Setting SQL statement parameter value: column index 1, parameter value [1], value class [java.lang.Integer], SQL type unknown]
13:25 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
13:25 LOG: INFO [Detected a Windows x86_64 system]
13:25 LOG: INFO [Postgres binaries at C:\Users\valik\AppData\Local\Temp\embedded-pg\PG-91c1fa33789b0c913345bf0253da6836]
13:25 LOG: TRACE[350aad2d-ab4c-4295-8048-9294cc096b6e postgres data directory is C:\Users\valik\AppData\Local\Temp\epg18352890985354780695]
13:25 LOG: INFO [The files belonging to this database system will be owned by user "valik".]
13:25 LOG: INFO [This user must also own the server process.]
13:25 LOG: INFO []
13:25 LOG: INFO [The database cluster will be initialized with locale "Russian_Belarus.1251".]
13:25 LOG: INFO [The default text search configuration will be set to "russian".]
13:25 LOG: INFO []
13:25 LOG: INFO [Data page checksums are disabled.]
13:25 LOG: INFO []
13:25 LOG: INFO [fixing permissions on existing directory C:/Users/valik/AppData/Local/Temp/epg18352890985354780695 ... ok]
13:25 LOG: INFO [creating subdirectories ... ok]
13:25 LOG: INFO [selecting default max_connections ... 100]
13:25 LOG: INFO [selecting default shared_buffers ... 128MB]
13:25 LOG: INFO [selecting dynamic shared memory implementation ... windows]
13:25 LOG: INFO [creating configuration files ... ok]
13:25 LOG: INFO [running bootstrap script ... ok]
13:25 LOG: INFO [performing post-bootstrap initialization ... ok]
13:25 LOG: INFO [syncing data to disk ... ok]
13:25 LOG: INFO []
13:25 LOG: INFO [Success. You can now start the database server using:]
13:25 LOG: INFO []
13:25 LOG: INFO [    C:/Users/valik/AppData/Local/Temp/embedded-pg/PG-91c1fa33789b0c913345bf0253da6836/bin/pg_ctl -D ^"C^:^\Users^\valik^\AppData^\Local^\Temp^\epg18352890985354780695^" -l logfile start]
13:25 LOG: INFO []
13:25 LOG: INFO [350aad2d-ab4c-4295-8048-9294cc096b6e initdb completed in 00:00:07.924]
13:25 LOG: INFO [350aad2d-ab4c-4295-8048-9294cc096b6e postmaster started as Process[pid=14548, exitValue="not exited"] on port 52363.  Waiting up to PT10S for server startup to finish.]
13:25 LOG: INFO [waiting for server to start....2019-02-20 13:25:47.916 +03 [8856] ���������:  ��� ����� ����������� �� ������ IPv6 "::1" ������ ���� 52363]
13:25 LOG: INFO [2019-02-20 13:25:47.916 +03 [8856] ���������:  ��� ����� ����������� �� ������ IPv4 "127.0.0.1" ������ ���� 52363]
13:25 LOG: INFO [2019-02-20 13:25:48.000 +03 [14312] ���������:  ������� �� ���� ���������: 2019-02-20 13:25:46 +03]
13:25 LOG: INFO [2019-02-20 13:25:48.046 +03 [8856] ���������:  ������� �� ������ ��������� �����������]
13:25 LOG: INFO [ done]
13:25 LOG: INFO [server started]
13:25 LOG: TRACE[While waiting for server startup]
java.sql.SQLException: connect failed
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:341) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.waitForServerStartup(EmbeddedPostgres.java:315) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.startPostmaster(EmbeddedPostgres.java:275) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.<init>(EmbeddedPostgres.java:162) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres$Builder.start(EmbeddedPostgres.java:580) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.createOrFindPreparer(PreparedDbProvider.java:82) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.<init>(PreparedDbProvider.java:62) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.forPreparer(PreparedDbProvider.java:57) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.junit.PreparedDbRule.before(PreparedDbRule.java:55) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:46) [junit-4.12.jar:4.12]
	at org.junit.rules.RunRules.evaluate(RunRules.java:20) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) [junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) [junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) [junit-rt.jar:?]
Caused by: java.net.SocketTimeoutException: connect timed out
	at java.net.PlainSocketImpl.waitForConnect(Native Method) ~[?:?]
	at java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:107) ~[?:?]
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224) ~[?:?]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403) ~[?:?]
	at java.net.Socket.connect(Socket.java:591) ~[?:?]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:339) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	... 16 more
13:25 LOG: INFO [2019-02-20 13:25:48.360 +03 [13992] ���������:  �������� ��������� �����]
13:25 LOG: INFO [350aad2d-ab4c-4295-8048-9294cc096b6e postmaster startup finished in 00:00:00.820]
13:25 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
13:25 LOG: INFO [Flyway Community Edition 5.2.4 by Boxfuse]
13:25 LOG: INFO [Database: jdbc:postgresql://localhost:52363/template1 (PostgreSQL 10.6)]
13:25 LOG: DEBUG[Driver  : PostgreSQL JDBC Driver 42.2.5]
13:25 LOG: DEBUG[DDL Transactions Supported: true]
13:25 LOG: DEBUG[Schema: public]
13:25 LOG: DEBUG[Scanning for classpath resources at 'classpath:db/migration' ...]
13:25 LOG: DEBUG[Determining location urls for classpath:db/migration using ClassLoader jdk.internal.loader.ClassLoaders$AppClassLoader@6ed3ef1 ...]
13:25 LOG: DEBUG[Scanning URL: file:/C:/Users/valik/IdeaProjects/java-lab-task-1/target/classes/db/migration]
13:25 LOG: DEBUG[JBoss VFS v2 available: false]
13:25 LOG: DEBUG[Scanning starting at classpath root in filesystem: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\]
13:25 LOG: DEBUG[Scanning for resources in path: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\db\migration (db/migration)]
13:25 LOG: DEBUG[Found resource: db/migration/V1_1__init_data.sql]
13:25 LOG: DEBUG[Found resource: db/migration/V1__init_schema.sql]
13:25 LOG: DEBUG[Scanning for classes at classpath:db/migration]
13:25 LOG: DEBUG[Scanning for SQL callbacks ...]
13:25 LOG: DEBUG[Spring Jdbc available: true]
13:25 LOG: DEBUG[Validating migrations ...]
13:25 LOG: DEBUG[Parsing V1_1__init_data.sql ...]
13:25 LOG: DEBUG[Found statement at line 1: INSERT INTO "user" (login, password)
VALUES ('user1', 'user1')]
13:25 LOG: DEBUG[Found statement at line 3: INSERT INTO "user" (login, password)
VALUES ('user2', 'user2')]
13:25 LOG: DEBUG[Found statement at line 5: INSERT INTO "user" (login, password)
VALUES ('user3', 'user3')]
13:25 LOG: DEBUG[Found statement at line 7: INSERT INTO "user" (login, password)
VALUES ('user4', 'user4')]
13:25 LOG: DEBUG[Found statement at line 10: INSERT INTO "country" (name)
VALUES ('testCountry')]
13:25 LOG: DEBUG[Found statement at line 13: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature)
VALUES ('test1', 4, 'test1', 1, 1, 'security')]
13:25 LOG: DEBUG[Found statement at line 15: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature)
VALUES ('test2', 4, 'test2', 1, 1, 'security')]
13:25 LOG: DEBUG[Found statement at line 17: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature)
VALUES ('test3', 4, 'test3', 1, 1, 'security')]
13:25 LOG: DEBUG[Found statement at line 19: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature)
VALUES ('test4', 4, 'test4', 1, 1, 'security')]
13:25 LOG: DEBUG[Found statement at line 22: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id)
VALUES ('test1.jpg', '12-12-2012', 12, 'description1', 505, 'guided', 1, 1)]
13:25 LOG: DEBUG[Found statement at line 24: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id)
VALUES ('test2.jpg', '12-12-2012', 12, 'description2', 505, 'guided', 2, 1)]
13:25 LOG: DEBUG[Found statement at line 26: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id)
VALUES ('test3.jpg', '12-12-2012', 12, 'description3', 505, 'guided', 3, 1)]
13:25 LOG: DEBUG[Found statement at line 28: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id)
VALUES ('test4.jpg', '12-12-2012', 12, 'description4', 505, 'guided', 4, 1)]
13:25 LOG: DEBUG[Parsing V1__init_schema.sql ...]
13:25 LOG: DEBUG[Found statement at line 1: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
13:25 LOG: DEBUG[Found statement at line 8: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
13:25 LOG: DEBUG[Found statement at line 16: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
13:25 LOG: DEBUG[Found statement at line 24: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
13:25 LOG: DEBUG[Found statement at line 36: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
13:25 LOG: DEBUG[Found statement at line 43: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
13:25 LOG: DEBUG[Found statement at line 59: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
13:25 LOG: DEBUG[Found statement at line 68: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
13:25 LOG: DEBUG[Filtering out resource: db/migration/V1_1__init_data.sql (filename: V1_1__init_data.sql)]
13:25 LOG: DEBUG[Filtering out resource: db/migration/V1__init_schema.sql (filename: V1__init_schema.sql)]
13:25 LOG: INFO [Successfully validated 2 migrations (execution time 00:00.028s)]
13:25 LOG: DEBUG[Schema "public" already exists. Skipping schema creation.]
13:25 LOG: INFO [Creating Schema History table: "public"."flyway_schema_history"]
13:25 LOG: DEBUG[Parsing createMetaDataTable.sql ...]
13:25 LOG: DEBUG[Found statement at line 17: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
13:25 LOG: DEBUG[Found statement at line 29: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
13:25 LOG: DEBUG[Found statement at line 31: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
13:25 LOG: DEBUG[Executing SQL: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
13:25 LOG: DEBUG[Update Count: 0]
13:25 LOG: DEBUG[Executing SQL: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
13:25 LOG: DEBUG[Update Count: 0]
13:25 LOG: DEBUG[Executing SQL: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
13:25 LOG: DEBUG[Update Count: 0]
13:25 LOG: DEBUG[Created Schema History table: "public"."flyway_schema_history"]
13:25 LOG: INFO [Current version of schema "public": << Empty Schema >>]
13:25 LOG: INFO [Migrating schema "public" to version 1 - init schema]
13:25 LOG: DEBUG[Executing SQL: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
13:25 LOG: DEBUG[Update Count: 0]
13:25 LOG: DEBUG[Executing SQL: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
13:25 LOG: DEBUG[Update Count: 0]
13:25 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
13:25 LOG: DEBUG[Update Count: 0]
13:25 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
13:25 LOG: DEBUG[Update Count: 0]
13:25 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
13:25 LOG: DEBUG[Update Count: 0]
13:25 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
13:25 LOG: DEBUG[Update Count: 0]
13:25 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
13:25 LOG: DEBUG[Update Count: 0]
13:25 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
13:25 LOG: DEBUG[Update Count: 0]
13:25 LOG: DEBUG[Successfully completed migration of schema "public" to version 1 - init schema]
13:25 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
13:25 LOG: INFO [Migrating schema "public" to version 1.1 - init data]
13:25 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password)
VALUES ('user1', 'user1')]
13:25 LOG: DEBUG[Update Count: 1]
13:25 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password)
VALUES ('user2', 'user2')]
13:25 LOG: DEBUG[Update Count: 1]
13:25 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password)
VALUES ('user3', 'user3')]
13:25 LOG: DEBUG[Update Count: 1]
13:25 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password)
VALUES ('user4', 'user4')]
13:25 LOG: DEBUG[Update Count: 1]
13:25 LOG: DEBUG[Executing SQL: INSERT INTO "country" (name)
VALUES ('testCountry')]
13:25 LOG: DEBUG[Update Count: 1]
13:25 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature)
VALUES ('test1', 4, 'test1', 1, 1, 'security')]
13:25 LOG: DEBUG[Update Count: 1]
13:25 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature)
VALUES ('test2', 4, 'test2', 1, 1, 'security')]
13:25 LOG: DEBUG[Update Count: 1]
13:25 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature)
VALUES ('test3', 4, 'test3', 1, 1, 'security')]
13:25 LOG: DEBUG[Update Count: 1]
13:25 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature)
VALUES ('test4', 4, 'test4', 1, 1, 'security')]
13:25 LOG: DEBUG[Update Count: 1]
13:25 LOG: DEBUG[Executing SQL: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id)
VALUES ('test1.jpg', '12-12-2012', 12, 'description1', 505, 'guided', 1, 1)]
13:25 LOG: DEBUG[Update Count: 1]
13:25 LOG: DEBUG[Executing SQL: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id)
VALUES ('test2.jpg', '12-12-2012', 12, 'description2', 505, 'guided', 2, 1)]
13:25 LOG: DEBUG[Update Count: 1]
13:25 LOG: DEBUG[Executing SQL: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id)
VALUES ('test3.jpg', '12-12-2012', 12, 'description3', 505, 'guided', 3, 1)]
13:25 LOG: DEBUG[Update Count: 1]
13:25 LOG: DEBUG[Executing SQL: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id)
VALUES ('test4.jpg', '12-12-2012', 12, 'description4', 505, 'guided', 4, 1)]
13:25 LOG: DEBUG[Update Count: 1]
13:25 LOG: DEBUG[Successfully completed migration of schema "public" to version 1.1 - init data]
13:25 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
13:25 LOG: INFO [Successfully applied 2 migrations to schema "public" (execution time 00:00.197s)]
13:25 LOG: DEBUG[Memory usage: 13 of 126M]
13:25 LOG: DEBUG[Executing prepared SQL query]
13:25 LOG: DEBUG[Executing prepared SQL statement [SELECT t.id as tour_id, photo, date, duration, description, cost, tour_type, hotel_id, country_id, c.name as country_name, h.name as hotel_name, h.stars, h.website, h.latitude, h.longitude, h.feature  FROM tour t JOIN country c on t.country_id = c.id JOIN hotel h on t.hotel_id = h.id WHERE t.id=?]]
13:25 LOG: DEBUG[Fetching JDBC Connection from DataSource]
13:25 LOG: TRACE[Setting SQL statement parameter value: column index 1, parameter value [1], value class [java.lang.Integer], SQL type unknown]
13:25 LOG: DEBUG[Executing SQL query [SELECT t.id as tour_id, photo, date, duration, description, cost, tour_type, hotel_id, country_id, c.name as country_name, h.name as hotel_name, h.stars, h.website, h.latitude, h.longitude, h.feature  FROM tour t JOIN country c on t.country_id = c.id JOIN hotel h on t.hotel_id = h.id]]
13:25 LOG: DEBUG[Fetching JDBC Connection from DataSource]
13:25 LOG: DEBUG[Executing prepared SQL query]
13:25 LOG: DEBUG[Executing prepared SQL statement [SELECT t.id as tour_id, photo, date, duration, description, cost, tour_type, hotel_id, country_id, c.name as country_name, h.name as hotel_name, h.stars, h.website, h.latitude, h.longitude, h.feature  FROM tour t JOIN country c on t.country_id = c.id JOIN hotel h on t.hotel_id = h.id WHERE t.id=?]]
13:25 LOG: DEBUG[Fetching JDBC Connection from DataSource]
13:25 LOG: TRACE[Setting SQL statement parameter value: column index 1, parameter value [1], value class [java.lang.Integer], SQL type unknown]
13:25 LOG: DEBUG[Executing prepared SQL update]
13:25 LOG: DEBUG[Executing prepared SQL statement [DELETE FROM tour WHERE id=?]]
13:25 LOG: DEBUG[Fetching JDBC Connection from DataSource]
13:25 LOG: TRACE[Setting SQL statement parameter value: column index 1, parameter value [1], value class [java.lang.Integer], SQL type unknown]
13:25 LOG: TRACE[SQL update affected 1 rows]
13:25 LOG: DEBUG[Executing prepared SQL query]
13:25 LOG: DEBUG[Executing prepared SQL statement [SELECT t.id as tour_id, photo, date, duration, description, cost, tour_type, hotel_id, country_id, c.name as country_name, h.name as hotel_name, h.stars, h.website, h.latitude, h.longitude, h.feature  FROM tour t JOIN country c on t.country_id = c.id JOIN hotel h on t.hotel_id = h.id WHERE t.id=?]]
13:25 LOG: DEBUG[Fetching JDBC Connection from DataSource]
13:25 LOG: TRACE[Setting SQL statement parameter value: column index 1, parameter value [1], value class [java.lang.Integer], SQL type unknown]
13:29 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
13:29 LOG: INFO [Detected a Windows x86_64 system]
13:29 LOG: INFO [Postgres binaries at C:\Users\valik\AppData\Local\Temp\embedded-pg\PG-91c1fa33789b0c913345bf0253da6836]
13:29 LOG: TRACE[bdf55739-4b27-44ae-ad03-708eff897f9f postgres data directory is C:\Users\valik\AppData\Local\Temp\epg12292690607710730356]
13:29 LOG: INFO [The files belonging to this database system will be owned by user "valik".]
13:29 LOG: INFO [This user must also own the server process.]
13:29 LOG: INFO []
13:29 LOG: INFO [The database cluster will be initialized with locale "Russian_Belarus.1251".]
13:29 LOG: INFO [The default text search configuration will be set to "russian".]
13:29 LOG: INFO []
13:29 LOG: INFO [Data page checksums are disabled.]
13:29 LOG: INFO []
13:29 LOG: INFO [fixing permissions on existing directory C:/Users/valik/AppData/Local/Temp/epg12292690607710730356 ... ok]
13:29 LOG: INFO [creating subdirectories ... ok]
13:29 LOG: INFO [selecting default max_connections ... 100]
13:29 LOG: INFO [selecting default shared_buffers ... 128MB]
13:29 LOG: INFO [selecting dynamic shared memory implementation ... windows]
13:29 LOG: INFO [creating configuration files ... ok]
13:29 LOG: INFO [running bootstrap script ... ok]
13:30 LOG: INFO [performing post-bootstrap initialization ... ok]
13:30 LOG: INFO [syncing data to disk ... ok]
13:30 LOG: INFO []
13:30 LOG: INFO [Success. You can now start the database server using:]
13:30 LOG: INFO []
13:30 LOG: INFO [    C:/Users/valik/AppData/Local/Temp/embedded-pg/PG-91c1fa33789b0c913345bf0253da6836/bin/pg_ctl -D ^"C^:^\Users^\valik^\AppData^\Local^\Temp^\epg12292690607710730356^" -l logfile start]
13:30 LOG: INFO []
13:30 LOG: INFO [bdf55739-4b27-44ae-ad03-708eff897f9f initdb completed in 00:00:07.888]
13:30 LOG: INFO [bdf55739-4b27-44ae-ad03-708eff897f9f postmaster started as Process[pid=17336, exitValue="not exited"] on port 52431.  Waiting up to PT10S for server startup to finish.]
13:30 LOG: INFO [waiting for server to start....2019-02-20 13:30:04.274 +03 [2788] ���������:  ��� ����� ����������� �� ������ IPv6 "::1" ������ ���� 52431]
13:30 LOG: INFO [2019-02-20 13:30:04.274 +03 [2788] ���������:  ��� ����� ����������� �� ������ IPv4 "127.0.0.1" ������ ���� 52431]
13:30 LOG: INFO [2019-02-20 13:30:04.361 +03 [4148] ���������:  ������� �� ���� ���������: 2019-02-20 13:30:03 +03]
13:30 LOG: INFO [2019-02-20 13:30:04.410 +03 [2788] ���������:  ������� �� ������ ��������� �����������]
13:30 LOG: INFO [ done]
13:30 LOG: TRACE[While waiting for server startup]
java.sql.SQLException: connect failed
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:341) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.waitForServerStartup(EmbeddedPostgres.java:315) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.startPostmaster(EmbeddedPostgres.java:275) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.<init>(EmbeddedPostgres.java:162) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres$Builder.start(EmbeddedPostgres.java:580) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.createOrFindPreparer(PreparedDbProvider.java:82) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.<init>(PreparedDbProvider.java:62) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.forPreparer(PreparedDbProvider.java:57) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.junit.PreparedDbRule.before(PreparedDbRule.java:55) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:46) [junit-4.12.jar:4.12]
	at org.junit.rules.RunRules.evaluate(RunRules.java:20) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) [junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) [junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) [junit-rt.jar:?]
Caused by: java.net.SocketTimeoutException: connect timed out
	at java.net.PlainSocketImpl.waitForConnect(Native Method) ~[?:?]
	at java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:107) ~[?:?]
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224) ~[?:?]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403) ~[?:?]
	at java.net.Socket.connect(Socket.java:591) ~[?:?]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:339) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	... 16 more
13:30 LOG: INFO [bdf55739-4b27-44ae-ad03-708eff897f9f postmaster startup finished in 00:00:00.820]
13:30 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
13:30 LOG: INFO [Flyway Community Edition 5.2.4 by Boxfuse]
13:30 LOG: INFO [Database: jdbc:postgresql://localhost:52431/template1 (PostgreSQL 10.6)]
13:30 LOG: DEBUG[Driver  : PostgreSQL JDBC Driver 42.2.5]
13:30 LOG: DEBUG[DDL Transactions Supported: true]
13:30 LOG: DEBUG[Schema: public]
13:30 LOG: DEBUG[Scanning for classpath resources at 'classpath:db/migration' ...]
13:30 LOG: DEBUG[Determining location urls for classpath:db/migration using ClassLoader jdk.internal.loader.ClassLoaders$AppClassLoader@6ed3ef1 ...]
13:30 LOG: DEBUG[Scanning URL: file:/C:/Users/valik/IdeaProjects/java-lab-task-1/target/classes/db/migration]
13:30 LOG: DEBUG[JBoss VFS v2 available: false]
13:30 LOG: DEBUG[Scanning starting at classpath root in filesystem: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\]
13:30 LOG: DEBUG[Scanning for resources in path: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\db\migration (db/migration)]
13:30 LOG: DEBUG[Found resource: db/migration/V1_1__init_data.sql]
13:30 LOG: DEBUG[Found resource: db/migration/V1__init_schema.sql]
13:30 LOG: DEBUG[Scanning for classes at classpath:db/migration]
13:30 LOG: DEBUG[Scanning for SQL callbacks ...]
13:30 LOG: DEBUG[Spring Jdbc available: true]
13:30 LOG: DEBUG[Validating migrations ...]
13:30 LOG: DEBUG[Parsing V1_1__init_data.sql ...]
13:30 LOG: DEBUG[Found statement at line 1: INSERT INTO "user" (login, password)
VALUES ('user1', 'user1')]
13:30 LOG: DEBUG[Found statement at line 3: INSERT INTO "user" (login, password)
VALUES ('user2', 'user2')]
13:30 LOG: DEBUG[Found statement at line 5: INSERT INTO "user" (login, password)
VALUES ('user3', 'user3')]
13:30 LOG: DEBUG[Found statement at line 7: INSERT INTO "user" (login, password)
VALUES ('user4', 'user4')]
13:30 LOG: DEBUG[Found statement at line 10: INSERT INTO "country" (name)
VALUES ('testCountry')]
13:30 LOG: DEBUG[Found statement at line 13: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature)
VALUES ('test1', 4, 'test1', 1, 1, 'security')]
13:30 LOG: DEBUG[Found statement at line 15: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature)
VALUES ('test2', 4, 'test2', 1, 1, 'security')]
13:30 LOG: DEBUG[Found statement at line 17: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature)
VALUES ('test3', 4, 'test3', 1, 1, 'security')]
13:30 LOG: DEBUG[Found statement at line 19: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature)
VALUES ('test4', 4, 'test4', 1, 1, 'security')]
13:30 LOG: DEBUG[Found statement at line 22: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id)
VALUES ('test1.jpg', '12-12-2012', 12, 'description1', 505, 'guided', 1, 1)]
13:30 LOG: DEBUG[Found statement at line 24: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id)
VALUES ('test2.jpg', '12-12-2012', 12, 'description2', 505, 'guided', 2, 1)]
13:30 LOG: DEBUG[Found statement at line 26: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id)
VALUES ('test3.jpg', '12-12-2012', 12, 'description3', 505, 'guided', 3, 1)]
13:30 LOG: DEBUG[Found statement at line 28: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id)
VALUES ('test4.jpg', '12-12-2012', 12, 'description4', 505, 'guided', 4, 1)]
13:30 LOG: DEBUG[Parsing V1__init_schema.sql ...]
13:30 LOG: DEBUG[Found statement at line 1: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
13:30 LOG: DEBUG[Found statement at line 8: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
13:30 LOG: DEBUG[Found statement at line 16: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
13:30 LOG: DEBUG[Found statement at line 24: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
13:30 LOG: DEBUG[Found statement at line 36: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
13:30 LOG: DEBUG[Found statement at line 43: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
13:30 LOG: DEBUG[Found statement at line 59: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
13:30 LOG: DEBUG[Found statement at line 68: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
13:30 LOG: DEBUG[Filtering out resource: db/migration/V1_1__init_data.sql (filename: V1_1__init_data.sql)]
13:30 LOG: DEBUG[Filtering out resource: db/migration/V1__init_schema.sql (filename: V1__init_schema.sql)]
13:30 LOG: INFO [Successfully validated 2 migrations (execution time 00:00.031s)]
13:30 LOG: DEBUG[Schema "public" already exists. Skipping schema creation.]
13:30 LOG: INFO [Creating Schema History table: "public"."flyway_schema_history"]
13:30 LOG: DEBUG[Parsing createMetaDataTable.sql ...]
13:30 LOG: DEBUG[Found statement at line 17: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
13:30 LOG: DEBUG[Found statement at line 29: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
13:30 LOG: DEBUG[Found statement at line 31: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
13:30 LOG: DEBUG[Executing SQL: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
13:30 LOG: DEBUG[Update Count: 0]
13:30 LOG: DEBUG[Executing SQL: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
13:30 LOG: DEBUG[Update Count: 0]
13:30 LOG: DEBUG[Executing SQL: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
13:30 LOG: DEBUG[Update Count: 0]
13:30 LOG: DEBUG[Created Schema History table: "public"."flyway_schema_history"]
13:30 LOG: INFO [Current version of schema "public": << Empty Schema >>]
13:30 LOG: INFO [Migrating schema "public" to version 1 - init schema]
13:30 LOG: DEBUG[Executing SQL: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
13:30 LOG: DEBUG[Update Count: 0]
13:30 LOG: DEBUG[Executing SQL: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
13:30 LOG: DEBUG[Update Count: 0]
13:30 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
13:30 LOG: DEBUG[Update Count: 0]
13:30 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
13:30 LOG: DEBUG[Update Count: 0]
13:30 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
13:30 LOG: DEBUG[Update Count: 0]
13:30 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
13:30 LOG: DEBUG[Update Count: 0]
13:30 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
13:30 LOG: DEBUG[Update Count: 0]
13:30 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
13:30 LOG: DEBUG[Update Count: 0]
13:30 LOG: DEBUG[Successfully completed migration of schema "public" to version 1 - init schema]
13:30 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
13:30 LOG: INFO [Migrating schema "public" to version 1.1 - init data]
13:30 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password)
VALUES ('user1', 'user1')]
13:30 LOG: DEBUG[Update Count: 1]
13:30 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password)
VALUES ('user2', 'user2')]
13:30 LOG: DEBUG[Update Count: 1]
13:30 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password)
VALUES ('user3', 'user3')]
13:30 LOG: DEBUG[Update Count: 1]
13:30 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password)
VALUES ('user4', 'user4')]
13:30 LOG: DEBUG[Update Count: 1]
13:30 LOG: DEBUG[Executing SQL: INSERT INTO "country" (name)
VALUES ('testCountry')]
13:30 LOG: DEBUG[Update Count: 1]
13:30 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature)
VALUES ('test1', 4, 'test1', 1, 1, 'security')]
13:30 LOG: DEBUG[Update Count: 1]
13:30 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature)
VALUES ('test2', 4, 'test2', 1, 1, 'security')]
13:30 LOG: DEBUG[Update Count: 1]
13:30 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature)
VALUES ('test3', 4, 'test3', 1, 1, 'security')]
13:30 LOG: DEBUG[Update Count: 1]
13:30 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature)
VALUES ('test4', 4, 'test4', 1, 1, 'security')]
13:30 LOG: DEBUG[Update Count: 1]
13:30 LOG: DEBUG[Executing SQL: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id)
VALUES ('test1.jpg', '12-12-2012', 12, 'description1', 505, 'guided', 1, 1)]
13:30 LOG: DEBUG[Update Count: 1]
13:30 LOG: DEBUG[Executing SQL: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id)
VALUES ('test2.jpg', '12-12-2012', 12, 'description2', 505, 'guided', 2, 1)]
13:30 LOG: DEBUG[Update Count: 1]
13:30 LOG: DEBUG[Executing SQL: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id)
VALUES ('test3.jpg', '12-12-2012', 12, 'description3', 505, 'guided', 3, 1)]
13:30 LOG: DEBUG[Update Count: 1]
13:30 LOG: DEBUG[Executing SQL: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id)
VALUES ('test4.jpg', '12-12-2012', 12, 'description4', 505, 'guided', 4, 1)]
13:30 LOG: DEBUG[Update Count: 1]
13:30 LOG: DEBUG[Successfully completed migration of schema "public" to version 1.1 - init data]
13:30 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
13:30 LOG: INFO [Successfully applied 2 migrations to schema "public" (execution time 00:00.181s)]
13:30 LOG: DEBUG[Memory usage: 13 of 126M]
13:30 LOG: DEBUG[Executing prepared SQL query]
13:30 LOG: DEBUG[Executing prepared SQL statement [SELECT t.id as tour_id, photo, date, duration, description, cost, tour_type, hotel_id, country_id, c.name as country_name, h.name as hotel_name, h.stars, h.website, h.latitude, h.longitude, h.feature  FROM tour t JOIN country c on t.country_id = c.id JOIN hotel h on t.hotel_id = h.id WHERE t.id=?]]
13:30 LOG: DEBUG[Fetching JDBC Connection from DataSource]
13:30 LOG: TRACE[Setting SQL statement parameter value: column index 1, parameter value [1], value class [java.lang.Integer], SQL type unknown]
13:30 LOG: DEBUG[Executing SQL query [SELECT t.id as tour_id, photo, date, duration, description, cost, tour_type, hotel_id, country_id, c.name as country_name, h.name as hotel_name, h.stars, h.website, h.latitude, h.longitude, h.feature  FROM tour t JOIN country c on t.country_id = c.id JOIN hotel h on t.hotel_id = h.id]]
13:30 LOG: DEBUG[Fetching JDBC Connection from DataSource]
13:30 LOG: DEBUG[Executing prepared SQL query]
13:30 LOG: DEBUG[Executing prepared SQL statement [SELECT t.id as tour_id, photo, date, duration, description, cost, tour_type, hotel_id, country_id, c.name as country_name, h.name as hotel_name, h.stars, h.website, h.latitude, h.longitude, h.feature  FROM tour t JOIN country c on t.country_id = c.id JOIN hotel h on t.hotel_id = h.id WHERE t.id=?]]
13:30 LOG: DEBUG[Fetching JDBC Connection from DataSource]
13:30 LOG: TRACE[Setting SQL statement parameter value: column index 1, parameter value [1], value class [java.lang.Integer], SQL type unknown]
13:30 LOG: DEBUG[Executing prepared SQL update]
13:30 LOG: DEBUG[Executing prepared SQL statement [DELETE FROM tour WHERE id=?]]
13:30 LOG: DEBUG[Fetching JDBC Connection from DataSource]
13:30 LOG: TRACE[Setting SQL statement parameter value: column index 1, parameter value [1], value class [java.lang.Integer], SQL type unknown]
13:30 LOG: TRACE[SQL update affected 1 rows]
13:30 LOG: DEBUG[Executing prepared SQL query]
13:30 LOG: DEBUG[Executing prepared SQL statement [SELECT t.id as tour_id, photo, date, duration, description, cost, tour_type, hotel_id, country_id, c.name as country_name, h.name as hotel_name, h.stars, h.website, h.latitude, h.longitude, h.feature  FROM tour t JOIN country c on t.country_id = c.id JOIN hotel h on t.hotel_id = h.id WHERE t.id=?]]
13:30 LOG: DEBUG[Fetching JDBC Connection from DataSource]
13:30 LOG: TRACE[Setting SQL statement parameter value: column index 1, parameter value [1], value class [java.lang.Integer], SQL type unknown]
13:30 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
13:30 LOG: INFO [Detected a Windows x86_64 system]
13:30 LOG: INFO [Postgres binaries at C:\Users\valik\AppData\Local\Temp\embedded-pg\PG-91c1fa33789b0c913345bf0253da6836]
13:30 LOG: TRACE[b7fcbab3-a5ab-433e-bc19-58f95f602d4a postgres data directory is C:\Users\valik\AppData\Local\Temp\epg18024777559137584581]
13:30 LOG: INFO [The files belonging to this database system will be owned by user "valik".]
13:30 LOG: INFO [This user must also own the server process.]
13:30 LOG: INFO []
13:30 LOG: INFO [The database cluster will be initialized with locale "Russian_Belarus.1251".]
13:30 LOG: INFO [The default text search configuration will be set to "russian".]
13:30 LOG: INFO []
13:30 LOG: INFO [Data page checksums are disabled.]
13:30 LOG: INFO []
13:30 LOG: INFO [fixing permissions on existing directory C:/Users/valik/AppData/Local/Temp/epg18024777559137584581 ... ok]
13:30 LOG: INFO [creating subdirectories ... ok]
13:30 LOG: INFO [selecting default max_connections ... 100]
13:30 LOG: INFO [selecting default shared_buffers ... 128MB]
13:30 LOG: INFO [selecting dynamic shared memory implementation ... windows]
13:30 LOG: INFO [creating configuration files ... ok]
13:30 LOG: INFO [running bootstrap script ... ok]
13:30 LOG: INFO [performing post-bootstrap initialization ... ok]
13:30 LOG: INFO [syncing data to disk ... ok]
13:30 LOG: INFO []
13:30 LOG: INFO [Success. You can now start the database server using:]
13:30 LOG: INFO []
13:30 LOG: INFO [    C:/Users/valik/AppData/Local/Temp/embedded-pg/PG-91c1fa33789b0c913345bf0253da6836/bin/pg_ctl -D ^"C^:^\Users^\valik^\AppData^\Local^\Temp^\epg18024777559137584581^" -l logfile start]
13:30 LOG: INFO []
13:30 LOG: INFO [b7fcbab3-a5ab-433e-bc19-58f95f602d4a initdb completed in 00:00:07.211]
13:30 LOG: INFO [b7fcbab3-a5ab-433e-bc19-58f95f602d4a postmaster started as Process[pid=15108, exitValue="not exited"] on port 52459.  Waiting up to PT10S for server startup to finish.]
13:30 LOG: INFO [waiting for server to start....2019-02-20 13:30:32.636 +03 [13024] ���������:  ��� ����� ����������� �� ������ IPv6 "::1" ������ ���� 52459]
13:30 LOG: INFO [2019-02-20 13:30:32.637 +03 [13024] ���������:  ��� ����� ����������� �� ������ IPv4 "127.0.0.1" ������ ���� 52459]
13:30 LOG: INFO [2019-02-20 13:30:32.731 +03 [14980] ���������:  ������� �� ���� ���������: 2019-02-20 13:30:31 +03]
13:30 LOG: INFO [2019-02-20 13:30:32.779 +03 [13024] ���������:  ������� �� ������ ��������� �����������]
13:30 LOG: INFO [ done]
13:30 LOG: TRACE[While waiting for server startup]
java.sql.SQLException: connect failed
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:341) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.waitForServerStartup(EmbeddedPostgres.java:315) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.startPostmaster(EmbeddedPostgres.java:275) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.<init>(EmbeddedPostgres.java:162) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres$Builder.start(EmbeddedPostgres.java:580) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.createOrFindPreparer(PreparedDbProvider.java:82) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.<init>(PreparedDbProvider.java:62) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.forPreparer(PreparedDbProvider.java:57) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.junit.PreparedDbRule.before(PreparedDbRule.java:55) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:46) [junit-4.12.jar:4.12]
	at org.junit.rules.RunRules.evaluate(RunRules.java:20) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) [junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) [junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) [junit-rt.jar:?]
Caused by: java.net.SocketTimeoutException: connect timed out
	at java.net.PlainSocketImpl.waitForConnect(Native Method) ~[?:?]
	at java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:107) ~[?:?]
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224) ~[?:?]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403) ~[?:?]
	at java.net.Socket.connect(Socket.java:591) ~[?:?]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:339) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	... 16 more
13:30 LOG: INFO [b7fcbab3-a5ab-433e-bc19-58f95f602d4a postmaster startup finished in 00:00:00.841]
13:30 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
13:30 LOG: INFO [Flyway Community Edition 5.2.4 by Boxfuse]
13:30 LOG: INFO [Database: jdbc:postgresql://localhost:52459/template1 (PostgreSQL 10.6)]
13:30 LOG: DEBUG[Driver  : PostgreSQL JDBC Driver 42.2.5]
13:30 LOG: DEBUG[DDL Transactions Supported: true]
13:30 LOG: DEBUG[Schema: public]
13:30 LOG: DEBUG[Scanning for classpath resources at 'classpath:db/migration' ...]
13:30 LOG: DEBUG[Determining location urls for classpath:db/migration using ClassLoader jdk.internal.loader.ClassLoaders$AppClassLoader@6ed3ef1 ...]
13:30 LOG: DEBUG[Scanning URL: file:/C:/Users/valik/IdeaProjects/java-lab-task-1/target/classes/db/migration]
13:30 LOG: DEBUG[JBoss VFS v2 available: false]
13:30 LOG: DEBUG[Scanning starting at classpath root in filesystem: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\]
13:30 LOG: DEBUG[Scanning for resources in path: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\db\migration (db/migration)]
13:30 LOG: DEBUG[Found resource: db/migration/V1_1__init_data.sql]
13:30 LOG: DEBUG[Found resource: db/migration/V1__init_schema.sql]
13:30 LOG: DEBUG[Scanning for classes at classpath:db/migration]
13:30 LOG: DEBUG[Scanning for SQL callbacks ...]
13:30 LOG: DEBUG[Spring Jdbc available: true]
13:30 LOG: DEBUG[Validating migrations ...]
13:30 LOG: DEBUG[Parsing V1_1__init_data.sql ...]
13:30 LOG: DEBUG[Found statement at line 1: INSERT INTO "user" (login, password)
VALUES ('user1', 'user1')]
13:30 LOG: DEBUG[Found statement at line 3: INSERT INTO "user" (login, password)
VALUES ('user2', 'user2')]
13:30 LOG: DEBUG[Found statement at line 5: INSERT INTO "user" (login, password)
VALUES ('user3', 'user3')]
13:30 LOG: DEBUG[Found statement at line 7: INSERT INTO "user" (login, password)
VALUES ('user4', 'user4')]
13:30 LOG: DEBUG[Found statement at line 10: INSERT INTO "country" (name)
VALUES ('testCountry')]
13:30 LOG: DEBUG[Found statement at line 13: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature)
VALUES ('test1', 4, 'test1', 1, 1, 'security')]
13:30 LOG: DEBUG[Found statement at line 15: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature)
VALUES ('test2', 4, 'test2', 1, 1, 'security')]
13:30 LOG: DEBUG[Found statement at line 17: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature)
VALUES ('test3', 4, 'test3', 1, 1, 'security')]
13:30 LOG: DEBUG[Found statement at line 19: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature)
VALUES ('test4', 4, 'test4', 1, 1, 'security')]
13:30 LOG: DEBUG[Found statement at line 22: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id)
VALUES ('test1.jpg', '12-12-2012', 12, 'description1', 505, 'guided', 1, 1)]
13:30 LOG: DEBUG[Found statement at line 24: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id)
VALUES ('test2.jpg', '12-12-2012', 12, 'description2', 505, 'guided', 2, 1)]
13:30 LOG: DEBUG[Found statement at line 26: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id)
VALUES ('test3.jpg', '12-12-2012', 12, 'description3', 505, 'guided', 3, 1)]
13:30 LOG: DEBUG[Found statement at line 28: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id)
VALUES ('test4.jpg', '12-12-2012', 12, 'description4', 505, 'guided', 4, 1)]
13:30 LOG: DEBUG[Parsing V1__init_schema.sql ...]
13:30 LOG: DEBUG[Found statement at line 1: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
13:30 LOG: DEBUG[Found statement at line 8: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
13:30 LOG: DEBUG[Found statement at line 16: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
13:30 LOG: DEBUG[Found statement at line 24: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
13:30 LOG: DEBUG[Found statement at line 36: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
13:30 LOG: DEBUG[Found statement at line 43: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
13:30 LOG: DEBUG[Found statement at line 59: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
13:30 LOG: DEBUG[Found statement at line 68: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
13:30 LOG: DEBUG[Filtering out resource: db/migration/V1_1__init_data.sql (filename: V1_1__init_data.sql)]
13:30 LOG: DEBUG[Filtering out resource: db/migration/V1__init_schema.sql (filename: V1__init_schema.sql)]
13:30 LOG: INFO [Successfully validated 2 migrations (execution time 00:00.031s)]
13:30 LOG: DEBUG[Schema "public" already exists. Skipping schema creation.]
13:30 LOG: INFO [Creating Schema History table: "public"."flyway_schema_history"]
13:30 LOG: DEBUG[Parsing createMetaDataTable.sql ...]
13:30 LOG: DEBUG[Found statement at line 17: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
13:30 LOG: DEBUG[Found statement at line 29: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
13:30 LOG: DEBUG[Found statement at line 31: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
13:30 LOG: DEBUG[Executing SQL: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
13:30 LOG: DEBUG[Update Count: 0]
13:30 LOG: DEBUG[Executing SQL: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
13:30 LOG: DEBUG[Update Count: 0]
13:30 LOG: DEBUG[Executing SQL: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
13:30 LOG: DEBUG[Update Count: 0]
13:30 LOG: DEBUG[Created Schema History table: "public"."flyway_schema_history"]
13:30 LOG: INFO [Current version of schema "public": << Empty Schema >>]
13:30 LOG: INFO [Migrating schema "public" to version 1 - init schema]
13:30 LOG: DEBUG[Executing SQL: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
13:30 LOG: DEBUG[Update Count: 0]
13:30 LOG: DEBUG[Executing SQL: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
13:30 LOG: DEBUG[Update Count: 0]
13:30 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
13:30 LOG: DEBUG[Update Count: 0]
13:30 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
13:30 LOG: DEBUG[Update Count: 0]
13:30 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
13:30 LOG: DEBUG[Update Count: 0]
13:30 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
13:30 LOG: DEBUG[Update Count: 0]
13:30 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
13:30 LOG: DEBUG[Update Count: 0]
13:30 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
13:30 LOG: DEBUG[Update Count: 0]
13:30 LOG: DEBUG[Successfully completed migration of schema "public" to version 1 - init schema]
13:30 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
13:30 LOG: INFO [Migrating schema "public" to version 1.1 - init data]
13:30 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password)
VALUES ('user1', 'user1')]
13:30 LOG: DEBUG[Update Count: 1]
13:30 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password)
VALUES ('user2', 'user2')]
13:30 LOG: DEBUG[Update Count: 1]
13:30 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password)
VALUES ('user3', 'user3')]
13:30 LOG: DEBUG[Update Count: 1]
13:30 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password)
VALUES ('user4', 'user4')]
13:30 LOG: DEBUG[Update Count: 1]
13:30 LOG: DEBUG[Executing SQL: INSERT INTO "country" (name)
VALUES ('testCountry')]
13:30 LOG: DEBUG[Update Count: 1]
13:30 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature)
VALUES ('test1', 4, 'test1', 1, 1, 'security')]
13:30 LOG: DEBUG[Update Count: 1]
13:30 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature)
VALUES ('test2', 4, 'test2', 1, 1, 'security')]
13:30 LOG: DEBUG[Update Count: 1]
13:30 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature)
VALUES ('test3', 4, 'test3', 1, 1, 'security')]
13:30 LOG: DEBUG[Update Count: 1]
13:30 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature)
VALUES ('test4', 4, 'test4', 1, 1, 'security')]
13:30 LOG: DEBUG[Update Count: 1]
13:30 LOG: DEBUG[Executing SQL: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id)
VALUES ('test1.jpg', '12-12-2012', 12, 'description1', 505, 'guided', 1, 1)]
13:30 LOG: DEBUG[Update Count: 1]
13:30 LOG: DEBUG[Executing SQL: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id)
VALUES ('test2.jpg', '12-12-2012', 12, 'description2', 505, 'guided', 2, 1)]
13:30 LOG: DEBUG[Update Count: 1]
13:30 LOG: DEBUG[Executing SQL: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id)
VALUES ('test3.jpg', '12-12-2012', 12, 'description3', 505, 'guided', 3, 1)]
13:30 LOG: DEBUG[Update Count: 1]
13:30 LOG: DEBUG[Executing SQL: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id)
VALUES ('test4.jpg', '12-12-2012', 12, 'description4', 505, 'guided', 4, 1)]
13:30 LOG: DEBUG[Update Count: 1]
13:30 LOG: DEBUG[Successfully completed migration of schema "public" to version 1.1 - init data]
13:30 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
13:30 LOG: INFO [Successfully applied 2 migrations to schema "public" (execution time 00:00.217s)]
13:30 LOG: DEBUG[Memory usage: 13 of 126M]
13:30 LOG: DEBUG[Executing prepared SQL query]
13:30 LOG: DEBUG[Executing prepared SQL statement [SELECT t.id as tour_id, photo, date, duration, description, cost, tour_type, hotel_id, country_id, c.name as country_name, h.name as hotel_name, h.stars, h.website, h.latitude, h.longitude, h.feature  FROM tour t JOIN country c on t.country_id = c.id JOIN hotel h on t.hotel_id = h.id WHERE t.id=?]]
13:30 LOG: DEBUG[Fetching JDBC Connection from DataSource]
13:30 LOG: TRACE[Setting SQL statement parameter value: column index 1, parameter value [1], value class [java.lang.Integer], SQL type unknown]
13:30 LOG: DEBUG[Executing SQL query [SELECT t.id as tour_id, photo, date, duration, description, cost, tour_type, hotel_id, country_id, c.name as country_name, h.name as hotel_name, h.stars, h.website, h.latitude, h.longitude, h.feature  FROM tour t JOIN country c on t.country_id = c.id JOIN hotel h on t.hotel_id = h.id]]
13:30 LOG: DEBUG[Fetching JDBC Connection from DataSource]
13:30 LOG: DEBUG[Executing prepared SQL query]
13:30 LOG: DEBUG[Executing prepared SQL statement [SELECT t.id as tour_id, photo, date, duration, description, cost, tour_type, hotel_id, country_id, c.name as country_name, h.name as hotel_name, h.stars, h.website, h.latitude, h.longitude, h.feature  FROM tour t JOIN country c on t.country_id = c.id JOIN hotel h on t.hotel_id = h.id WHERE t.id=?]]
13:30 LOG: DEBUG[Fetching JDBC Connection from DataSource]
13:30 LOG: TRACE[Setting SQL statement parameter value: column index 1, parameter value [1], value class [java.lang.Integer], SQL type unknown]
13:30 LOG: DEBUG[Executing prepared SQL update]
13:30 LOG: DEBUG[Executing prepared SQL statement [DELETE FROM tour WHERE id=?]]
13:30 LOG: DEBUG[Fetching JDBC Connection from DataSource]
13:30 LOG: TRACE[Setting SQL statement parameter value: column index 1, parameter value [1], value class [java.lang.Integer], SQL type unknown]
13:30 LOG: TRACE[SQL update affected 1 rows]
13:30 LOG: DEBUG[Executing prepared SQL query]
13:30 LOG: DEBUG[Executing prepared SQL statement [SELECT t.id as tour_id, photo, date, duration, description, cost, tour_type, hotel_id, country_id, c.name as country_name, h.name as hotel_name, h.stars, h.website, h.latitude, h.longitude, h.feature  FROM tour t JOIN country c on t.country_id = c.id JOIN hotel h on t.hotel_id = h.id WHERE t.id=?]]
13:30 LOG: DEBUG[Fetching JDBC Connection from DataSource]
13:30 LOG: TRACE[Setting SQL statement parameter value: column index 1, parameter value [1], value class [java.lang.Integer], SQL type unknown]
13:30 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
13:30 LOG: INFO [Detected a Windows x86_64 system]
13:30 LOG: INFO [Postgres binaries at C:\Users\valik\AppData\Local\Temp\embedded-pg\PG-91c1fa33789b0c913345bf0253da6836]
13:30 LOG: TRACE[129aec0d-734a-4d25-a8cc-37cec7bdb0e5 postgres data directory is C:\Users\valik\AppData\Local\Temp\epg8034348713323421689]
13:30 LOG: INFO [The files belonging to this database system will be owned by user "valik".]
13:30 LOG: INFO [This user must also own the server process.]
13:30 LOG: INFO []
13:30 LOG: INFO [The database cluster will be initialized with locale "Russian_Belarus.1251".]
13:30 LOG: INFO [The default text search configuration will be set to "russian".]
13:30 LOG: INFO []
13:30 LOG: INFO [Data page checksums are disabled.]
13:30 LOG: INFO []
13:30 LOG: INFO [fixing permissions on existing directory C:/Users/valik/AppData/Local/Temp/epg8034348713323421689 ... ok]
13:30 LOG: INFO [creating subdirectories ... ok]
13:30 LOG: INFO [selecting default max_connections ... 100]
13:30 LOG: INFO [selecting default shared_buffers ... 128MB]
13:30 LOG: INFO [selecting dynamic shared memory implementation ... windows]
13:30 LOG: INFO [creating configuration files ... ok]
13:30 LOG: INFO [running bootstrap script ... ok]
13:31 LOG: INFO [performing post-bootstrap initialization ... ok]
13:31 LOG: INFO [syncing data to disk ... ok]
13:31 LOG: INFO []
13:31 LOG: INFO [Success. You can now start the database server using:]
13:31 LOG: INFO []
13:31 LOG: INFO [    C:/Users/valik/AppData/Local/Temp/embedded-pg/PG-91c1fa33789b0c913345bf0253da6836/bin/pg_ctl -D ^"C^:^\Users^\valik^\AppData^\Local^\Temp^\epg8034348713323421689^" -l logfile start]
13:31 LOG: INFO []
13:31 LOG: INFO [129aec0d-734a-4d25-a8cc-37cec7bdb0e5 initdb completed in 00:00:08.284]
13:31 LOG: INFO [129aec0d-734a-4d25-a8cc-37cec7bdb0e5 postmaster started as Process[pid=18048, exitValue="not exited"] on port 52500.  Waiting up to PT10S for server startup to finish.]
13:31 LOG: INFO [waiting for server to start....2019-02-20 13:31:02.074 +03 [10972] ���������:  ��� ����� ����������� �� ������ IPv6 "::1" ������ ���� 52500]
13:31 LOG: INFO [2019-02-20 13:31:02.074 +03 [10972] ���������:  ��� ����� ����������� �� ������ IPv4 "127.0.0.1" ������ ���� 52500]
13:31 LOG: INFO [2019-02-20 13:31:02.153 +03 [4144] ���������:  ������� �� ���� ���������: 2019-02-20 13:31:00 +03]
13:31 LOG: INFO [2019-02-20 13:31:02.187 +03 [10972] ���������:  ������� �� ������ ��������� �����������]
13:31 LOG: INFO [ done]
13:31 LOG: TRACE[While waiting for server startup]
java.sql.SQLException: connect failed
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:341) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.waitForServerStartup(EmbeddedPostgres.java:315) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.startPostmaster(EmbeddedPostgres.java:275) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.<init>(EmbeddedPostgres.java:162) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres$Builder.start(EmbeddedPostgres.java:580) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.createOrFindPreparer(PreparedDbProvider.java:82) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.<init>(PreparedDbProvider.java:62) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.embedded.PreparedDbProvider.forPreparer(PreparedDbProvider.java:57) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at com.opentable.db.postgres.junit.PreparedDbRule.before(PreparedDbRule.java:55) [otj-pg-embedded-0.13.1.jar:0.13.1]
	at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:46) [junit-4.12.jar:4.12]
	at org.junit.rules.RunRules.evaluate(RunRules.java:20) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) [junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) [junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) [junit-rt.jar:?]
Caused by: java.net.SocketTimeoutException: connect timed out
	at java.net.PlainSocketImpl.waitForConnect(Native Method) ~[?:?]
	at java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:107) ~[?:?]
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224) ~[?:?]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403) ~[?:?]
	at java.net.Socket.connect(Socket.java:591) ~[?:?]
	at com.opentable.db.postgres.embedded.EmbeddedPostgres.verifyReady(EmbeddedPostgres.java:339) ~[otj-pg-embedded-0.13.1.jar:0.13.1]
	... 16 more
13:31 LOG: INFO [129aec0d-734a-4d25-a8cc-37cec7bdb0e5 postmaster startup finished in 00:00:00.797]
13:31 LOG: WARN [Direct configuration of the Flyway object has been deprecated and will be removed in Flyway 6.0. Use Flyway.configure() instead.]
13:31 LOG: INFO [Flyway Community Edition 5.2.4 by Boxfuse]
13:31 LOG: INFO [Database: jdbc:postgresql://localhost:52500/template1 (PostgreSQL 10.6)]
13:31 LOG: DEBUG[Driver  : PostgreSQL JDBC Driver 42.2.5]
13:31 LOG: DEBUG[DDL Transactions Supported: true]
13:31 LOG: DEBUG[Schema: public]
13:31 LOG: DEBUG[Scanning for classpath resources at 'classpath:db/migration' ...]
13:31 LOG: DEBUG[Determining location urls for classpath:db/migration using ClassLoader jdk.internal.loader.ClassLoaders$AppClassLoader@6ed3ef1 ...]
13:31 LOG: DEBUG[Scanning URL: file:/C:/Users/valik/IdeaProjects/java-lab-task-1/target/classes/db/migration]
13:31 LOG: DEBUG[JBoss VFS v2 available: false]
13:31 LOG: DEBUG[Scanning starting at classpath root in filesystem: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\]
13:31 LOG: DEBUG[Scanning for resources in path: C:\Users\valik\IdeaProjects\java-lab-task-1\target\classes\db\migration (db/migration)]
13:31 LOG: DEBUG[Found resource: db/migration/V1_1__init_data.sql]
13:31 LOG: DEBUG[Found resource: db/migration/V1__init_schema.sql]
13:31 LOG: DEBUG[Scanning for classes at classpath:db/migration]
13:31 LOG: DEBUG[Scanning for SQL callbacks ...]
13:31 LOG: DEBUG[Spring Jdbc available: true]
13:31 LOG: DEBUG[Validating migrations ...]
13:31 LOG: DEBUG[Parsing V1_1__init_data.sql ...]
13:31 LOG: DEBUG[Found statement at line 1: INSERT INTO "user" (login, password)
VALUES ('user1', 'user1')]
13:31 LOG: DEBUG[Found statement at line 3: INSERT INTO "user" (login, password)
VALUES ('user2', 'user2')]
13:31 LOG: DEBUG[Found statement at line 5: INSERT INTO "user" (login, password)
VALUES ('user3', 'user3')]
13:31 LOG: DEBUG[Found statement at line 7: INSERT INTO "user" (login, password)
VALUES ('user4', 'user4')]
13:31 LOG: DEBUG[Found statement at line 10: INSERT INTO "country" (name)
VALUES ('testCountry')]
13:31 LOG: DEBUG[Found statement at line 13: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature)
VALUES ('test1', 4, 'test1', 1, 1, 'security')]
13:31 LOG: DEBUG[Found statement at line 15: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature)
VALUES ('test2', 4, 'test2', 1, 1, 'security')]
13:31 LOG: DEBUG[Found statement at line 17: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature)
VALUES ('test3', 4, 'test3', 1, 1, 'security')]
13:31 LOG: DEBUG[Found statement at line 19: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature)
VALUES ('test4', 4, 'test4', 1, 1, 'security')]
13:31 LOG: DEBUG[Found statement at line 22: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id)
VALUES ('test1.jpg', '12-12-2012', 12, 'description1', 505, 'guided', 1, 1)]
13:31 LOG: DEBUG[Found statement at line 24: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id)
VALUES ('test2.jpg', '12-12-2012', 12, 'description2', 505, 'guided', 2, 1)]
13:31 LOG: DEBUG[Found statement at line 26: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id)
VALUES ('test3.jpg', '12-12-2012', 12, 'description3', 505, 'guided', 3, 1)]
13:31 LOG: DEBUG[Found statement at line 28: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id)
VALUES ('test4.jpg', '12-12-2012', 12, 'description4', 505, 'guided', 4, 1)]
13:31 LOG: DEBUG[Parsing V1__init_schema.sql ...]
13:31 LOG: DEBUG[Found statement at line 1: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
13:31 LOG: DEBUG[Found statement at line 8: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
13:31 LOG: DEBUG[Found statement at line 16: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
13:31 LOG: DEBUG[Found statement at line 24: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
13:31 LOG: DEBUG[Found statement at line 36: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
13:31 LOG: DEBUG[Found statement at line 43: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
13:31 LOG: DEBUG[Found statement at line 59: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
13:31 LOG: DEBUG[Found statement at line 68: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
13:31 LOG: DEBUG[Filtering out resource: db/migration/V1_1__init_data.sql (filename: V1_1__init_data.sql)]
13:31 LOG: DEBUG[Filtering out resource: db/migration/V1__init_schema.sql (filename: V1__init_schema.sql)]
13:31 LOG: INFO [Successfully validated 2 migrations (execution time 00:00.032s)]
13:31 LOG: DEBUG[Schema "public" already exists. Skipping schema creation.]
13:31 LOG: INFO [Creating Schema History table: "public"."flyway_schema_history"]
13:31 LOG: DEBUG[Parsing createMetaDataTable.sql ...]
13:31 LOG: DEBUG[Found statement at line 17: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
13:31 LOG: DEBUG[Found statement at line 29: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
13:31 LOG: DEBUG[Found statement at line 31: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
13:31 LOG: DEBUG[Executing SQL: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)]
13:31 LOG: DEBUG[Update Count: 0]
13:31 LOG: DEBUG[Executing SQL: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")]
13:31 LOG: DEBUG[Update Count: 0]
13:31 LOG: DEBUG[Executing SQL: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")]
13:31 LOG: DEBUG[Update Count: 0]
13:31 LOG: DEBUG[Created Schema History table: "public"."flyway_schema_history"]
13:31 LOG: INFO [Current version of schema "public": << Empty Schema >>]
13:31 LOG: INFO [Migrating schema "public" to version 1 - init schema]
13:31 LOG: DEBUG[Executing SQL: CREATE TYPE TOUR_TYPE AS ENUM
  (
    'bus', 'sightseeing', 'shore_excursion',
    'adventure', 'sporting', 'cruise',
    'escorted', 'guided', 'rail', 'extreme'
    )]
13:31 LOG: DEBUG[Update Count: 0]
13:31 LOG: DEBUG[Executing SQL: CREATE TYPE HOTEL_FEATURE AS ENUM
  (
    'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning',
    'food_delivery', 'pool', 'conference_hall', 'safe'
    )]
13:31 LOG: DEBUG[Update Count: 0]
13:31 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "user"
(
  id       SERIAL,
  login    VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255)        NOT NULL,
  PRIMARY KEY (id)
)]
13:31 LOG: DEBUG[Update Count: 0]
13:31 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "hotel"
(
  id        SERIAL,
  name      VARCHAR(255)   NOT NULL,
  stars     SMALLINT       NOT NULL,
  website   VARCHAR(255)   NOT NULL,
  latitude  DECIMAL(8, 6)  NOT NULL,
  longitude DECIMAL(8, 6)  NOT NULL,
  feature   HOTEL_FEATURE NOT NULL,
  PRIMARY KEY (id)
)]
13:31 LOG: DEBUG[Update Count: 0]
13:31 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "country"
(
  id   SERIAL,
  name VARCHAR(255),
  PRIMARY KEY (id)
)]
13:31 LOG: DEBUG[Update Count: 0]
13:31 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "tour"
(
  id          SERIAL,
  photo       VARCHAR(255),
  date        DATE           NOT NULL,
  duration    INT            NOT NULL,
  description TEXT           NOT NULL,
  cost        DECIMAL(19, 3) NOT NULL,
  tour_type   TOUR_TYPE      NOT NULL,
  hotel_id    INT            NOT NULL,
  country_id  INT            NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (hotel_id) REFERENCES "hotel" (id),
  FOREIGN KEY (country_id) REFERENCES "country" (id)
)]
13:31 LOG: DEBUG[Update Count: 0]
13:31 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "usertour"
(
  user_id INT UNIQUE NOT NULL,
  tour_id INT UNIQUE NOT NULL,
  PRIMARY KEY (user_id, tour_id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
13:31 LOG: DEBUG[Update Count: 0]
13:31 LOG: DEBUG[Executing SQL: CREATE TABLE IF NOT EXISTS "review"
(
  id      SERIAL,
  date    DATE NOT NULL,
  text    TEXT NOT NULL,
  user_id INT  NOT NULL,
  tour_id INT  NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES "user" (id),
  FOREIGN KEY (tour_id) REFERENCES "tour" (id)
)]
13:31 LOG: DEBUG[Update Count: 0]
13:31 LOG: DEBUG[Successfully completed migration of schema "public" to version 1 - init schema]
13:31 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
13:31 LOG: INFO [Migrating schema "public" to version 1.1 - init data]
13:31 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password)
VALUES ('user1', 'user1')]
13:31 LOG: DEBUG[Update Count: 1]
13:31 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password)
VALUES ('user2', 'user2')]
13:31 LOG: DEBUG[Update Count: 1]
13:31 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password)
VALUES ('user3', 'user3')]
13:31 LOG: DEBUG[Update Count: 1]
13:31 LOG: DEBUG[Executing SQL: INSERT INTO "user" (login, password)
VALUES ('user4', 'user4')]
13:31 LOG: DEBUG[Update Count: 1]
13:31 LOG: DEBUG[Executing SQL: INSERT INTO "country" (name)
VALUES ('testCountry')]
13:31 LOG: DEBUG[Update Count: 1]
13:31 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature)
VALUES ('test1', 4, 'test1', 1, 1, 'security')]
13:31 LOG: DEBUG[Update Count: 1]
13:31 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature)
VALUES ('test2', 4, 'test2', 1, 1, 'security')]
13:31 LOG: DEBUG[Update Count: 1]
13:31 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature)
VALUES ('test3', 4, 'test3', 1, 1, 'security')]
13:31 LOG: DEBUG[Update Count: 1]
13:31 LOG: DEBUG[Executing SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature)
VALUES ('test4', 4, 'test4', 1, 1, 'security')]
13:31 LOG: DEBUG[Update Count: 1]
13:31 LOG: DEBUG[Executing SQL: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id)
VALUES ('test1.jpg', '12-12-2012', 12, 'description1', 505, 'guided', 1, 1)]
13:31 LOG: DEBUG[Update Count: 1]
13:31 LOG: DEBUG[Executing SQL: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id)
VALUES ('test2.jpg', '12-12-2012', 12, 'description2', 505, 'guided', 2, 1)]
13:31 LOG: DEBUG[Update Count: 1]
13:31 LOG: DEBUG[Executing SQL: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id)
VALUES ('test3.jpg', '12-12-2012', 12, 'description3', 505, 'guided', 3, 1)]
13:31 LOG: DEBUG[Update Count: 1]
13:31 LOG: DEBUG[Executing SQL: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id)
VALUES ('test4.jpg', '12-12-2012', 12, 'description4', 505, 'guided', 4, 1)]
13:31 LOG: DEBUG[Update Count: 1]
13:31 LOG: DEBUG[Successfully completed migration of schema "public" to version 1.1 - init data]
13:31 LOG: DEBUG[Schema History table "public"."flyway_schema_history" successfully updated to reflect changes]
13:31 LOG: INFO [Successfully applied 2 migrations to schema "public" (execution time 00:00.224s)]
13:31 LOG: DEBUG[Memory usage: 13 of 126M]
13:31 LOG: DEBUG[Executing prepared SQL query]
13:31 LOG: DEBUG[Executing prepared SQL statement [SELECT t.id as tour_id, photo, date, duration, description, cost, tour_type, hotel_id, country_id, c.name as country_name, h.name as hotel_name, h.stars, h.website, h.latitude, h.longitude, h.feature  FROM tour t JOIN country c on t.country_id = c.id JOIN hotel h on t.hotel_id = h.id WHERE t.id=?]]
13:31 LOG: DEBUG[Fetching JDBC Connection from DataSource]
13:31 LOG: TRACE[Setting SQL statement parameter value: column index 1, parameter value [1], value class [java.lang.Integer], SQL type unknown]
13:31 LOG: DEBUG[Executing SQL query [SELECT t.id as tour_id, photo, date, duration, description, cost, tour_type, hotel_id, country_id, c.name as country_name, h.name as hotel_name, h.stars, h.website, h.latitude, h.longitude, h.feature  FROM tour t JOIN country c on t.country_id = c.id JOIN hotel h on t.hotel_id = h.id]]
13:31 LOG: DEBUG[Fetching JDBC Connection from DataSource]
13:31 LOG: DEBUG[Executing prepared SQL query]
13:31 LOG: DEBUG[Executing prepared SQL statement [SELECT t.id as tour_id, photo, date, duration, description, cost, tour_type, hotel_id, country_id, c.name as country_name, h.name as hotel_name, h.stars, h.website, h.latitude, h.longitude, h.feature  FROM tour t JOIN country c on t.country_id = c.id JOIN hotel h on t.hotel_id = h.id WHERE t.id=?]]
13:31 LOG: DEBUG[Fetching JDBC Connection from DataSource]
13:31 LOG: TRACE[Setting SQL statement parameter value: column index 1, parameter value [1], value class [java.lang.Integer], SQL type unknown]
13:31 LOG: DEBUG[Executing prepared SQL update]
13:31 LOG: DEBUG[Executing prepared SQL statement [DELETE FROM tour WHERE id=?]]
13:31 LOG: DEBUG[Fetching JDBC Connection from DataSource]
13:31 LOG: TRACE[Setting SQL statement parameter value: column index 1, parameter value [1], value class [java.lang.Integer], SQL type unknown]
13:31 LOG: TRACE[SQL update affected 1 rows]
13:31 LOG: DEBUG[Executing prepared SQL query]
13:31 LOG: DEBUG[Executing prepared SQL statement [SELECT t.id as tour_id, photo, date, duration, description, cost, tour_type, hotel_id, country_id, c.name as country_name, h.name as hotel_name, h.stars, h.website, h.latitude, h.longitude, h.feature  FROM tour t JOIN country c on t.country_id = c.id JOIN hotel h on t.hotel_id = h.id WHERE t.id=?]]
13:31 LOG: DEBUG[Fetching JDBC Connection from DataSource]
13:31 LOG: TRACE[Setting SQL statement parameter value: column index 1, parameter value [1], value class [java.lang.Integer], SQL type unknown]
14:21 LOG: DEBUG[SpringJUnit4ClassRunner constructor called with [class service.UserServiceTest]]
14:21 LOG: DEBUG[Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]]
14:21 LOG: DEBUG[Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]]
14:21 LOG: DEBUG[Instantiating TestContextBootstrapper for test class [service.UserServiceTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]]
14:21 LOG: TRACE[Retrieved @ContextConfiguration [@org.springframework.test.context.ContextConfiguration(name=, value=[], loader=interface org.springframework.test.context.ContextLoader, classes=[class config.TestConfig], locations=[], initializers=[], inheritLocations=true, inheritInitializers=true)] for declaring class [service.UserServiceTest].]
14:21 LOG: TRACE[Resolved context configuration attributes: [ContextConfigurationAttributes@7803bfd declaringClass = 'service.UserServiceTest', classes = '{class config.TestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']]
14:21 LOG: TRACE[Resolving ContextLoader for context configuration attributes [ContextConfigurationAttributes@7803bfd declaringClass = 'service.UserServiceTest', classes = '{class config.TestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']]
14:21 LOG: TRACE[Using ContextLoader class [org.springframework.test.context.support.DelegatingSmartContextLoader] for test class [service.UserServiceTest]]
14:21 LOG: TRACE[Processing locations and classes for context configuration attributes [ContextConfigurationAttributes@7803bfd declaringClass = 'service.UserServiceTest', classes = '{class config.TestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']]
14:21 LOG: DEBUG[Delegating to AnnotationConfigContextLoader to process context configuration [ContextConfigurationAttributes@7803bfd declaringClass = 'service.UserServiceTest', classes = '{class config.TestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].]
14:21 LOG: TRACE[Loaded [org.springframework.test.context.ContextCustomizerFactory] names: [org.springframework.test.context.web.socket.MockServerContainerContextCustomizerFactory]]
14:21 LOG: TRACE[Processing context initializers for configuration attributes [ContextConfigurationAttributes@7803bfd declaringClass = 'service.UserServiceTest', classes = '{class config.TestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']]
14:21 LOG: DEBUG[Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [service.UserServiceTest]]
14:21 LOG: DEBUG[@TestExecutionListeners is not present for class [service.UserServiceTest]: using defaults.]
14:21 LOG: INFO [Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]]
14:21 LOG: DEBUG[Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]]
14:21 LOG: INFO [Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@576f63f6, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2dca0d64, org.springframework.test.context.support.DirtiesContextTestExecutionListener@f80945f, org.springframework.test.context.transaction.TransactionalTestExecutionListener@ff684e1, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@23aa363a]]
14:21 LOG: TRACE[Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@576f63f6]
14:21 LOG: TRACE[Registering TestExecutionListener: org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2dca0d64]
14:21 LOG: TRACE[Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextTestExecutionListener@f80945f]
14:21 LOG: TRACE[Registering TestExecutionListener: org.springframework.test.context.transaction.TransactionalTestExecutionListener@ff684e1]
14:21 LOG: TRACE[Registering TestExecutionListener: org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@23aa363a]
14:21 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [service.UserServiceTest]]
14:21 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [service.UserServiceTest]]
14:21 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [service.UserServiceTest]]
14:21 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [service.UserServiceTest]]
14:21 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [service.UserServiceTest]]
14:21 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [service.UserServiceTest]]
14:21 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [service.UserServiceTest]]
14:21 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [service.UserServiceTest]]
14:21 LOG: TRACE[beforeTestClass(): class [service.UserServiceTest]]
14:21 LOG: DEBUG[Before test class: context [DefaultTestContext@53d102a2 testClass = service.UserServiceTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6c45ee6e testClass = service.UserServiceTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].]
14:21 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [service.UserServiceTest]]
14:21 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [service.UserServiceTest]]
14:21 LOG: TRACE[prepareTestInstance(): instance [service.UserServiceTest@7103cb56]]
14:21 LOG: DEBUG[Performing dependency injection for test context [[DefaultTestContext@53d102a2 testClass = service.UserServiceTest, testInstance = service.UserServiceTest@7103cb56, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6c45ee6e testClass = service.UserServiceTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].]
14:21 LOG: DEBUG[Delegating to AnnotationConfigContextLoader to load context from [MergedContextConfiguration@6c45ee6e testClass = service.UserServiceTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].]
14:21 LOG: DEBUG[Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@6c45ee6e testClass = service.UserServiceTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].]
14:21 LOG: DEBUG[Activating profiles []]
14:21 LOG: DEBUG[Registering annotated classes: {class config.TestConfig}]
14:21 LOG: TRACE[Refreshing org.springframework.context.support.GenericApplicationContext@34f7234e, started on Wed Feb 20 14:21:49 MSK 2019]
14:21 LOG: DEBUG[Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor']
14:21 LOG: TRACE[Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor']
14:21 LOG: TRACE[Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references]
14:21 LOG: TRACE[Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor']
14:21 LOG: TRACE[Registering bean definition for @Bean method config.TestConfig.getDataSource()]
14:21 LOG: TRACE[Registering bean definition for @Bean method config.TestConfig.getJdbcTemplate()]
14:21 LOG: TRACE[Registering bean definition for @Bean method config.TestConfig.userRepository()]
14:21 LOG: TRACE[Registering bean definition for @Bean method config.TestConfig.hotelRepository()]
14:21 LOG: TRACE[Registering bean definition for @Bean method config.TestConfig.userDataContext()]
14:21 LOG: TRACE[Registering bean definition for @Bean method config.TestConfig.hotelDataContext()]
14:21 LOG: TRACE[Registering bean definition for @Bean method config.TestConfig.userService()]
14:21 LOG: TRACE[Successfully enhanced config.TestConfig; enhanced class name is: config.TestConfig$$EnhancerBySpringCGLIB$$aff02d9f]
14:21 LOG: TRACE[Replacing bean definition 'testConfig' existing class 'config.TestConfig' with enhanced class 'config.TestConfig$$EnhancerBySpringCGLIB$$aff02d9f']
14:21 LOG: DEBUG[Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor']
14:21 LOG: TRACE[Creating instance of bean 'org.springframework.context.event.internalEventListenerProcessor']
14:21 LOG: TRACE[Eagerly caching bean 'org.springframework.context.event.internalEventListenerProcessor' to allow for resolving potential circular references]
14:21 LOG: TRACE[Finished creating instance of bean 'org.springframework.context.event.internalEventListenerProcessor']
14:21 LOG: DEBUG[Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory']
14:21 LOG: TRACE[Creating instance of bean 'org.springframework.context.event.internalEventListenerFactory']
14:21 LOG: TRACE[Eagerly caching bean 'org.springframework.context.event.internalEventListenerFactory' to allow for resolving potential circular references]
14:21 LOG: TRACE[Finished creating instance of bean 'org.springframework.context.event.internalEventListenerFactory']
14:21 LOG: DEBUG[Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor']
14:21 LOG: TRACE[Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor']
14:21 LOG: TRACE[Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references]
14:21 LOG: TRACE[Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor']
14:21 LOG: DEBUG[Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor']
14:21 LOG: TRACE[Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor']
14:21 LOG: TRACE[Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references]
14:21 LOG: TRACE[Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor']
14:21 LOG: TRACE[No 'messageSource' bean, using [Empty MessageSource]]
14:21 LOG: TRACE[No 'applicationEventMulticaster' bean, using [SimpleApplicationEventMulticaster]]
14:21 LOG: TRACE[Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6bb75258: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,testConfig,getDataSource,getJdbcTemplate,userRepository,hotelRepository,userDataContext,hotelDataContext,userService]; root of factory hierarchy]
14:21 LOG: TRACE[Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor']
14:21 LOG: TRACE[Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor']
14:21 LOG: TRACE[Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor']
14:21 LOG: TRACE[Returning cached instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor']
14:21 LOG: TRACE[Returning cached instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory']
14:21 LOG: DEBUG[Creating shared instance of singleton bean 'testConfig']
14:21 LOG: TRACE[Creating instance of bean 'testConfig']
14:21 LOG: TRACE[Eagerly caching bean 'testConfig' to allow for resolving potential circular references]
14:21 LOG: TRACE[Finished creating instance of bean 'testConfig']
14:21 LOG: DEBUG[Creating shared instance of singleton bean 'getDataSource']
14:21 LOG: TRACE[Creating instance of bean 'getDataSource']
14:21 LOG: TRACE[Returning cached instance of singleton bean 'testConfig']
14:21 LOG: INFO [Starting embedded database: url='jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa']
14:21 LOG: DEBUG[Fetching JDBC Connection from DataSource]
14:21 LOG: DEBUG[Creating new JDBC Driver Connection to [jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false]]
14:21 LOG: DEBUG[Executing SQL script from class path resource [db/migration/V1__init_schema.sql]]
14:21 LOG: DEBUG[0 returned as update count for SQL: CREATE TYPE TOUR_TYPE AS ENUM ( 'bus', 'sightseeing', 'shore_excursion', 'adventure', 'sporting', 'cruise', 'escorted', 'guided', 'rail', 'extreme' )]
14:21 LOG: DEBUG[0 returned as update count for SQL: CREATE TYPE HOTEL_FEATURE AS ENUM ( 'cleanliness', 'security', 'wi-fi', 'breakfast', 'parking', 'air_conditioning', 'food_delivery', 'pool', 'conference_hall', 'safe' )]
14:21 LOG: DEBUG[0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS "user" ( id SERIAL, login VARCHAR(255) UNIQUE NOT NULL, password VARCHAR(255) NOT NULL, PRIMARY KEY (id) )]
14:21 LOG: DEBUG[0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS "hotel" ( id SERIAL, name VARCHAR(255) NOT NULL, stars SMALLINT NOT NULL, website VARCHAR(255) NOT NULL, latitude DECIMAL(8, 6) NOT NULL, longitude DECIMAL(8, 6) NOT NULL, feature HOTEL_FEATURE NOT NULL, PRIMARY KEY (id) )]
14:21 LOG: DEBUG[0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS "country" ( id SERIAL, name VARCHAR(255), PRIMARY KEY (id) )]
14:21 LOG: DEBUG[0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS "tour" ( id SERIAL, photo VARCHAR(255), date DATE NOT NULL, duration INT NOT NULL, description TEXT NOT NULL, cost DECIMAL(19, 3) NOT NULL, tour_type TOUR_TYPE NOT NULL, hotel_id INT NOT NULL, country_id INT NOT NULL, PRIMARY KEY (id), FOREIGN KEY (hotel_id) REFERENCES "hotel" (id), FOREIGN KEY (country_id) REFERENCES "country" (id) )]
14:21 LOG: DEBUG[0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS "usertour" ( user_id INT UNIQUE NOT NULL, tour_id INT UNIQUE NOT NULL, PRIMARY KEY (user_id, tour_id), FOREIGN KEY (user_id) REFERENCES "user" (id), FOREIGN KEY (tour_id) REFERENCES "tour" (id) )]
14:21 LOG: DEBUG[0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS "review" ( id SERIAL, date DATE NOT NULL, text TEXT NOT NULL, user_id INT NOT NULL, tour_id INT NOT NULL, PRIMARY KEY (id), FOREIGN KEY (user_id) REFERENCES "user" (id), FOREIGN KEY (tour_id) REFERENCES "tour" (id) ) ]
14:21 LOG: DEBUG[Executed SQL script from class path resource [db/migration/V1__init_schema.sql] in 99 ms.]
14:21 LOG: DEBUG[Executing SQL script from class path resource [db/migration/V1_1__init_data.sql]]
14:21 LOG: DEBUG[1 returned as update count for SQL: INSERT INTO "user" (login, password) VALUES ('user1', 'user1')]
14:21 LOG: DEBUG[1 returned as update count for SQL: INSERT INTO "user" (login, password) VALUES ('user2', 'user2')]
14:21 LOG: DEBUG[1 returned as update count for SQL: INSERT INTO "user" (login, password) VALUES ('user3', 'user3')]
14:21 LOG: DEBUG[1 returned as update count for SQL: INSERT INTO "user" (login, password) VALUES ('user4', 'user4')]
14:21 LOG: DEBUG[1 returned as update count for SQL: INSERT INTO "country" (name) VALUES ('testCountry')]
14:21 LOG: DEBUG[1 returned as update count for SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test1', 4, 'test1', 1, 1, 'security')]
14:21 LOG: DEBUG[1 returned as update count for SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test2', 4, 'test2', 1, 1, 'security')]
14:21 LOG: DEBUG[1 returned as update count for SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test3', 4, 'test3', 1, 1, 'security')]
14:21 LOG: DEBUG[1 returned as update count for SQL: INSERT INTO "hotel" (name, stars, website, latitude, longitude, feature) VALUES ('test4', 4, 'test4', 1, 1, 'security')]
14:21 LOG: INFO [Shutting down embedded database: url='jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false']
14:21 LOG: DEBUG[Creating new JDBC Driver Connection to [jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false]]
14:21 LOG: WARN [Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'getDataSource' defined in config.TestConfig: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'getDataSource' threw exception; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #10 of class path resource [db/migration/V1_1__init_data.sql]: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id) VALUES ('test1.jpg', '12-12-2012', 12, 'description1', 505, 'guided', 1, 1); nested exception is org.h2.jdbc.JdbcSQLException: Невозможно преобразование строки "12-12-2012" в тип "DATE"
Cannot parse "DATE" constant "12-12-2012"; SQL statement:
INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id) VALUES ('test1.jpg', '12-12-2012', 12, 'description1', 505, 'guided', 1, 1) -- ('test1.jpg', '12-12-2012', 12, 'description1', 505, 'guided', 1, 1) [22007-197]]
14:21 LOG: TRACE[Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6bb75258: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,testConfig,getDataSource,getJdbcTemplate,userRepository,hotelRepository,userDataContext,hotelDataContext,userService]; root of factory hierarchy]
14:21 LOG: TRACE[Loaded [org.springframework.beans.BeanInfoFactory] names: [org.springframework.beans.ExtendedBeanInfoFactory]]
14:21 LOG: ERROR[Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2dca0d64] to prepare test instance [service.UserServiceTest@7103cb56]]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:125) ~[spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108) ~[spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118) ~[spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83) ~[spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246) [spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227) [spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289) [spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) [junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291) [spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246) [spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97) [spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) [junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61) [spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70) [spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) [junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190) [spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) [junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) [junit-rt.jar:?]
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'getDataSource' defined in config.TestConfig: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'getDataSource' threw exception; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #10 of class path resource [db/migration/V1_1__init_data.sql]: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id) VALUES ('test1.jpg', '12-12-2012', 12, 'description1', 505, 'guided', 1, 1); nested exception is org.h2.jdbc.JdbcSQLException: Невозможно преобразование строки "12-12-2012" в тип "DATE"
Cannot parse "DATE" constant "12-12-2012"; SQL statement:
INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id) VALUES ('test1.jpg', '12-12-2012', 12, 'description1', 505, 'guided', 1, 1) -- ('test1.jpg', '12-12-2012', 12, 'description1', 505, 'guided', 1, 1) [22007-197]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:627) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:456) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877) ~[spring-context-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549) ~[spring-context-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128) ~[spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60) ~[spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275) ~[spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243) ~[spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99) ~[spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117) ~[spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	... 24 more
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'getDataSource' threw exception; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #10 of class path resource [db/migration/V1_1__init_data.sql]: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id) VALUES ('test1.jpg', '12-12-2012', 12, 'description1', 505, 'guided', 1, 1); nested exception is org.h2.jdbc.JdbcSQLException: Невозможно преобразование строки "12-12-2012" в тип "DATE"
Cannot parse "DATE" constant "12-12-2012"; SQL statement:
INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id) VALUES ('test1.jpg', '12-12-2012', 12, 'description1', 505, 'guided', 1, 1) -- ('test1.jpg', '12-12-2012', 12, 'description1', 505, 'guided', 1, 1) [22007-197]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:456) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877) ~[spring-context-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549) ~[spring-context-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128) ~[spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60) ~[spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275) ~[spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243) ~[spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99) ~[spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117) ~[spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	... 24 more
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #10 of class path resource [db/migration/V1_1__init_data.sql]: INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id) VALUES ('test1.jpg', '12-12-2012', 12, 'description1', 505, 'guided', 1, 1); nested exception is org.h2.jdbc.JdbcSQLException: Невозможно преобразование строки "12-12-2012" в тип "DATE"
Cannot parse "DATE" constant "12-12-2012"; SQL statement:
INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id) VALUES ('test1.jpg', '12-12-2012', 12, 'description1', 505, 'guided', 1, 1) -- ('test1.jpg', '12-12-2012', 12, 'description1', 505, 'guided', 1, 1) [22007-197]
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:509) ~[spring-jdbc-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:238) ~[spring-jdbc-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:48) ~[spring-jdbc-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory.initDatabase(EmbeddedDatabaseFactory.java:200) ~[spring-jdbc-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory.getDatabase(EmbeddedDatabaseFactory.java:157) ~[spring-jdbc-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseBuilder.build(EmbeddedDatabaseBuilder.java:270) ~[spring-jdbc-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at config.TestConfig.getDataSource(TestConfig.java:30) ~[test-classes/:?]
	at config.TestConfig$$EnhancerBySpringCGLIB$$aff02d9f.CGLIB$getDataSource$0(<generated>) ~[test-classes/:?]
	at config.TestConfig$$EnhancerBySpringCGLIB$$aff02d9f$$FastClassBySpringCGLIB$$7f8c7ca7.invoke(<generated>) ~[test-classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244) ~[spring-core-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363) ~[spring-context-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at config.TestConfig$$EnhancerBySpringCGLIB$$aff02d9f.getDataSource(<generated>) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:456) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877) ~[spring-context-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549) ~[spring-context-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128) ~[spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60) ~[spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275) ~[spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243) ~[spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99) ~[spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117) ~[spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	... 24 more
Caused by: org.h2.jdbc.JdbcSQLException: Невозможно преобразование строки "12-12-2012" в тип "DATE"
Cannot parse "DATE" constant "12-12-2012"; SQL statement:
INSERT INTO "tour" (photo, date, duration, description, cost, tour_type, hotel_id, country_id) VALUES ('test1.jpg', '12-12-2012', 12, 'description1', 505, 'guided', 1, 1) -- ('test1.jpg', '12-12-2012', 12, 'description1', 505, 'guided', 1, 1) [22007-197]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:357) ~[h2-1.4.197.jar:1.4.197]
	at org.h2.message.DbException.get(DbException.java:168) ~[h2-1.4.197.jar:1.4.197]
	at org.h2.value.ValueDate.parse(ValueDate.java:74) ~[h2-1.4.197.jar:1.4.197]
	at org.h2.value.Value.convertTo(Value.java:1069) ~[h2-1.4.197.jar:1.4.197]
	at org.h2.table.Column.convert(Column.java:177) ~[h2-1.4.197.jar:1.4.197]
	at org.h2.command.dml.Insert.insertRows(Insert.java:166) ~[h2-1.4.197.jar:1.4.197]
	at org.h2.command.dml.Insert.update(Insert.java:134) ~[h2-1.4.197.jar:1.4.197]
	at org.h2.command.CommandContainer.update(CommandContainer.java:102) ~[h2-1.4.197.jar:1.4.197]
	at org.h2.command.Command.executeUpdate(Command.java:261) ~[h2-1.4.197.jar:1.4.197]
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:233) ~[h2-1.4.197.jar:1.4.197]
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:205) ~[h2-1.4.197.jar:1.4.197]
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:488) ~[spring-jdbc-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:238) ~[spring-jdbc-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:48) ~[spring-jdbc-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory.initDatabase(EmbeddedDatabaseFactory.java:200) ~[spring-jdbc-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory.getDatabase(EmbeddedDatabaseFactory.java:157) ~[spring-jdbc-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseBuilder.build(EmbeddedDatabaseBuilder.java:270) ~[spring-jdbc-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at config.TestConfig.getDataSource(TestConfig.java:30) ~[test-classes/:?]
	at config.TestConfig$$EnhancerBySpringCGLIB$$aff02d9f.CGLIB$getDataSource$0(<generated>) ~[test-classes/:?]
	at config.TestConfig$$EnhancerBySpringCGLIB$$aff02d9f$$FastClassBySpringCGLIB$$7f8c7ca7.invoke(<generated>) ~[test-classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244) ~[spring-core-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363) ~[spring-context-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at config.TestConfig$$EnhancerBySpringCGLIB$$aff02d9f.getDataSource(<generated>) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:456) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877) ~[spring-context-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549) ~[spring-context-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128) ~[spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60) ~[spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275) ~[spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243) ~[spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99) ~[spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117) ~[spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	... 24 more
Caused by: java.lang.IllegalArgumentException: 12-12-2012
	at org.h2.util.DateTimeUtils.parseDateValue(DateTimeUtils.java:351) ~[h2-1.4.197.jar:1.4.197]
	at org.h2.value.ValueDate.parse(ValueDate.java:72) ~[h2-1.4.197.jar:1.4.197]
	at org.h2.value.Value.convertTo(Value.java:1069) ~[h2-1.4.197.jar:1.4.197]
	at org.h2.table.Column.convert(Column.java:177) ~[h2-1.4.197.jar:1.4.197]
	at org.h2.command.dml.Insert.insertRows(Insert.java:166) ~[h2-1.4.197.jar:1.4.197]
	at org.h2.command.dml.Insert.update(Insert.java:134) ~[h2-1.4.197.jar:1.4.197]
	at org.h2.command.CommandContainer.update(CommandContainer.java:102) ~[h2-1.4.197.jar:1.4.197]
	at org.h2.command.Command.executeUpdate(Command.java:261) ~[h2-1.4.197.jar:1.4.197]
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:233) ~[h2-1.4.197.jar:1.4.197]
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:205) ~[h2-1.4.197.jar:1.4.197]
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:488) ~[spring-jdbc-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:238) ~[spring-jdbc-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:48) ~[spring-jdbc-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory.initDatabase(EmbeddedDatabaseFactory.java:200) ~[spring-jdbc-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory.getDatabase(EmbeddedDatabaseFactory.java:157) ~[spring-jdbc-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseBuilder.build(EmbeddedDatabaseBuilder.java:270) ~[spring-jdbc-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at config.TestConfig.getDataSource(TestConfig.java:30) ~[test-classes/:?]
	at config.TestConfig$$EnhancerBySpringCGLIB$$aff02d9f.CGLIB$getDataSource$0(<generated>) ~[test-classes/:?]
	at config.TestConfig$$EnhancerBySpringCGLIB$$aff02d9f$$FastClassBySpringCGLIB$$7f8c7ca7.invoke(<generated>) ~[test-classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244) ~[spring-core-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363) ~[spring-context-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at config.TestConfig$$EnhancerBySpringCGLIB$$aff02d9f.getDataSource(<generated>) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:456) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877) ~[spring-context-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549) ~[spring-context-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128) ~[spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60) ~[spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275) ~[spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243) ~[spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99) ~[spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117) ~[spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	... 24 more
14:21 LOG: TRACE[afterTestClass(): class [service.UserServiceTest]]
14:21 LOG: DEBUG[After test class: context [DefaultTestContext@53d102a2 testClass = service.UserServiceTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6c45ee6e testClass = service.UserServiceTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].]
14:24 LOG: DEBUG[SpringJUnit4ClassRunner constructor called with [class service.UserServiceTest]]
14:24 LOG: DEBUG[Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]]
14:24 LOG: DEBUG[Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]]
14:24 LOG: DEBUG[Instantiating TestContextBootstrapper for test class [service.UserServiceTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]]
14:24 LOG: TRACE[Retrieved @ContextConfiguration [@org.springframework.test.context.ContextConfiguration(inheritInitializers=true, inheritLocations=true, initializers=[], name=, value=[], loader=interface org.springframework.test.context.ContextLoader, classes=[class config.TestConfig], locations=[])] for declaring class [service.UserServiceTest].]
14:24 LOG: TRACE[Resolved context configuration attributes: [ContextConfigurationAttributes@21a21c64 declaringClass = 'service.UserServiceTest', classes = '{class config.TestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']]
14:24 LOG: TRACE[Resolving ContextLoader for context configuration attributes [ContextConfigurationAttributes@21a21c64 declaringClass = 'service.UserServiceTest', classes = '{class config.TestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']]
14:24 LOG: TRACE[Using ContextLoader class [org.springframework.test.context.support.DelegatingSmartContextLoader] for test class [service.UserServiceTest]]
14:24 LOG: TRACE[Processing locations and classes for context configuration attributes [ContextConfigurationAttributes@21a21c64 declaringClass = 'service.UserServiceTest', classes = '{class config.TestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']]
14:24 LOG: DEBUG[Delegating to AnnotationConfigContextLoader to process context configuration [ContextConfigurationAttributes@21a21c64 declaringClass = 'service.UserServiceTest', classes = '{class config.TestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].]
14:24 LOG: TRACE[Loaded [org.springframework.test.context.ContextCustomizerFactory] names: [org.springframework.test.context.web.socket.MockServerContainerContextCustomizerFactory]]
14:24 LOG: TRACE[Processing context initializers for configuration attributes [ContextConfigurationAttributes@21a21c64 declaringClass = 'service.UserServiceTest', classes = '{class config.TestConfig}', locations = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader']]
14:24 LOG: DEBUG[Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [service.UserServiceTest]]
14:24 LOG: DEBUG[@TestExecutionListeners is not present for class [service.UserServiceTest]: using defaults.]
14:24 LOG: INFO [Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]]
14:24 LOG: DEBUG[Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]]
14:24 LOG: INFO [Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@5d8bafa9, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@576f63f6, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2dca0d64, org.springframework.test.context.transaction.TransactionalTestExecutionListener@f80945f, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@ff684e1]]
14:24 LOG: TRACE[Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@5d8bafa9]
14:24 LOG: TRACE[Registering TestExecutionListener: org.springframework.test.context.support.DependencyInjectionTestExecutionListener@576f63f6]
14:24 LOG: TRACE[Registering TestExecutionListener: org.springframework.test.context.support.DirtiesContextTestExecutionListener@2dca0d64]
14:24 LOG: TRACE[Registering TestExecutionListener: org.springframework.test.context.transaction.TransactionalTestExecutionListener@f80945f]
14:24 LOG: TRACE[Registering TestExecutionListener: org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@ff684e1]
14:24 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [service.UserServiceTest]]
14:24 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [service.UserServiceTest]]
14:24 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [service.UserServiceTest]]
14:24 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [service.UserServiceTest]]
14:24 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [service.UserServiceTest]]
14:24 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [service.UserServiceTest]]
14:24 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [service.UserServiceTest]]
14:24 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [service.UserServiceTest]]
14:24 LOG: TRACE[beforeTestClass(): class [service.UserServiceTest]]
14:24 LOG: DEBUG[Before test class: context [DefaultTestContext@35d08e6c testClass = UserServiceTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@53d102a2 testClass = UserServiceTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].]
14:24 LOG: DEBUG[Retrieved @ProfileValueSourceConfiguration [null] for test class [service.UserServiceTest]]
14:24 LOG: DEBUG[Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [service.UserServiceTest]]
14:24 LOG: TRACE[prepareTestInstance(): instance [service.UserServiceTest@178213b]]
14:24 LOG: DEBUG[Performing dependency injection for test context [[DefaultTestContext@35d08e6c testClass = UserServiceTest, testInstance = service.UserServiceTest@178213b, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@53d102a2 testClass = UserServiceTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]]].]
14:24 LOG: DEBUG[Delegating to AnnotationConfigContextLoader to load context from [MergedContextConfiguration@53d102a2 testClass = UserServiceTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].]
14:24 LOG: DEBUG[Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@53d102a2 testClass = UserServiceTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].]
14:24 LOG: DEBUG[Activating profiles []]
14:24 LOG: DEBUG[Registering annotated classes: {class config.TestConfig}]
14:24 LOG: TRACE[Refreshing org.springframework.context.support.GenericApplicationContext@2f48b3d2, started on Wed Feb 20 14:24:39 MSK 2019]
14:24 LOG: DEBUG[Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor']
14:24 LOG: TRACE[Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor']
14:24 LOG: TRACE[Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references]
14:24 LOG: TRACE[Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor']
14:24 LOG: TRACE[Registering bean definition for @Bean method config.TestConfig.userRepository()]
14:24 LOG: TRACE[Registering bean definition for @Bean method config.TestConfig.hotelRepository()]
14:24 LOG: TRACE[Registering bean definition for @Bean method config.TestConfig.userService()]
14:24 LOG: TRACE[Successfully enhanced config.TestConfig; enhanced class name is: config.TestConfig$$EnhancerBySpringCGLIB$$94299273]
14:24 LOG: TRACE[Replacing bean definition 'testConfig' existing class 'config.TestConfig' with enhanced class 'config.TestConfig$$EnhancerBySpringCGLIB$$94299273']
14:24 LOG: DEBUG[Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor']
14:24 LOG: TRACE[Creating instance of bean 'org.springframework.context.event.internalEventListenerProcessor']
14:24 LOG: TRACE[Eagerly caching bean 'org.springframework.context.event.internalEventListenerProcessor' to allow for resolving potential circular references]
14:24 LOG: TRACE[Finished creating instance of bean 'org.springframework.context.event.internalEventListenerProcessor']
14:24 LOG: DEBUG[Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory']
14:24 LOG: TRACE[Creating instance of bean 'org.springframework.context.event.internalEventListenerFactory']
14:24 LOG: TRACE[Eagerly caching bean 'org.springframework.context.event.internalEventListenerFactory' to allow for resolving potential circular references]
14:24 LOG: TRACE[Finished creating instance of bean 'org.springframework.context.event.internalEventListenerFactory']
14:24 LOG: DEBUG[Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor']
14:24 LOG: TRACE[Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor']
14:24 LOG: TRACE[Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references]
14:24 LOG: TRACE[Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor']
14:24 LOG: DEBUG[Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor']
14:24 LOG: TRACE[Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor']
14:24 LOG: TRACE[Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references]
14:24 LOG: TRACE[Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor']
14:24 LOG: TRACE[No 'messageSource' bean, using [Empty MessageSource]]
14:24 LOG: TRACE[No 'applicationEventMulticaster' bean, using [SimpleApplicationEventMulticaster]]
14:24 LOG: TRACE[Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@5ad10c1a: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,testConfig,userRepository,hotelRepository,userService]; root of factory hierarchy]
14:24 LOG: TRACE[Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor']
14:24 LOG: TRACE[Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor']
14:24 LOG: TRACE[Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor']
14:24 LOG: TRACE[Returning cached instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor']
14:24 LOG: TRACE[Returning cached instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory']
14:24 LOG: DEBUG[Creating shared instance of singleton bean 'testConfig']
14:24 LOG: TRACE[Creating instance of bean 'testConfig']
14:24 LOG: TRACE[Eagerly caching bean 'testConfig' to allow for resolving potential circular references]
14:24 LOG: TRACE[Finished creating instance of bean 'testConfig']
14:24 LOG: DEBUG[Creating shared instance of singleton bean 'userRepository']
14:24 LOG: TRACE[Creating instance of bean 'userRepository']
14:24 LOG: TRACE[Returning cached instance of singleton bean 'testConfig']
14:24 LOG: TRACE[Loaded [org.springframework.beans.BeanInfoFactory] names: [org.springframework.beans.ExtendedBeanInfoFactory]]
14:24 LOG: TRACE[Getting BeanInfo for class [com.epam.travelagency.repository.UserRepository]]
14:24 LOG: TRACE[Caching PropertyDescriptors for class [com.epam.travelagency.repository.UserRepository]]
14:24 LOG: TRACE[Found bean property 'class' of type [java.lang.Class]]
14:24 LOG: TRACE[Found bean property 'dataContext' of type [com.epam.travelagency.storage.DataContext]]
14:24 LOG: TRACE[Registered injected element on class [com.epam.travelagency.repository.UserRepository]: AutowiredMethodElement for public void com.epam.travelagency.repository.Repository.setDataContext(com.epam.travelagency.storage.DataContext)]
14:24 LOG: TRACE[Eagerly caching bean 'userRepository' to allow for resolving potential circular references]
14:24 LOG: TRACE[Processing injected element of bean 'userRepository': AutowiredMethodElement for public void com.epam.travelagency.repository.Repository.setDataContext(com.epam.travelagency.storage.DataContext)]
14:24 LOG: WARN [Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userRepository': Unsatisfied dependency expressed through method 'setDataContext' parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.epam.travelagency.storage.DataContext<com.epam.travelagency.bean.User>' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}]
14:24 LOG: TRACE[Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@5ad10c1a: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,testConfig,userRepository,hotelRepository,userService]; root of factory hierarchy]
14:24 LOG: ERROR[Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@576f63f6] to prepare test instance [service.UserServiceTest@178213b]]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:125) ~[spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108) ~[spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:118) ~[spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83) ~[spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246) [spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227) [spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289) [spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) [junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291) [spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246) [spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97) [spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) [junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) [junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61) [spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70) [spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) [junit-4.12.jar:4.12]
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190) [spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) [junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) [junit-rt.jar:?]
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userRepository': Unsatisfied dependency expressed through method 'setDataContext' parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.epam.travelagency.storage.DataContext<com.epam.travelagency.bean.User>' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:676) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877) ~[spring-context-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549) ~[spring-context-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128) ~[spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60) ~[spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275) ~[spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243) ~[spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99) ~[spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117) ~[spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	... 24 more
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.epam.travelagency.storage.DataContext<com.epam.travelagency.bean.User>' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoMatchingBeanFound(DefaultListableBeanFactory.java:1654) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1213) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:668) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877) ~[spring-context-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549) ~[spring-context-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:128) ~[spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60) ~[spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:275) ~[spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:243) ~[spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99) ~[spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117) ~[spring-test-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	... 24 more
14:24 LOG: TRACE[afterTestClass(): class [service.UserServiceTest]]
14:24 LOG: DEBUG[After test class: context [DefaultTestContext@35d08e6c testClass = UserServiceTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@53d102a2 testClass = UserServiceTest, locations = '{}', classes = '{class config.TestConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].]
